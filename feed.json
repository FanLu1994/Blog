{
    "version": "https://jsonfeed.org/version/1",
    "title": "何妨吟啸且徐行",
    "description": "",
    "home_page_url": "https://fanlu.top",
    "items": [
        {
            "id": "https://fanlu.top/2023/07/16/vue-golang-webassembly%E5%88%9D%E4%BD%93%E9%AA%8C/",
            "url": "https://fanlu.top/2023/07/16/vue-golang-webassembly%E5%88%9D%E4%BD%93%E9%AA%8C/",
            "title": "vue-golang-webassembly初体验",
            "date_published": "2023-07-16T04:44:21.000Z",
            "content_html": "<h1 id=\"golang-部分\"><a class=\"markdownIt-Anchor\" href=\"#golang-部分\">#</a> golang 部分</h1>\n<blockquote>\n<p>参考 https://geektutu.com/post/quick-go-wasm.html</p>\n</blockquote>\n<h2 id=\"开发\"><a class=\"markdownIt-Anchor\" href=\"#开发\">#</a> 开发</h2>\n<pre><code>package main  \n  \nimport &quot;syscall/js&quot;  //  goland可能会报错，忽略即可\n  \nfunc main() &#123;  \n   alert := js.Global().Get(&quot;alert&quot;)  \n   alert.Invoke(&quot;Hello World!&quot;)  \n&#125;\n</code></pre>\n<h2 id=\"编译\"><a class=\"markdownIt-Anchor\" href=\"#编译\">#</a> 编译</h2>\n<p>不能用 <code>go build</code>  直接编译<br>\n windows 下面可以在 git bash 窗口编译</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token assign-left variable\">GOOS</span><span class=\"token operator\">=</span>js <span class=\"token assign-left variable\">GOARCH</span><span class=\"token operator\">=</span>wasm go build <span class=\"token parameter variable\">-o</span> static/main.wasm</pre></td></tr></table></figure><p>编译后，会在项目目录下生成 static/main.wasm</p>\n<h2 id=\"vue部分\"><a class=\"markdownIt-Anchor\" href=\"#vue部分\">#</a> vue 部分</h2>\n<h3 id=\"创建项目\"><a class=\"markdownIt-Anchor\" href=\"#创建项目\">#</a> 创建项目</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> init vite vue-wasm</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token builtin class-name\">cd</span> vue-wasm</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token function\">npm</span> <span class=\"token function\">install</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token function\">npm</span> run dev</pre></td></tr></table></figure><h3 id=\"引入wasm\"><a class=\"markdownIt-Anchor\" href=\"#引入wasm\">#</a> 引入 wasm</h3>\n<ol>\n<li>把 wasm_exec.js (注意有不同的版本，报错了可以换版本) 以及 main.wasm 文件复制到 vue 项目下 /static</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// Copyright 2018 The Go Authors. All rights reserved.  </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// Use of this source code is governed by a BSD-style  </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// license that can be found in the LICENSE file.  </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token comment\">// Map multiple JavaScript environments to a single common API,  </span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token comment\">// preferring web standards over Node.js API.   //   // Environments considered:   // - Browsers   // - Node.js   // - Electron   // - Parcel   // - Webpack  </span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> global <span class=\"token operator\">!==</span> <span class=\"token string\">\"undefined\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token comment\">// global already exists  </span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> window <span class=\"token operator\">!==</span> <span class=\"token string\">\"undefined\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      window<span class=\"token punctuation\">.</span>global <span class=\"token operator\">=</span> window<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> self <span class=\"token operator\">!==</span> <span class=\"token string\">\"undefined\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      self<span class=\"token punctuation\">.</span>global <span class=\"token operator\">=</span> self<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cannot export Go (neither global, window nor self is defined)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>global<span class=\"token punctuation\">.</span>require <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> require <span class=\"token operator\">!==</span> <span class=\"token string\">\"undefined\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      global<span class=\"token punctuation\">.</span>require <span class=\"token operator\">=</span> require<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>global<span class=\"token punctuation\">.</span>fs <span class=\"token operator\">&amp;&amp;</span> global<span class=\"token punctuation\">.</span>require<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fs\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> fs <span class=\"token operator\">===</span> <span class=\"token string\">\"object\"</span> <span class=\"token operator\">&amp;&amp;</span> fs <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length <span class=\"token operator\">!==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>         global<span class=\"token punctuation\">.</span>fs <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>   <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">enosys</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token keyword\">const</span> err <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"not implemented\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      err<span class=\"token punctuation\">.</span>code <span class=\"token operator\">=</span> <span class=\"token string\">\"ENOSYS\"</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token keyword\">return</span> err<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"35\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>global<span class=\"token punctuation\">.</span>fs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      <span class=\"token keyword\">let</span> outputBuf <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>      global<span class=\"token punctuation\">.</span>fs <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"38\"></td><td><pre>         <span class=\"token literal-property property\">constants</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token constant\">O_WRONLY</span><span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">O_RDWR</span><span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">O_CREAT</span><span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">O_TRUNC</span><span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">O_APPEND</span><span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">O_EXCL</span><span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// unused  </span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>         <span class=\"token function\">writeSync</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fd<span class=\"token punctuation\">,</span> buf</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            outputBuf <span class=\"token operator\">+=</span> decoder<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token keyword\">const</span> nl <span class=\"token operator\">=</span> outputBuf<span class=\"token punctuation\">.</span><span class=\"token function\">lastIndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nl <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"43\"></td><td><pre>               console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>outputBuf<span class=\"token punctuation\">.</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> nl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"44\"></td><td><pre>               outputBuf <span class=\"token operator\">=</span> outputBuf<span class=\"token punctuation\">.</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span>nl <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token keyword\">return</span> buf<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"47\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"48\"></td><td><pre>         <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fd<span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">,</span> offset<span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>offset <span class=\"token operator\">!==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> length <span class=\"token operator\">!==</span> buf<span class=\"token punctuation\">.</span>length <span class=\"token operator\">||</span> position <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"50\"></td><td><pre>               <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"51\"></td><td><pre>               <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token keyword\">const</span> n <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">writeSync</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"54\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"55\"></td><td><pre>         <span class=\"token function\">chmod</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> mode<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"56\"></td><td><pre>         <span class=\"token function\">chown</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> uid<span class=\"token punctuation\">,</span> gid<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"57\"></td><td><pre>         <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fd<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"58\"></td><td><pre>         <span class=\"token function\">fchmod</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fd<span class=\"token punctuation\">,</span> mode<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"59\"></td><td><pre>         <span class=\"token function\">fchown</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fd<span class=\"token punctuation\">,</span> uid<span class=\"token punctuation\">,</span> gid<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"60\"></td><td><pre>         <span class=\"token function\">fstat</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fd<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"61\"></td><td><pre>         <span class=\"token function\">fsync</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fd<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"62\"></td><td><pre>         <span class=\"token function\">ftruncate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fd<span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"63\"></td><td><pre>         <span class=\"token function\">lchown</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> uid<span class=\"token punctuation\">,</span> gid<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"64\"></td><td><pre>         <span class=\"token function\">link</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> link<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"65\"></td><td><pre>         <span class=\"token function\">lstat</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"66\"></td><td><pre>         <span class=\"token function\">mkdir</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> perm<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"67\"></td><td><pre>         <span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> flags<span class=\"token punctuation\">,</span> mode<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"68\"></td><td><pre>         <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fd<span class=\"token punctuation\">,</span> buffer<span class=\"token punctuation\">,</span> offset<span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"69\"></td><td><pre>         <span class=\"token function\">readdir</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"70\"></td><td><pre>         <span class=\"token function\">readlink</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"71\"></td><td><pre>         <span class=\"token function\">rename</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">from<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"72\"></td><td><pre>         <span class=\"token function\">rmdir</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"73\"></td><td><pre>         <span class=\"token function\">stat</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"74\"></td><td><pre>         <span class=\"token function\">symlink</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> link<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"75\"></td><td><pre>         <span class=\"token function\">truncate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"76\"></td><td><pre>         <span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"77\"></td><td><pre>         <span class=\"token function\">utimes</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> atime<span class=\"token punctuation\">,</span> mtime<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"78\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"79\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"80\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"81\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>global<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"82\"></td><td><pre>      global<span class=\"token punctuation\">.</span>process <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"83\"></td><td><pre>         <span class=\"token function\">getuid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"84\"></td><td><pre>         <span class=\"token function\">getgid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"85\"></td><td><pre>         <span class=\"token function\">geteuid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"86\"></td><td><pre>         <span class=\"token function\">getegid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"87\"></td><td><pre>         <span class=\"token function\">getgroups</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">throw</span> <span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"88\"></td><td><pre>         <span class=\"token literal-property property\">pid</span><span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"89\"></td><td><pre>         <span class=\"token literal-property property\">ppid</span><span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"90\"></td><td><pre>         <span class=\"token function\">umask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">throw</span> <span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"91\"></td><td><pre>         <span class=\"token function\">cwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">throw</span> <span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"92\"></td><td><pre>         <span class=\"token function\">chdir</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">throw</span> <span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"93\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"94\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"95\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"96\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>global<span class=\"token punctuation\">.</span>crypto <span class=\"token operator\">&amp;&amp;</span> global<span class=\"token punctuation\">.</span>require<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"97\"></td><td><pre>      <span class=\"token keyword\">const</span> nodeCrypto <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"crypto\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"98\"></td><td><pre>      global<span class=\"token punctuation\">.</span>crypto <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"99\"></td><td><pre>         <span class=\"token function\">getRandomValues</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"100\"></td><td><pre>            nodeCrypto<span class=\"token punctuation\">.</span><span class=\"token function\">randomFillSync</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"101\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"102\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"103\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"104\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>global<span class=\"token punctuation\">.</span>crypto<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"105\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"global.crypto is not available, polyfill required (getRandomValues only)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"106\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"107\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"108\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>global<span class=\"token punctuation\">.</span>performance<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"109\"></td><td><pre>      global<span class=\"token punctuation\">.</span>performance <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"110\"></td><td><pre>         <span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"111\"></td><td><pre>            <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>sec<span class=\"token punctuation\">,</span> nsec<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span><span class=\"token function\">hrtime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"112\"></td><td><pre>            <span class=\"token keyword\">return</span> sec <span class=\"token operator\">*</span> <span class=\"token number\">1000</span> <span class=\"token operator\">+</span> nsec <span class=\"token operator\">/</span> <span class=\"token number\">1000000</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"113\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"114\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"115\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"116\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"117\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>global<span class=\"token punctuation\">.</span>TextEncoder <span class=\"token operator\">&amp;&amp;</span> global<span class=\"token punctuation\">.</span>require<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"118\"></td><td><pre>      global<span class=\"token punctuation\">.</span>TextEncoder <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"util\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>TextEncoder<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"119\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"120\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>global<span class=\"token punctuation\">.</span>TextEncoder<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"121\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"global.TextEncoder is not available, polyfill required\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"122\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"123\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"124\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>global<span class=\"token punctuation\">.</span>TextDecoder <span class=\"token operator\">&amp;&amp;</span> global<span class=\"token punctuation\">.</span>require<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"125\"></td><td><pre>      global<span class=\"token punctuation\">.</span>TextDecoder <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"util\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>TextDecoder<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"126\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"127\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>global<span class=\"token punctuation\">.</span>TextDecoder<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"128\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"global.TextDecoder is not available, polyfill required\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"129\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"130\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"131\"></td><td><pre>   <span class=\"token comment\">// End of polyfills for common API.  </span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"133\"></td><td><pre>   <span class=\"token keyword\">const</span> encoder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextEncoder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"134\"></td><td><pre>   <span class=\"token keyword\">const</span> decoder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextDecoder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"135\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"136\"></td><td><pre>   global<span class=\"token punctuation\">.</span>Go <span class=\"token operator\">=</span> <span class=\"token keyword\">class</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"137\"></td><td><pre>      <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"138\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>argv <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"js\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"139\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>env <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"140\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exit</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">code</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"141\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>code <span class=\"token operator\">!==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"142\"></td><td><pre>               console<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"exit code:\"</span><span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"143\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"144\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"145\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_exitPromise <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"146\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_resolveExitPromise <span class=\"token operator\">=</span> resolve<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"147\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"148\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_pendingEvent <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"149\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scheduledTimeouts <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"150\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_nextCallbackTimeoutID <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"151\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"152\"></td><td><pre>         <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">setInt64</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">addr<span class=\"token punctuation\">,</span> v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"153\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint32</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"154\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint32</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>v <span class=\"token operator\">/</span> <span class=\"token number\">4294967296</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"155\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"156\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"157\"></td><td><pre>         <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getInt64</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">addr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"158\"></td><td><pre>            <span class=\"token keyword\">const</span> low <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">getUint32</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"159\"></td><td><pre>            <span class=\"token keyword\">const</span> high <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">getInt32</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"160\"></td><td><pre>            <span class=\"token keyword\">return</span> low <span class=\"token operator\">+</span> high <span class=\"token operator\">*</span> <span class=\"token number\">4294967296</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"161\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"162\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"163\"></td><td><pre>         <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">loadValue</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">addr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"164\"></td><td><pre>            <span class=\"token keyword\">const</span> f <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">getFloat64</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"165\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>f <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"166\"></td><td><pre>               <span class=\"token keyword\">return</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"167\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"168\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"169\"></td><td><pre>               <span class=\"token keyword\">return</span> f<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"170\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"171\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"172\"></td><td><pre>            <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">getUint32</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"173\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_values<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"174\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"175\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"176\"></td><td><pre>         <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">storeValue</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">addr<span class=\"token punctuation\">,</span> v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"177\"></td><td><pre>            <span class=\"token keyword\">const</span> nanHead <span class=\"token operator\">=</span> <span class=\"token number\">0x7FF80000</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"178\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"179\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> v <span class=\"token operator\">===</span> <span class=\"token string\">\"number\"</span> <span class=\"token operator\">&amp;&amp;</span> v <span class=\"token operator\">!==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"180\"></td><td><pre>               <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"181\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint32</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> nanHead<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"182\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint32</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"183\"></td><td><pre>                  <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>               <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"184\"></td><td><pre>               <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat64</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"185\"></td><td><pre>               <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"186\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"187\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>v <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"188\"></td><td><pre>               <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat64</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"189\"></td><td><pre>               <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"190\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"191\"></td><td><pre>            <span class=\"token keyword\">let</span> id <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_ids<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"192\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>id <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"193\"></td><td><pre>               id <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_idPool<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"194\"></td><td><pre>               <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>id <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"195\"></td><td><pre>                  id <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_values<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"196\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"197\"></td><td><pre>               <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_values<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"198\"></td><td><pre>               <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_goRefCounts<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"199\"></td><td><pre>               <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_ids<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"200\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"201\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_goRefCounts<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"202\"></td><td><pre>            <span class=\"token keyword\">let</span> typeFlag <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"203\"></td><td><pre>            <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> v<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"204\"></td><td><pre>               <span class=\"token keyword\">case</span> <span class=\"token string\">\"object\"</span><span class=\"token operator\">:</span>  </pre></td></tr><tr><td data-num=\"205\"></td><td><pre>                  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>v <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"206\"></td><td><pre>                     typeFlag <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"207\"></td><td><pre>                  <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"208\"></td><td><pre>                  <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"209\"></td><td><pre>               <span class=\"token keyword\">case</span> <span class=\"token string\">\"string\"</span><span class=\"token operator\">:</span>  </pre></td></tr><tr><td data-num=\"210\"></td><td><pre>                  typeFlag <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"211\"></td><td><pre>                  <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>               <span class=\"token keyword\">case</span> <span class=\"token string\">\"symbol\"</span><span class=\"token operator\">:</span>  </pre></td></tr><tr><td data-num=\"212\"></td><td><pre>                  typeFlag <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"213\"></td><td><pre>                  <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>               <span class=\"token keyword\">case</span> <span class=\"token string\">\"function\"</span><span class=\"token operator\">:</span>  </pre></td></tr><tr><td data-num=\"214\"></td><td><pre>                  typeFlag <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"215\"></td><td><pre>                  <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"216\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint32</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> nanHead <span class=\"token operator\">|</span> typeFlag<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"217\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint32</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"218\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"219\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"220\"></td><td><pre>         <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">loadSlice</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">addr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"221\"></td><td><pre>            <span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token function\">getInt64</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"222\"></td><td><pre>            <span class=\"token keyword\">const</span> len <span class=\"token operator\">=</span> <span class=\"token function\">getInt64</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"223\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">,</span> len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"224\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"225\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"226\"></td><td><pre>         <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">loadSliceOfValues</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">addr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"227\"></td><td><pre>            <span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token function\">getInt64</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"228\"></td><td><pre>            <span class=\"token keyword\">const</span> len <span class=\"token operator\">=</span> <span class=\"token function\">getInt64</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"229\"></td><td><pre>            <span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span>len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"230\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"231\"></td><td><pre>               a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>array <span class=\"token operator\">+</span> i <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"232\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"233\"></td><td><pre>            <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"234\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"235\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"236\"></td><td><pre>         <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">loadString</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">addr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"237\"></td><td><pre>            <span class=\"token keyword\">const</span> saddr <span class=\"token operator\">=</span> <span class=\"token function\">getInt64</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"238\"></td><td><pre>            <span class=\"token keyword\">const</span> len <span class=\"token operator\">=</span> <span class=\"token function\">getInt64</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"239\"></td><td><pre>            <span class=\"token keyword\">return</span> decoder<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">DataView</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">,</span> saddr<span class=\"token punctuation\">,</span> len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"240\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"241\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"242\"></td><td><pre>         <span class=\"token keyword\">const</span> timeOrigin <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> performance<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"243\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>importObject <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"244\"></td><td><pre>            <span class=\"token literal-property property\">go</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"245\"></td><td><pre>               <span class=\"token comment\">// Go's SP does not change as long as no Go code is running. Some operations (e.g. calls, getters and setters)  </span></pre></td></tr><tr><td data-num=\"246\"></td><td><pre>               <span class=\"token comment\">// may synchronously trigger a Go event handler. This makes Go code get executed in the middle of the imported               // function. A goroutine can switch to a new stack if the current stack is too small (see morestack function).               // This changes the SP, thus we have to update the SP used by the imported function.  </span></pre></td></tr><tr><td data-num=\"247\"></td><td><pre>               <span class=\"token comment\">// func wasmExit(code int32)               \"runtime.wasmExit\": (sp) => &#123;  </span></pre></td></tr><tr><td data-num=\"248\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"249\"></td><td><pre>                  <span class=\"token keyword\">const</span> code <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">getInt32</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"250\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>exited <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"251\"></td><td><pre>                  <span class=\"token keyword\">delete</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"252\"></td><td><pre>                  <span class=\"token keyword\">delete</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_values<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"253\"></td><td><pre>                  <span class=\"token keyword\">delete</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_goRefCounts<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"254\"></td><td><pre>                  <span class=\"token keyword\">delete</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_ids<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"255\"></td><td><pre>                  <span class=\"token keyword\">delete</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_idPool<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"256\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"257\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"258\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"259\"></td><td><pre>               <span class=\"token comment\">// func wasmWrite(fd uintptr, p unsafe.Pointer, n int32)  </span></pre></td></tr><tr><td data-num=\"260\"></td><td><pre>               <span class=\"token string-property property\">\"runtime.wasmWrite\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"261\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"262\"></td><td><pre>                  <span class=\"token keyword\">const</span> fd <span class=\"token operator\">=</span> <span class=\"token function\">getInt64</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"263\"></td><td><pre>                  <span class=\"token keyword\">const</span> p <span class=\"token operator\">=</span> <span class=\"token function\">getInt64</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"264\"></td><td><pre>                  <span class=\"token keyword\">const</span> n <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">getInt32</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"265\"></td><td><pre>                  fs<span class=\"token punctuation\">.</span><span class=\"token function\">writeSync</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"266\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"267\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"268\"></td><td><pre>               <span class=\"token comment\">// func resetMemoryDataView()  </span></pre></td></tr><tr><td data-num=\"269\"></td><td><pre>               <span class=\"token string-property property\">\"runtime.resetMemoryDataView\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"270\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"271\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataView</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"272\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"273\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"274\"></td><td><pre>               <span class=\"token comment\">// func nanotime1() int64  </span></pre></td></tr><tr><td data-num=\"275\"></td><td><pre>               <span class=\"token string-property property\">\"runtime.nanotime1\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"276\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"277\"></td><td><pre>                  <span class=\"token function\">setInt64</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>timeOrigin <span class=\"token operator\">+</span> performance<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"278\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"279\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"280\"></td><td><pre>               <span class=\"token comment\">// func walltime() (sec int64, nsec int32)  </span></pre></td></tr><tr><td data-num=\"281\"></td><td><pre>               <span class=\"token string-property property\">\"runtime.walltime\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"282\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"283\"></td><td><pre>                  <span class=\"token keyword\">const</span> msec <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"284\"></td><td><pre>                  <span class=\"token function\">setInt64</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> msec <span class=\"token operator\">/</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"285\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setInt32</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>msec <span class=\"token operator\">%</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000000</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"286\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"287\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"288\"></td><td><pre>               <span class=\"token comment\">// func scheduleTimeoutEvent(delay int64) int32  </span></pre></td></tr><tr><td data-num=\"289\"></td><td><pre>               <span class=\"token string-property property\">\"runtime.scheduleTimeoutEvent\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"290\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"291\"></td><td><pre>                  <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_nextCallbackTimeoutID<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"292\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_nextCallbackTimeoutID<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"293\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scheduledTimeouts<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>  </pre></td></tr><tr><td data-num=\"294\"></td><td><pre>                     <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"295\"></td><td><pre>                        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_resume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"296\"></td><td><pre>                        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scheduledTimeouts<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"297\"></td><td><pre>                           <span class=\"token comment\">// for some reason Go failed to register the timeout event, log and try again  </span></pre></td></tr><tr><td data-num=\"298\"></td><td><pre>                           <span class=\"token comment\">// (temporary workaround for https://github.com/golang/go/issues/28975)                           console.warn(\"scheduleTimeoutEvent: missed timeout event\");  </span></pre></td></tr><tr><td data-num=\"299\"></td><td><pre>                           <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_resume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"300\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"301\"></td><td><pre>                     <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"302\"></td><td><pre>                     <span class=\"token function\">getInt64</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// setTimeout has been seen to fire up to 1 millisecond early  </span></pre></td></tr><tr><td data-num=\"303\"></td><td><pre>                  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"304\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setInt32</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"305\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"306\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"307\"></td><td><pre>               <span class=\"token comment\">// func clearTimeoutEvent(id int32)  </span></pre></td></tr><tr><td data-num=\"308\"></td><td><pre>               <span class=\"token string-property property\">\"runtime.clearTimeoutEvent\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"309\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"310\"></td><td><pre>                  <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">getInt32</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"311\"></td><td><pre>                  <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scheduledTimeouts<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"312\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scheduledTimeouts<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"313\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"314\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"315\"></td><td><pre>               <span class=\"token comment\">// func getRandomData(r []byte)  </span></pre></td></tr><tr><td data-num=\"316\"></td><td><pre>               <span class=\"token string-property property\">\"runtime.getRandomData\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"317\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"318\"></td><td><pre>                  crypto<span class=\"token punctuation\">.</span><span class=\"token function\">getRandomValues</span><span class=\"token punctuation\">(</span><span class=\"token function\">loadSlice</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"319\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"320\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"321\"></td><td><pre>               <span class=\"token comment\">// func finalizeRef(v ref)  </span></pre></td></tr><tr><td data-num=\"322\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.finalizeRef\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"323\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"324\"></td><td><pre>                  <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">getUint32</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"325\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_goRefCounts<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"326\"></td><td><pre>                  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_goRefCounts<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"327\"></td><td><pre>                     <span class=\"token keyword\">const</span> v <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_values<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"328\"></td><td><pre>                     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_values<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"329\"></td><td><pre>                     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_ids<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"330\"></td><td><pre>                     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_idPool<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"331\"></td><td><pre>                  <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"332\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"333\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"334\"></td><td><pre>               <span class=\"token comment\">// func stringVal(value string) ref  </span></pre></td></tr><tr><td data-num=\"335\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.stringVal\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"336\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"337\"></td><td><pre>                  <span class=\"token function\">storeValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token function\">loadString</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"338\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"339\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"340\"></td><td><pre>               <span class=\"token comment\">// func valueGet(v ref, p string) ref  </span></pre></td></tr><tr><td data-num=\"341\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.valueGet\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"342\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"343\"></td><td><pre>                  <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">loadString</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"344\"></td><td><pre>                  sp <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">getsp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>>></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// see comment above  </span></pre></td></tr><tr><td data-num=\"345\"></td><td><pre>                  <span class=\"token function\">storeValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"346\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"347\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"348\"></td><td><pre>               <span class=\"token comment\">// func valueSet(v ref, p string, x ref)  </span></pre></td></tr><tr><td data-num=\"349\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.valueSet\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"350\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"351\"></td><td><pre>                  Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">loadString</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"352\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"353\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"354\"></td><td><pre>               <span class=\"token comment\">// func valueDelete(v ref, p string)  </span></pre></td></tr><tr><td data-num=\"355\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.valueDelete\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"356\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"357\"></td><td><pre>                  Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">deleteProperty</span><span class=\"token punctuation\">(</span><span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">loadString</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"358\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"359\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"360\"></td><td><pre>               <span class=\"token comment\">// func valueIndex(v ref, i int) ref  </span></pre></td></tr><tr><td data-num=\"361\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.valueIndex\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"362\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"363\"></td><td><pre>                  <span class=\"token function\">storeValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getInt64</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"364\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"365\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"366\"></td><td><pre>               <span class=\"token comment\">// valueSetIndex(v ref, i int, x ref)  </span></pre></td></tr><tr><td data-num=\"367\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.valueSetIndex\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"368\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"369\"></td><td><pre>                  Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getInt64</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"370\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"371\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"372\"></td><td><pre>               <span class=\"token comment\">// func valueCall(v ref, m string, args []ref) (ref, bool)  </span></pre></td></tr><tr><td data-num=\"373\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.valueCall\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"374\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"375\"></td><td><pre>                  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"376\"></td><td><pre>                     <span class=\"token keyword\">const</span> v <span class=\"token operator\">=</span> <span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"377\"></td><td><pre>                     <span class=\"token keyword\">const</span> m <span class=\"token operator\">=</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> <span class=\"token function\">loadString</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"378\"></td><td><pre>                     <span class=\"token keyword\">const</span> args <span class=\"token operator\">=</span> <span class=\"token function\">loadSliceOfValues</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"379\"></td><td><pre>                     <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token function\">Reflect</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"380\"></td><td><pre>                     sp <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">getsp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>>></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// see comment above  </span></pre></td></tr><tr><td data-num=\"381\"></td><td><pre>                     <span class=\"token function\">storeValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"382\"></td><td><pre>                     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint8</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"383\"></td><td><pre>                  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"384\"></td><td><pre>                     sp <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">getsp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>>></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// see comment above  </span></pre></td></tr><tr><td data-num=\"385\"></td><td><pre>                     <span class=\"token function\">storeValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"386\"></td><td><pre>                     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint8</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"387\"></td><td><pre>                  <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"388\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"389\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"390\"></td><td><pre>               <span class=\"token comment\">// func valueInvoke(v ref, args []ref) (ref, bool)  </span></pre></td></tr><tr><td data-num=\"391\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.valueInvoke\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"392\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"393\"></td><td><pre>                  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"394\"></td><td><pre>                     <span class=\"token keyword\">const</span> v <span class=\"token operator\">=</span> <span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"395\"></td><td><pre>                     <span class=\"token keyword\">const</span> args <span class=\"token operator\">=</span> <span class=\"token function\">loadSliceOfValues</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"396\"></td><td><pre>                     <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token function\">Reflect</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"397\"></td><td><pre>                     sp <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">getsp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>>></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// see comment above  </span></pre></td></tr><tr><td data-num=\"398\"></td><td><pre>                     <span class=\"token function\">storeValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"399\"></td><td><pre>                     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint8</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"400\"></td><td><pre>                  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"401\"></td><td><pre>                     sp <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">getsp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>>></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// see comment above  </span></pre></td></tr><tr><td data-num=\"402\"></td><td><pre>                     <span class=\"token function\">storeValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"403\"></td><td><pre>                     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint8</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"404\"></td><td><pre>                  <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"405\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"406\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"407\"></td><td><pre>               <span class=\"token comment\">// func valueNew(v ref, args []ref) (ref, bool)  </span></pre></td></tr><tr><td data-num=\"408\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.valueNew\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"409\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"410\"></td><td><pre>                  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"411\"></td><td><pre>                     <span class=\"token keyword\">const</span> v <span class=\"token operator\">=</span> <span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"412\"></td><td><pre>                     <span class=\"token keyword\">const</span> args <span class=\"token operator\">=</span> <span class=\"token function\">loadSliceOfValues</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"413\"></td><td><pre>                     <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">construct</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"414\"></td><td><pre>                     sp <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">getsp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>>></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// see comment above  </span></pre></td></tr><tr><td data-num=\"415\"></td><td><pre>                     <span class=\"token function\">storeValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"416\"></td><td><pre>                     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint8</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"417\"></td><td><pre>                  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"418\"></td><td><pre>                     sp <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">getsp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>>></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// see comment above  </span></pre></td></tr><tr><td data-num=\"419\"></td><td><pre>                     <span class=\"token function\">storeValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"420\"></td><td><pre>                     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint8</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"421\"></td><td><pre>                  <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"422\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"423\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"424\"></td><td><pre>               <span class=\"token comment\">// func valueLength(v ref) int  </span></pre></td></tr><tr><td data-num=\"425\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.valueLength\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"426\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"427\"></td><td><pre>                  <span class=\"token function\">setInt64</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"428\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"429\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"430\"></td><td><pre>               <span class=\"token comment\">// valuePrepareString(v ref) (ref, int)  </span></pre></td></tr><tr><td data-num=\"431\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.valuePrepareString\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"432\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"433\"></td><td><pre>                  <span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> encoder<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"434\"></td><td><pre>                  <span class=\"token function\">storeValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"435\"></td><td><pre>                  <span class=\"token function\">setInt64</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> str<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"436\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"437\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"438\"></td><td><pre>               <span class=\"token comment\">// valueLoadString(v ref, b []byte)  </span></pre></td></tr><tr><td data-num=\"439\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.valueLoadString\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"440\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"441\"></td><td><pre>                  <span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"442\"></td><td><pre>                  <span class=\"token function\">loadSlice</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"443\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"444\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"445\"></td><td><pre>               <span class=\"token comment\">// func valueInstanceOf(v ref, t ref) bool  </span></pre></td></tr><tr><td data-num=\"446\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.valueInstanceOf\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"447\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"448\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint8</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"449\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"450\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"451\"></td><td><pre>               <span class=\"token comment\">// func copyBytesToGo(dst []byte, src ref) (int, bool)  </span></pre></td></tr><tr><td data-num=\"452\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.copyBytesToGo\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"453\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"454\"></td><td><pre>                  <span class=\"token keyword\">const</span> dst <span class=\"token operator\">=</span> <span class=\"token function\">loadSlice</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"455\"></td><td><pre>                  <span class=\"token keyword\">const</span> src <span class=\"token operator\">=</span> <span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"456\"></td><td><pre>                  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>src <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Uint8Array</span> <span class=\"token operator\">||</span> src <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Uint8ClampedArray</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"457\"></td><td><pre>                     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint8</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"458\"></td><td><pre>                     <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>                  <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"459\"></td><td><pre>                  <span class=\"token keyword\">const</span> toCopy <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span><span class=\"token function\">subarray</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> dst<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"460\"></td><td><pre>                  dst<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>toCopy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"461\"></td><td><pre>                  <span class=\"token function\">setInt64</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> toCopy<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"462\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint8</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"463\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"464\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"465\"></td><td><pre>               <span class=\"token comment\">// func copyBytesToJS(dst ref, src []byte) (int, bool)  </span></pre></td></tr><tr><td data-num=\"466\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.copyBytesToJS\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"467\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"468\"></td><td><pre>                  <span class=\"token keyword\">const</span> dst <span class=\"token operator\">=</span> <span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"469\"></td><td><pre>                  <span class=\"token keyword\">const</span> src <span class=\"token operator\">=</span> <span class=\"token function\">loadSlice</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"470\"></td><td><pre>                  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>dst <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Uint8Array</span> <span class=\"token operator\">||</span> dst <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Uint8ClampedArray</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"471\"></td><td><pre>                     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint8</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"472\"></td><td><pre>                     <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>                  <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"473\"></td><td><pre>                  <span class=\"token keyword\">const</span> toCopy <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span><span class=\"token function\">subarray</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> dst<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"474\"></td><td><pre>                  dst<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>toCopy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"475\"></td><td><pre>                  <span class=\"token function\">setInt64</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> toCopy<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"476\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint8</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"477\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"478\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"479\"></td><td><pre>               <span class=\"token string-property property\">\"debug\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"480\"></td><td><pre>                  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"481\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"482\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"483\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"484\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"485\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"486\"></td><td><pre>      <span class=\"token keyword\">async</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">instance</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"487\"></td><td><pre>         <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>instance <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">WebAssembly<span class=\"token punctuation\">.</span>Instance</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"488\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Go.run: WebAssembly.Instance expected\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"489\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"490\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst <span class=\"token operator\">=</span> instance<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"491\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataView</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"492\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_values <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token comment\">// JS values that Go currently has references to, indexed by reference id  </span></pre></td></tr><tr><td data-num=\"493\"></td><td><pre>            <span class=\"token number\">NaN</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"494\"></td><td><pre>            <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"495\"></td><td><pre>            <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>            <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>            <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>            global<span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"496\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>         <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"497\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_goRefCounts <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_values<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token number\">Infinity</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// number of references that Go has to a JS value, indexed by reference id  </span></pre></td></tr><tr><td data-num=\"498\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_ids <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span> <span class=\"token comment\">// mapping from JS values to reference ids  </span></pre></td></tr><tr><td data-num=\"499\"></td><td><pre>            <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"500\"></td><td><pre>            <span class=\"token punctuation\">[</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"501\"></td><td><pre>            <span class=\"token punctuation\">[</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"502\"></td><td><pre>            <span class=\"token punctuation\">[</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"503\"></td><td><pre>            <span class=\"token punctuation\">[</span>global<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"504\"></td><td><pre>            <span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"505\"></td><td><pre>         <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"506\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_idPool <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// unused ids that have been garbage collected  </span></pre></td></tr><tr><td data-num=\"507\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>exited <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// whether the Go program has exited  </span></pre></td></tr><tr><td data-num=\"508\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"509\"></td><td><pre>         <span class=\"token comment\">// Pass command line arguments and environment variables to WebAssembly by writing them to the linear memory.         let offset = 4096;  </span></pre></td></tr><tr><td data-num=\"510\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"511\"></td><td><pre>         <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">strPtr</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"512\"></td><td><pre>            <span class=\"token keyword\">const</span> ptr <span class=\"token operator\">=</span> offset<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"513\"></td><td><pre>            <span class=\"token keyword\">const</span> bytes <span class=\"token operator\">=</span> encoder<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>str <span class=\"token operator\">+</span> <span class=\"token string\">\"\\0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"514\"></td><td><pre>            <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">,</span> offset<span class=\"token punctuation\">,</span> bytes<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>bytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"515\"></td><td><pre>            offset <span class=\"token operator\">+=</span> bytes<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"516\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>offset <span class=\"token operator\">%</span> <span class=\"token number\">8</span> <span class=\"token operator\">!==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"517\"></td><td><pre>               offset <span class=\"token operator\">+=</span> <span class=\"token number\">8</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>offset <span class=\"token operator\">%</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"518\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"519\"></td><td><pre>            <span class=\"token keyword\">return</span> ptr<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"520\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"521\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"522\"></td><td><pre>         <span class=\"token keyword\">const</span> argc <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"523\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"524\"></td><td><pre>         <span class=\"token keyword\">const</span> argvPtrs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"525\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arg</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"526\"></td><td><pre>            argvPtrs<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token function\">strPtr</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"527\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"528\"></td><td><pre>         argvPtrs<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"529\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"530\"></td><td><pre>         <span class=\"token keyword\">const</span> keys <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"531\"></td><td><pre>         keys<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"532\"></td><td><pre>            argvPtrs<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token function\">strPtr</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>key<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"533\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"534\"></td><td><pre>         argvPtrs<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"535\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"536\"></td><td><pre>         <span class=\"token keyword\">const</span> argv <span class=\"token operator\">=</span> offset<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"537\"></td><td><pre>         argvPtrs<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ptr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"538\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint32</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">,</span> ptr<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"539\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint32</span><span class=\"token punctuation\">(</span>offset <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"540\"></td><td><pre>            offset <span class=\"token operator\">+=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"541\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"542\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"543\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span>argc<span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"544\"></td><td><pre>         <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>exited<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"545\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_resolveExitPromise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"546\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"547\"></td><td><pre>         <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_exitPromise<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"548\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"549\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"550\"></td><td><pre>      <span class=\"token function\">_resume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"551\"></td><td><pre>         <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>exited<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"552\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Go program has already exited\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"553\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"554\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">resume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"555\"></td><td><pre>         <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>exited<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"556\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_resolveExitPromise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"557\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"558\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"559\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"560\"></td><td><pre>      <span class=\"token function\">_makeFuncWrapper</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"561\"></td><td><pre>         <span class=\"token keyword\">const</span> go <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"562\"></td><td><pre>         <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"563\"></td><td><pre>            <span class=\"token keyword\">const</span> event <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> id<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">args</span><span class=\"token operator\">:</span> arguments <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"564\"></td><td><pre>            go<span class=\"token punctuation\">.</span>_pendingEvent <span class=\"token operator\">=</span> event<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"565\"></td><td><pre>            go<span class=\"token punctuation\">.</span><span class=\"token function\">_resume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"566\"></td><td><pre>            <span class=\"token keyword\">return</span> event<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"567\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"568\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"569\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"570\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"571\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>  </pre></td></tr><tr><td data-num=\"572\"></td><td><pre>      <span class=\"token keyword\">typeof</span> module <span class=\"token operator\">!==</span> <span class=\"token string\">\"undefined\"</span> <span class=\"token operator\">&amp;&amp;</span>  </pre></td></tr><tr><td data-num=\"573\"></td><td><pre>      global<span class=\"token punctuation\">.</span>require <span class=\"token operator\">&amp;&amp;</span>  </pre></td></tr><tr><td data-num=\"574\"></td><td><pre>      global<span class=\"token punctuation\">.</span>require<span class=\"token punctuation\">.</span>main <span class=\"token operator\">===</span> module <span class=\"token operator\">&amp;&amp;</span>  </pre></td></tr><tr><td data-num=\"575\"></td><td><pre>      global<span class=\"token punctuation\">.</span>process <span class=\"token operator\">&amp;&amp;</span>  </pre></td></tr><tr><td data-num=\"576\"></td><td><pre>      global<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">.</span>versions <span class=\"token operator\">&amp;&amp;</span>  </pre></td></tr><tr><td data-num=\"577\"></td><td><pre>      <span class=\"token operator\">!</span>global<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">.</span>versions<span class=\"token punctuation\">.</span>electron  </pre></td></tr><tr><td data-num=\"578\"></td><td><pre>   <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"579\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"580\"></td><td><pre>         console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"usage: go_js_wasm_exec [wasm binary] [arguments]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"581\"></td><td><pre>         process<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"582\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"583\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"584\"></td><td><pre>      <span class=\"token keyword\">const</span> go <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Go</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"585\"></td><td><pre>      go<span class=\"token punctuation\">.</span>argv <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"586\"></td><td><pre>      go<span class=\"token punctuation\">.</span>env <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token constant\">TMPDIR</span><span class=\"token operator\">:</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"os\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">tmpdir</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"587\"></td><td><pre>      go<span class=\"token punctuation\">.</span>exit <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"588\"></td><td><pre>      WebAssembly<span class=\"token punctuation\">.</span><span class=\"token function\">instantiate</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> go<span class=\"token punctuation\">.</span>importObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"589\"></td><td><pre>         process<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"exit\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">code</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// Node.js exits if no event handler is pending  </span></pre></td></tr><tr><td data-num=\"590\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>code <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>go<span class=\"token punctuation\">.</span>exited<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"591\"></td><td><pre>               <span class=\"token comment\">// deadlock, make Go print error and stack traces  </span></pre></td></tr><tr><td data-num=\"592\"></td><td><pre>               go<span class=\"token punctuation\">.</span>_pendingEvent <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"593\"></td><td><pre>               go<span class=\"token punctuation\">.</span><span class=\"token function\">_resume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"594\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"595\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"596\"></td><td><pre>         <span class=\"token keyword\">return</span> go<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"597\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"598\"></td><td><pre>         console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"599\"></td><td><pre>         process<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"600\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"601\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"602\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"603\"></td><td><pre></pre></td></tr><tr><td data-num=\"604\"></td><td><pre></pre></td></tr><tr><td data-num=\"605\"></td><td><pre><span class=\"token number\">2.</span> 在index<span class=\"token punctuation\">.</span>html中引入wasm_exec<span class=\"token punctuation\">.</span>js</pre></td></tr><tr><td data-num=\"606\"></td><td><pre><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>`js</pre></td></tr><tr><td data-num=\"607\"></td><td><pre><span class=\"token operator\">&lt;</span>head<span class=\"token operator\">></span>  </pre></td></tr><tr><td data-num=\"608\"></td><td><pre>  <span class=\"token operator\">&lt;</span>meta charset<span class=\"token operator\">=</span><span class=\"token string\">\"UTF-8\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>  </pre></td></tr><tr><td data-num=\"609\"></td><td><pre>  <span class=\"token operator\">&lt;</span>link rel<span class=\"token operator\">=</span><span class=\"token string\">\"icon\"</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"image/svg+xml\"</span> href<span class=\"token operator\">=</span><span class=\"token string\">\"/vite.svg\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>  </pre></td></tr><tr><td data-num=\"610\"></td><td><pre>  <span class=\"token operator\">&lt;</span>meta name<span class=\"token operator\">=</span><span class=\"token string\">\"viewport\"</span> content<span class=\"token operator\">=</span><span class=\"token string\">\"width=device-width, initial-scale=1.0\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>  </pre></td></tr><tr><td data-num=\"611\"></td><td><pre>    <span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"static/wasm_exec.js\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>  </pre></td></tr><tr><td data-num=\"612\"></td><td><pre>  <span class=\"token operator\">&lt;</span>title<span class=\"token operator\">></span>Vite <span class=\"token operator\">+</span> Vue <span class=\"token operator\">+</span> <span class=\"token constant\">TS</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>title<span class=\"token operator\">></span>  </pre></td></tr><tr><td data-num=\"613\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>head<span class=\"token operator\">></span></pre></td></tr></table></figure><h3 id=\"调用go代码\"><a class=\"markdownIt-Anchor\" href=\"#调用go代码\">#</a> 调用 go 代码</h3>\n<p>在 HelloWorld.vue 组件中调用 wasm 函数</p>\n<pre><code class=\"language-vue\">&lt;script setup lang=&quot;ts&quot;&gt;  \nimport &#123; ref,defineProps &#125; from 'vue'  \ndefineProps&lt;&#123; msg: string &#125;&gt;()  \n  \nconst run = ()=&gt;&#123;  \n  const go = new window.Go();  \n  WebAssembly.instantiateStreaming(fetch(&quot;../../static/main.wasm&quot;),go.importObject).  \n  then((result)=&gt;go.run(result.instance));  \n&#125;  \n  \n&lt;/script&gt;  \n  \n&lt;template&gt;  \n  &lt;h1&gt;&#123;&#123; msg &#125;&#125;&lt;/h1&gt;  \n  \n  &lt;div class=&quot;card-body&quot;&gt;  \n    &lt;p class=&quot;text-muted&quot;&gt;  \n      点击“运行”，在控制台输出日志 &lt;code&gt;Hello, WebAssembly!&lt;/code&gt;  \n    &lt;/p&gt;    &lt;div class=&quot;live-preview&quot;&gt;  \n      &lt;button          @click=&quot;run()&quot;  \n          class=&quot;btn btn-success&quot;  \n          id=&quot;runButton&quot;  \n      &gt;  \n        运行  \n      &lt;/button&gt;  \n    &lt;/div&gt;  &lt;/div&gt;  \n&lt;/template&gt;  \n  \n&lt;style scoped&gt;  \n.read-the-docs &#123;  \n  color: #888;  \n&#125;  \n&lt;/style&gt;\n\n</code></pre>\n<h1 id=\"问题\"><a class=\"markdownIt-Anchor\" href=\"#问题\">#</a> 问题</h1>\n<h2 id=\"是否支持跨域\"><a class=\"markdownIt-Anchor\" href=\"#是否支持跨域\">#</a> 是否支持跨域</h2>\n<p>不能</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   alert <span class=\"token operator\">:=</span> js<span class=\"token punctuation\">.</span><span class=\"token function\">Global</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"alert\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   alert<span class=\"token punctuation\">.</span><span class=\"token function\">Invoke</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   url <span class=\"token operator\">:=</span> <span class=\"token string\">\"https://www.baidu.com/\"</span> <span class=\"token comment\">// 要获取数据的 URL  </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   response<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"获取URL数据时出错：%s\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token keyword\">return</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token keyword\">defer</span> response<span class=\"token punctuation\">.</span>Body<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   body<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> ioutil<span class=\"token punctuation\">.</span><span class=\"token function\">ReadAll</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>Body<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"读取响应内容时出错：%s\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token keyword\">return</span>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>浏览器报了跨域错误</p>\n<h2 id=\"是否支持多协程\"><a class=\"markdownIt-Anchor\" href=\"#是否支持多协程\">#</a> 是否支持多协程</h2>\n<p><code>支持</code></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   alert <span class=\"token operator\">:=</span> js<span class=\"token punctuation\">.</span><span class=\"token function\">Global</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"alert\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   alert<span class=\"token punctuation\">.</span><span class=\"token function\">Invoke</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   sleep <span class=\"token operator\">:=</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>x <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> wg <span class=\"token operator\">*</span>sync<span class=\"token punctuation\">.</span>WaitGroup<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token keyword\">defer</span> wg<span class=\"token punctuation\">.</span><span class=\"token function\">Done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      time<span class=\"token punctuation\">.</span><span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>Second <span class=\"token operator\">*</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">Duration</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是coroutine:%d\\n\"</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token keyword\">var</span> wg sync<span class=\"token punctuation\">.</span>WaitGroup  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开启两个协程\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   wg<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token keyword\">go</span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>wg<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   wg<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   <span class=\"token keyword\">go</span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>wg<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   wg<span class=\"token punctuation\">.</span><span class=\"token function\">Wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"All workers done\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "前端 vue go wasm"
            ]
        },
        {
            "id": "https://fanlu.top/2023/07/16/%E6%9C%AC%E5%91%A8%E7%9C%8B%E4%BA%86%E5%95%A5-2023%E5%B9%B47%E6%9C%8815%E6%97%A5/",
            "url": "https://fanlu.top/2023/07/16/%E6%9C%AC%E5%91%A8%E7%9C%8B%E4%BA%86%E5%95%A5-2023%E5%B9%B47%E6%9C%8815%E6%97%A5/",
            "title": "本周看了啥-2023年7月15日",
            "date_published": "2023-07-16T04:43:20.000Z",
            "content_html": "<h1 id=\"pwa教程\"><a class=\"markdownIt-Anchor\" href=\"#pwa教程\">#</a> pwa 教程</h1>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYXZhcy1wcm9qZWN0LmdpdGh1Yi5pby9wd2EtYm9vay9jaGFwdGVyMDUvNS13b3JrYm94Lmh0bWw=\">https://lavas-project.github.io/pwa-book/chapter05/5-workbox.html</span></p>\n</blockquote>\n<p>pwa 可以将网站当作 app 安装到电脑或者手机上。<br>\n这个教程全面介绍了 pwa 的技术，包括：</p>\n<ul>\n<li>pwa 的发展</li>\n<li>前端对于用户体验的优化</li>\n<li>用到的 js 技术</li>\n<li>service worker 的技术</li>\n<li>缓存策略</li>\n<li>消息通知</li>\n<li>安全性介绍</li>\n<li>性能优化</li>\n</ul>\n<p>尤其是前端用户体验方便，对于骨架屏、响应式布局的介绍，写的很好。</p>\n<h1 id=\"css揭秘\"><a class=\"markdownIt-Anchor\" href=\"#css揭秘\">#</a> css 揭秘</h1>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ib29rLmRvdWJhbi5jb20vc3ViamVjdC8yNjc0NTk0My8=\">https://book.douban.com/subject/26745943/</span></p>\n</blockquote>\n<p>这本书是 css 的专家，css 设计委员会成员写的，非常注重实战。<br>\n从不同方便，列举了很多例子，介绍了 css 的高级又巧妙的用法，很有启发性。</p>\n<h1 id=\"vuejsgasp\"><a class=\"markdownIt-Anchor\" href=\"#vuejsgasp\">#</a> vue.js+gasp</h1>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL0BkYWlseWZpcmUvdnVlLWpzLWdzYXAtYW5pbWF0aW9ucy0yNmZjNmIxYzNjNWE=\">https://medium.com/@dailyfire/vue-js-gsap-animations-26fc6b1c3c5a</span></p>\n</blockquote>\n<p>这篇文章介绍了在 vue 中使用 gasp 的步骤。</p>\n<h1 id=\"服务间的网络通信\"><a class=\"markdownIt-Anchor\" href=\"#服务间的网络通信\">#</a> 服务间的网络通信</h1>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly90ZWNoLmt1amlhbGUuY29tL2xpYW8tbGlhby1mdS13dS1qaWFuLWRlLXdhbmctbHVvLXRvbmcteGluLXRjcC15dS1odHRwLw==\">https://tech.kujiale.com/liao-liao-fu-wu-jian-de-wang-luo-tong-xin-tcp-yu-http/</span></p>\n</blockquote>\n<p>这是酷家乐团队写的介绍 tcp 长连接的文章，对于网络的分析尤其是 wireshark 的使用，非常值得学习。</p>\n<h1 id=\"诡秘之主\"><a class=\"markdownIt-Anchor\" href=\"#诡秘之主\">#</a> 诡秘之主</h1>\n<ul>\n<li>克莱恩已经是诡法师了</li>\n<li>干掉 因斯。赞格威尔的部分写的很精彩</li>\n<li>干掉 阿蒙分身更精彩</li>\n<li>听说宿命之环写的没有爽点，被全网喷，可惜了。</li>\n</ul>\n<h1 id=\"银河护卫队3\"><a class=\"markdownIt-Anchor\" href=\"#银河护卫队3\">#</a> 银河护卫队 3</h1>\n<p>这应该是银河护卫队这批演员的最后一部电影了。</p>\n<ul>\n<li>特效依旧很牛逼；</li>\n<li>剧情比较俗套，但还在水准之上；</li>\n<li>动物进化的星球很诡异，但是整个星球死了好像也没有什么伤心的，所以人类还是共情长得跟自己像的；</li>\n<li>个人还是更喜欢有人味的超级英雄，比如蜘蛛侠、蝙蝠侠、第一部的钢铁侠，看电影时更容易投入，后面到外星球实在无法感同身受了。希望漫威还能出正常的超级英雄电影。</li>\n</ul>\n<h1 id=\"欢颜\"><a class=\"markdownIt-Anchor\" href=\"#欢颜\">#</a> 欢颜</h1>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tb3ZpZS5kb3ViYW4uY29tL3N1YmplY3QvMzU4OTE4MDgv\">https://movie.douban.com/subject/35891808/</span></p>\n</blockquote>\n<p>阵容很强的一个电视剧，有我很喜欢的廖凡、张译、张鲁一、还有田雨、杨皓宇等等。<br>\n昨天开播的，看了一集，还是很不错的，只有 18 集的一个电视，应该会很紧凑，期待后面的剧情。</p>\n",
            "tags": [
                "阅读 电影 电视"
            ]
        },
        {
            "id": "https://fanlu.top/2023/07/14/SoloX%E4%B9%8B%E6%8A%A5%E5%91%8A%E5%AF%BC%E5%87%BA/",
            "url": "https://fanlu.top/2023/07/14/SoloX%E4%B9%8B%E6%8A%A5%E5%91%8A%E5%AF%BC%E5%87%BA/",
            "title": "SoloX之报告导出",
            "date_published": "2023-07-14T00:41:05.000Z",
            "content_html": "<h2 id=\"excel\"><a class=\"markdownIt-Anchor\" href=\"#excel\">#</a> excel</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token decorator annotation punctuation\">@api<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/apm/export/report'</span><span class=\"token punctuation\">,</span> methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'post'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'get'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">exportReport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    platform <span class=\"token operator\">=</span> method<span class=\"token punctuation\">.</span>_request<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token string\">'platform'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    scene <span class=\"token operator\">=</span> method<span class=\"token punctuation\">.</span>_request<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token string\">'scene'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        path <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>export_excel<span class=\"token punctuation\">(</span>platform<span class=\"token operator\">=</span>platform<span class=\"token punctuation\">,</span> scene<span class=\"token operator\">=</span>scene<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        result <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'status'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'msg'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'success'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'path'</span><span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        traceback<span class=\"token punctuation\">.</span>print_exc<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        result <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'status'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'msg'</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span>    </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> result</pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">export_excel</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> platform<span class=\"token punctuation\">,</span> scene<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">'Exporting excel ...'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    android_log_file_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'cpu_app'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'cpu_sys'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'mem_total'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'mem_native'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'mem_dalvik'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                             <span class=\"token string\">'battery_level'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'battery_tem'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'upflow'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'downflow'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'fps'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    ios_log_file_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'cpu_app'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'cpu_sys'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'mem_total'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'battery_tem'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'battery_current'</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                         <span class=\"token string\">'battery_voltage'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'battery_power'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'upflow'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'downflow'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'fps'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'gpu'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    log_file_list <span class=\"token operator\">=</span> android_log_file_list <span class=\"token keyword\">if</span> platform <span class=\"token operator\">==</span> <span class=\"token string\">'Android'</span> <span class=\"token keyword\">else</span> ios_log_file_list</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    wb <span class=\"token operator\">=</span> xlwt<span class=\"token punctuation\">.</span>Workbook<span class=\"token punctuation\">(</span>encoding <span class=\"token operator\">=</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    k <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">for</span> name <span class=\"token keyword\">in</span> log_file_list<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        ws1 <span class=\"token operator\">=</span> wb<span class=\"token punctuation\">.</span>add_sheet<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        ws1<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Time'</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        ws1<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Value'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        row <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token comment\">#start row</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        col <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token comment\">#start col</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">if</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>scene<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.log'</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>scene<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.log'</span></span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">for</span> lines <span class=\"token keyword\">in</span> f<span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                target <span class=\"token operator\">=</span> lines<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'='</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                k <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                    ws1<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> col <span class=\"token punctuation\">,</span>target<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                    col <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                row <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                col <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    xls_path <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">,</span> scene<span class=\"token punctuation\">,</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>scene<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.xls'</span></span><span class=\"token punctuation\">)</span>            </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    wb<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span>xls_path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">'Exporting excel success : &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>xls_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">return</span> xls_path</pre></td></tr></table></figure><h2 id=\"图片\"><a class=\"markdownIt-Anchor\" href=\"#图片\">#</a> 图片</h2>\n<p>通过 html2canvas 实现</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">screenshot</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">classname<span class=\"token punctuation\">,</span>downloadname</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">let</span> container <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByClassName</span><span class=\"token punctuation\">(</span>classname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//page-wrapper</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">html2canvas</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">canvas</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">let</span> imgData <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">toDataURL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">let</span> link <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        link<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> imgData<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        link<span class=\"token punctuation\">.</span>download <span class=\"token operator\">=</span> downloadname<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">let</span> flag <span class=\"token operator\">=</span> link<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"html\"><a class=\"markdownIt-Anchor\" href=\"#html\">#</a> html</h2>\n<p>通过模板渲染成一个 html 文件，然后导出</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">make_android_html</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> scene<span class=\"token punctuation\">,</span> summary <span class=\"token punctuation\">:</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">'Generating HTML ...'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    STATICPATH <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>dirname<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>realpath<span class=\"token punctuation\">(</span>__file__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    file_loader <span class=\"token operator\">=</span> FileSystemLoader<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>STATICPATH<span class=\"token punctuation\">,</span> <span class=\"token string\">'report_template'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    env <span class=\"token operator\">=</span> Environment<span class=\"token punctuation\">(</span>loader<span class=\"token operator\">=</span>file_loader<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    template <span class=\"token operator\">=</span> env<span class=\"token punctuation\">.</span>get_template<span class=\"token punctuation\">(</span><span class=\"token string\">'android.html'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">,</span> scene<span class=\"token punctuation\">,</span> <span class=\"token string\">'report.html'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'w+'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> fout<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        html_content <span class=\"token operator\">=</span> template<span class=\"token punctuation\">.</span>render<span class=\"token punctuation\">(</span>cpu_app<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'cpu_app'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>cpu_sys<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'cpu_sys'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                                       mem_total<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'mem_total'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>mem_native<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'mem_native'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                                       mem_dalvik<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'mem_dalvik'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>fps<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'fps'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                                       jank<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'jank'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>level<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'level'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                                       tem<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'tem'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>net_send<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'net_send'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                                       net_recv<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'net_recv'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>cpu_charts<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'cpu_charts'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                                       mem_charts<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'mem_charts'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>net_charts<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'net_charts'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                                       battery_charts<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'battery_charts'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>fps_charts<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'fps_charts'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                                       jank_charts<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'jank_charts'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        fout<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>html_content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    html_path <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">,</span> scene<span class=\"token punctuation\">,</span> <span class=\"token string\">'report.html'</span><span class=\"token punctuation\">)</span>    </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">'Generating HTML success : &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>html_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">return</span> html_path</pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">make_ios_html</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> scene<span class=\"token punctuation\">,</span> summary <span class=\"token punctuation\">:</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">'Generating HTML ...'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    STATICPATH <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>dirname<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>realpath<span class=\"token punctuation\">(</span>__file__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    file_loader <span class=\"token operator\">=</span> FileSystemLoader<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>STATICPATH<span class=\"token punctuation\">,</span> <span class=\"token string\">'report_template'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    env <span class=\"token operator\">=</span> Environment<span class=\"token punctuation\">(</span>loader<span class=\"token operator\">=</span>file_loader<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    template <span class=\"token operator\">=</span> env<span class=\"token punctuation\">.</span>get_template<span class=\"token punctuation\">(</span><span class=\"token string\">'ios.html'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">,</span> scene<span class=\"token punctuation\">,</span> <span class=\"token string\">'report.html'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'w+'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> fout<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        html_content <span class=\"token operator\">=</span> template<span class=\"token punctuation\">.</span>render<span class=\"token punctuation\">(</span>cpu_app<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'cpu_app'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>cpu_sys<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'cpu_sys'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>gpu<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'gpu'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                                       mem_total<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'mem_total'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>fps<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'fps'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                                       tem<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'tem'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>current<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'current'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                                       voltage<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'voltage'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>power<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'power'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                                       net_send<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'net_send'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>net_recv<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'net_recv'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                                       cpu_charts<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'cpu_charts'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>mem_charts<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'mem_charts'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                                       net_charts<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'net_charts'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>battery_charts<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'battery_charts'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                                       fps_charts<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'fps_charts'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>gpu_charts<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'gpu_charts'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>            </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        fout<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>html_content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    html_path <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">,</span> scene<span class=\"token punctuation\">,</span> <span class=\"token string\">'report.html'</span><span class=\"token punctuation\">)</span>    </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">'Generating HTML success : &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>html_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">return</span> html_path</pre></td></tr></table></figure>",
            "tags": [
                "测试开发 性能 工具"
            ]
        },
        {
            "id": "https://fanlu.top/2023/07/14/SoloX%E4%B9%8B%E5%AE%89%E5%8D%93logcat/",
            "url": "https://fanlu.top/2023/07/14/SoloX%E4%B9%8B%E5%AE%89%E5%8D%93logcat/",
            "title": "SoloX之安卓logcat",
            "date_published": "2023-07-14T00:40:25.000Z",
            "content_html": "<p>安卓 logcat 通过一个 websocket 来进行传输；</p>\n<p>websocket 基于 socketio 实现</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token decorator annotation punctuation\">@socketio<span class=\"token punctuation\">.</span>on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'connect'</span><span class=\"token punctuation\">,</span> namespace<span class=\"token operator\">=</span><span class=\"token string\">'/logcat'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    socketio<span class=\"token punctuation\">.</span>emit<span class=\"token punctuation\">(</span><span class=\"token string\">'start connect'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'data'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Connected'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> namespace<span class=\"token operator\">=</span><span class=\"token string\">'/logcat'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    logDir <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>getcwd<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'adblog'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span>logDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        os<span class=\"token punctuation\">.</span>mkdir<span class=\"token punctuation\">(</span>logDir<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">global</span> thread</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    thread <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">with</span> thread_lock<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">if</span> thread<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            thread <span class=\"token operator\">=</span> socketio<span class=\"token punctuation\">.</span>start_background_task<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>backgroundThread<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>通过 adb 命令拿到 logcat 日志，输出到本地文件中，然后再从文件中读取日志，通过 websocket 传输</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">backgroundThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">global</span> thread</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\"># logger.info('Initializing adb environment ...')</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\"># os.system('adb kill-server')</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\"># os.system('adb start-server')</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        current_time <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">\"%Y%m%d%H\"</span><span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">.</span>localtime<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        logPath <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>getcwd<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'adblog'</span><span class=\"token punctuation\">,</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>current_time<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.log'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        logcat <span class=\"token operator\">=</span> subprocess<span class=\"token punctuation\">.</span>Popen<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'adb logcat *:E > </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>logPath<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">,</span> stdout<span class=\"token operator\">=</span>subprocess<span class=\"token punctuation\">.</span>PIPE<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                                  shell<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>logPath<span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">while</span> thread<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                socketio<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> f<span class=\"token punctuation\">.</span>readlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                    socketio<span class=\"token punctuation\">.</span>emit<span class=\"token punctuation\">(</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'data'</span><span class=\"token punctuation\">:</span> line<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> namespace<span class=\"token operator\">=</span><span class=\"token string\">'/logcat'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">if</span> logcat<span class=\"token punctuation\">.</span>poll<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            thread <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">except</span> Exception<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">pass</span></pre></td></tr></table></figure>",
            "tags": [
                "测试开发 性能 工具"
            ]
        },
        {
            "id": "https://fanlu.top/2023/07/14/SoloX%E4%B9%8B%E5%BA%94%E7%94%A8%E5%AE%89%E8%A3%85/",
            "url": "https://fanlu.top/2023/07/14/SoloX%E4%B9%8B%E5%BA%94%E7%94%A8%E5%AE%89%E8%A3%85/",
            "title": "SoloX之应用安装",
            "date_published": "2023-07-14T00:39:43.000Z",
            "content_html": "<h2 id=\"安卓\"><a class=\"markdownIt-Anchor\" href=\"#安卓\">#</a> 安卓</h2>\n<ol>\n<li>首先保存上传的 apk 到临时目录</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>file_path <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>currentPath<span class=\"token punctuation\">,</span> <span class=\"token string\">'&#123;&#125;.apk'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>unixtime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> install<span class=\"token punctuation\">.</span>uploadFile<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">,</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    install_status <span class=\"token operator\">=</span> install<span class=\"token punctuation\">.</span>installAPK<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>然后安装</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">installAPK</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    result <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell_noDevice<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span><span class=\"token string\">'install -r &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> result <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        os<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> result</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> result</pre></td></tr></table></figure><h2 id=\"ios\"><a class=\"markdownIt-Anchor\" href=\"#ios\">#</a> IOS</h2>\n<ol>\n<li>首先保存 ipa 包到临时目录</li>\n<li>然后安装 （基于 tidevice）</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">installIPA</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    result <span class=\"token operator\">=</span> Devices<span class=\"token punctuation\">.</span>execCmd<span class=\"token punctuation\">(</span><span class=\"token string\">'tidevice install &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> result <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        os<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> result</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> result</pre></td></tr></table></figure>",
            "tags": [
                "测试开发 性能 工具"
            ]
        },
        {
            "id": "https://fanlu.top/2023/07/14/SoloX%E4%B9%8B%E5%BA%94%E7%94%A8%E7%BD%91%E7%BB%9C%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86/",
            "url": "https://fanlu.top/2023/07/14/SoloX%E4%B9%8B%E5%BA%94%E7%94%A8%E7%BD%91%E7%BB%9C%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86/",
            "title": "SoloX之应用网络数据采集",
            "date_published": "2023-07-14T00:39:07.000Z",
            "content_html": "<h2 id=\"安卓\"><a class=\"markdownIt-Anchor\" href=\"#安卓\">#</a> 安卓</h2>\n<p>基于 linux 的原理，通过 <code>cat /proc/进程id/net/dev</code>  拿到网卡数据；</p>\n<p>间隔一秒 分别拿到两次发送数据量、接受数据量 （ <code>sendNum_pre</code>   <code> recNum_pre</code> ）</p>\n<p>然后计算数据差，得到网速</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getAndroidNet</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> wifi<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"Get Android send/recv data, unit:KB wlan0/rmnet0\"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    net <span class=\"token operator\">=</span> <span class=\"token string\">'wlan0'</span> <span class=\"token keyword\">if</span> wifi <span class=\"token keyword\">else</span> <span class=\"token string\">'rmnet0'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    cmd <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'cat /proc/</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>pid<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/net/dev |</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>d<span class=\"token punctuation\">.</span>filterType<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>net<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    output_pre <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span>cmd<span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>deviceId<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    m_pre <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">r'&#123;&#125;:\\s*(\\d+)\\s*\\d+\\s*\\d+\\s*\\d+\\s*\\d+\\s*\\d+\\s*\\d+\\s*\\d+\\s*(\\d+)'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>net<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> output_pre<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    sendNum_pre <span class=\"token operator\">=</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>m_pre<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    recNum_pre <span class=\"token operator\">=</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>m_pre<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    output_final <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span>cmd<span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>deviceId<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    m_final <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">r'&#123;&#125;:\\s*(\\d+)\\s*\\d+\\s*\\d+\\s*\\d+\\s*\\d+\\s*\\d+\\s*\\d+\\s*\\d+\\s*(\\d+)'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>net<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> output_final<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    sendNum_final <span class=\"token operator\">=</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>m_final<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    recNum_final <span class=\"token operator\">=</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>m_final<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    sendNum <span class=\"token operator\">=</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>sendNum_final <span class=\"token operator\">-</span> sendNum_pre<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    recNum <span class=\"token operator\">=</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>recNum_final <span class=\"token operator\">-</span> recNum_pre<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">return</span> sendNum<span class=\"token punctuation\">,</span> recNum</pre></td></tr></table></figure><h2 id=\"ios\"><a class=\"markdownIt-Anchor\" href=\"#ios\">#</a> IOS</h2>\n<p>间隔 3 秒拿到数据，基于 instrument</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getPerformance</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> perfTpe<span class=\"token punctuation\">:</span> DataType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span> perfTpe <span class=\"token operator\">==</span> DataType<span class=\"token punctuation\">.</span>NETWORK<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        perf <span class=\"token operator\">=</span> Performance<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>deviceId<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>perfTpe<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        perf<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>pkgName<span class=\"token punctuation\">,</span> callback<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>callback<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        perf<span class=\"token punctuation\">.</span>stop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        perf_value <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>downflow<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>upflow</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        perf <span class=\"token operator\">=</span> iosP<span class=\"token punctuation\">.</span>Performance<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>deviceId<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>perfTpe<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        perf_value <span class=\"token operator\">=</span> perf<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>pkgName<span class=\"token punctuation\">,</span> callback<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>callback<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> perf_value</pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">iter_network_flow</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">:</span> BaseDevice<span class=\"token punctuation\">,</span> rp<span class=\"token punctuation\">:</span> RunningProcess<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> Iterator<span class=\"token punctuation\">[</span>Any<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    n <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">with</span> d<span class=\"token punctuation\">.</span>connect_instruments<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> ts<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">for</span> nstat <span class=\"token keyword\">in</span> ts<span class=\"token punctuation\">.</span>iter_network<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token comment\"># if n &lt; 2:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token comment\">#     n += 1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token comment\">#     continue</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">yield</span> DataType<span class=\"token punctuation\">.</span>NETWORK<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token string\">\"timestamp\"</span><span class=\"token punctuation\">:</span> gen_stimestamp<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token string\">\"downFlow\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>nstat<span class=\"token punctuation\">[</span><span class=\"token string\">'rx.bytes'</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">or</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token string\">\"upFlow\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>nstat<span class=\"token punctuation\">[</span><span class=\"token string\">'tx.bytes'</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">or</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "测试开发 性能 工具"
            ]
        },
        {
            "id": "https://fanlu.top/2023/07/14/SoloX%E4%B9%8B%E5%BA%94%E7%94%A8%E5%90%AF%E5%8A%A8%E6%97%B6%E9%97%B4/",
            "url": "https://fanlu.top/2023/07/14/SoloX%E4%B9%8B%E5%BA%94%E7%94%A8%E5%90%AF%E5%8A%A8%E6%97%B6%E9%97%B4/",
            "title": "SoloX之应用启动时间",
            "date_published": "2023-07-14T00:37:42.000Z",
            "content_html": "<h2 id=\"安卓\"><a class=\"markdownIt-Anchor\" href=\"#安卓\">#</a> 安卓</h2>\n<p>adb 命令获取到 activity 启动时间</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getStartupTimeByAndroid</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> activity<span class=\"token punctuation\">,</span> deviceId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    result <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span><span class=\"token string\">'am start -W &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>activity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>deviceId<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">return</span> result</pre></td></tr></table></figure><h2 id=\"ios\"><a class=\"markdownIt-Anchor\" href=\"#ios\">#</a> IOS</h2>\n<p>基于 pydevice 获取</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getStartupTimeByiOS</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> pkgname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">import</span> ios_device</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">except</span> ImportError<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        logger<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span><span class=\"token string\">'py-ios-devices not found, please run [pip install py-ios-devices]'</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    result <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>execCmd<span class=\"token punctuation\">(</span><span class=\"token string\">'pyidevice instruments app_lifecycle -b &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>pkgname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>       </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> result</pre></td></tr></table></figure>",
            "tags": [
                "测试开发 性能 工具"
            ]
        },
        {
            "id": "https://fanlu.top/2023/07/14/SoloX%E4%B9%8BGPU%E6%80%A7%E8%83%BD%E9%87%87%E9%9B%86/",
            "url": "https://fanlu.top/2023/07/14/SoloX%E4%B9%8BGPU%E6%80%A7%E8%83%BD%E9%87%87%E9%9B%86/",
            "title": "SoloX之GPU性能采集",
            "date_published": "2023-07-14T00:36:15.000Z",
            "content_html": "<h2 id=\"安卓\"><a class=\"markdownIt-Anchor\" href=\"#安卓\">#</a> 安卓</h2>\n<p>目前不支持，其实是可以拿到的。</p>\n<h2 id=\"ios\"><a class=\"markdownIt-Anchor\" href=\"#ios\">#</a> ios</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">GPU</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> pkgName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        self<span class=\"token punctuation\">.</span>pkgName <span class=\"token operator\">=</span> pkgName</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">getGPU</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> noLog<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        apm <span class=\"token operator\">=</span> iosAPM<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>pkgName<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        gpu <span class=\"token operator\">=</span> apm<span class=\"token punctuation\">.</span>getPerformance<span class=\"token punctuation\">(</span>apm<span class=\"token punctuation\">.</span>gpu<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">if</span> noLog <span class=\"token keyword\">is</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            apm_time <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">'%H:%M:%S.%f'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            f<span class=\"token punctuation\">.</span>add_log<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">,</span><span class=\"token string\">'gpu.log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> apm_time<span class=\"token punctuation\">,</span> gpu<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">return</span> gpu</pre></td></tr></table></figure>",
            "tags": [
                "测试开发 性能 工具"
            ]
        },
        {
            "id": "https://fanlu.top/2023/07/14/SoloX%E4%B9%8B%E7%94%B5%E6%B1%A0%E6%80%A7%E8%83%BD%E9%87%87%E9%9B%86/",
            "url": "https://fanlu.top/2023/07/14/SoloX%E4%B9%8B%E7%94%B5%E6%B1%A0%E6%80%A7%E8%83%BD%E9%87%87%E9%9B%86/",
            "title": "SoloX之电池性能采集",
            "date_published": "2023-07-14T00:35:36.000Z",
            "content_html": "<h2 id=\"安卓\"><a class=\"markdownIt-Anchor\" href=\"#安卓\">#</a> 安卓</h2>\n<h3 id=\"获取安卓电量以及温度\"><a class=\"markdownIt-Anchor\" href=\"#获取安卓电量以及温度\">#</a> 获取安卓电量以及温度</h3>\n<ul>\n<li>首先切换到非充电模式   <code>dumpsys battery set status 1</code></li>\n<li>然后获取电量信息以及温度  <code>dumpsys battery</code></li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getAndroidBattery</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> noLog<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"Get android battery info, unit:%\"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\"># Switch mobile phone battery to non-charging state</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    cmd <span class=\"token operator\">=</span> <span class=\"token string\">'dumpsys battery set status 1'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span>cmd<span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>deviceId<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\"># Get phone battery info</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    cmd <span class=\"token operator\">=</span> <span class=\"token string\">'dumpsys battery'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    output <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span>cmd<span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>deviceId<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    level <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">u'level:\\s?(\\d+)'</span><span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    temperature <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">u'temperature:\\s?(\\d+)'</span><span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">if</span> noLog <span class=\"token keyword\">is</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>         apm_time <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">'%H:%M:%S.%f'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>         f<span class=\"token punctuation\">.</span>add_log<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">,</span><span class=\"token string\">'battery_level.log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> apm_time<span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>         f<span class=\"token punctuation\">.</span>add_log<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">,</span><span class=\"token string\">'battery_tem.log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> apm_time<span class=\"token punctuation\">,</span> temperature<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">return</span> level<span class=\"token punctuation\">,</span> temperature</pre></td></tr></table></figure><p>命令行会输出：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">(</span>base<span class=\"token punctuation\">)</span> PS C:<span class=\"token punctuation\">\\</span>Users<span class=\"token punctuation\">\\</span>fanlu<span class=\"token operator\">></span> adb shell dumpsys battery</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>* daemon not running<span class=\"token punctuation\">;</span> starting now at tcp:5037</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>* daemon started successfully</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Current Battery Service state:</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  AC powered: <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  USB powered: <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  Wireless powered: <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  Max charging current: <span class=\"token number\">150000</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  Max charging voltage: <span class=\"token number\">5000000</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  Charge counter: <span class=\"token number\">3904000</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  status: <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  health: <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  present: <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  level: <span class=\"token number\">96</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  scale: <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  voltage: <span class=\"token number\">4380</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  temperature: <span class=\"token number\">277</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  technology: Li-poly</pre></td></tr></table></figure><h2 id=\"ios\"><a class=\"markdownIt-Anchor\" href=\"#ios\">#</a> IOS</h2>\n<p>ios 直接使用 tidevice 的接口获取数据</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getiOSBattery</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> noLog<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"Get ios battery info, unit:%\"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    d  <span class=\"token operator\">=</span> tidevice<span class=\"token punctuation\">.</span>Device<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    ioDict <span class=\"token operator\">=</span>  d<span class=\"token punctuation\">.</span>get_io_power<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    tem <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span>_setValue<span class=\"token punctuation\">(</span>ioDict<span class=\"token punctuation\">[</span><span class=\"token string\">'Diagnostics'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'IORegistry'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Temperature'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    current <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span>_setValue<span class=\"token punctuation\">(</span><span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>ioDict<span class=\"token punctuation\">[</span><span class=\"token string\">'Diagnostics'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'IORegistry'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'InstantAmperage'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    voltage <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span>_setValue<span class=\"token punctuation\">(</span>ioDict<span class=\"token punctuation\">[</span><span class=\"token string\">'Diagnostics'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'IORegistry'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Voltage'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    power <span class=\"token operator\">=</span> current <span class=\"token operator\">*</span> voltage <span class=\"token operator\">/</span> <span class=\"token number\">1000</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span> noLog <span class=\"token keyword\">is</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        apm_time <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">'%H:%M:%S.%f'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        f<span class=\"token punctuation\">.</span>add_log<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">,</span><span class=\"token string\">'battery_tem.log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> apm_time<span class=\"token punctuation\">,</span> tem<span class=\"token punctuation\">)</span> <span class=\"token comment\"># unknown</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        f<span class=\"token punctuation\">.</span>add_log<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">,</span><span class=\"token string\">'battery_current.log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> apm_time<span class=\"token punctuation\">,</span> current<span class=\"token punctuation\">)</span> <span class=\"token comment\">#mA</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        f<span class=\"token punctuation\">.</span>add_log<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">,</span><span class=\"token string\">'battery_voltage.log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> apm_time<span class=\"token punctuation\">,</span> voltage<span class=\"token punctuation\">)</span> <span class=\"token comment\">#mV</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        f<span class=\"token punctuation\">.</span>add_log<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">,</span><span class=\"token string\">'battery_power.log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> apm_time<span class=\"token punctuation\">,</span> power<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">return</span> tem<span class=\"token punctuation\">,</span> current<span class=\"token punctuation\">,</span> voltage<span class=\"token punctuation\">,</span> power</pre></td></tr></table></figure>",
            "tags": [
                "测试开发 性能 工具"
            ]
        },
        {
            "id": "https://fanlu.top/2023/07/06/SoloX%E4%B9%8B%E5%86%85%E5%AD%98%E6%80%A7%E8%83%BD%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86/",
            "url": "https://fanlu.top/2023/07/06/SoloX%E4%B9%8B%E5%86%85%E5%AD%98%E6%80%A7%E8%83%BD%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86/",
            "title": "SoloX之内存性能数据采集",
            "date_published": "2023-07-06T12:57:47.000Z",
            "content_html": "<h2 id=\"安卓\"><a class=\"markdownIt-Anchor\" href=\"#安卓\">#</a> 安卓</h2>\n<h3 id=\"获取内存信息\"><a class=\"markdownIt-Anchor\" href=\"#获取内存信息\">#</a> 获取内存信息</h3>\n<p>给定进程的 PID，返回总内存、本地堆内存、dalvik 堆内存  并转换为 MB 单位</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getAndroidMem</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"Get the Android memory ,unit:MB\"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    cmd <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'dumpsys meminfo </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>pid<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    output <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span>cmd<span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>deviceId<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    m_total <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">r'TOTAL\\s*(\\d+)'</span><span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    m_native <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">r'Native Heap\\s*(\\d+)'</span><span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    m_dalvik <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">r'Dalvik Heap\\s*(\\d+)'</span><span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    totalPass <span class=\"token operator\">=</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>m_total<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    nativePass <span class=\"token operator\">=</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>m_native<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    dalvikPass <span class=\"token operator\">=</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>m_dalvik<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> totalPass<span class=\"token punctuation\">,</span> nativePass<span class=\"token punctuation\">,</span> dalvikPass</pre></td></tr></table></figure><h2 id=\"ios\"><a class=\"markdownIt-Anchor\" href=\"#ios\">#</a> IOS</h2>\n<p>同样通过 instruments 协议获取；不过只能获取到总内存</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getiOSMem</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"Get the iOS memory\"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    apm <span class=\"token operator\">=</span> iosAPM<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>pkgName<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    totalPass <span class=\"token operator\">=</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>apm<span class=\"token punctuation\">.</span>getPerformance<span class=\"token punctuation\">(</span>apm<span class=\"token punctuation\">.</span>memory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    nativePass <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    dalvikPass <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> totalPass<span class=\"token punctuation\">,</span> nativePass<span class=\"token punctuation\">,</span> dalvikPass</pre></td></tr></table></figure>",
            "tags": [
                "测试开发 性能 工具"
            ]
        },
        {
            "id": "https://fanlu.top/2023/07/06/SoloX%E4%B9%8BCPU%E6%80%A7%E8%83%BD%E9%87%87%E9%9B%86/",
            "url": "https://fanlu.top/2023/07/06/SoloX%E4%B9%8BCPU%E6%80%A7%E8%83%BD%E9%87%87%E9%9B%86/",
            "title": "SoloX之CPU性能采集",
            "date_published": "2023-07-06T12:57:07.000Z",
            "content_html": "<h2 id=\"安卓\"><a class=\"markdownIt-Anchor\" href=\"#安卓\">#</a> 安卓</h2>\n<h3 id=\"获取进程cpu使用时间\"><a class=\"markdownIt-Anchor\" href=\"#获取进程cpu使用时间\">#</a> 获取进程 cpu 使用时间</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getprocessCpuStat</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"get the cpu usage of a process at a certain time\"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    cmd <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'cat /proc/</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>pid<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/stat'</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    result <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span>cmd<span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>deviceId<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    r <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\\s+\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    toks <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    processCpu <span class=\"token operator\">=</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>toks<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>toks<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>toks<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>toks<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> processCpu</pre></td></tr></table></figure><h3 id=\"获取总cpu使用时间\"><a class=\"markdownIt-Anchor\" href=\"#获取总cpu使用时间\">#</a> 获取总 cpu 使用时间</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getTotalCpuStat</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"get the total cpu usage at a certain time\"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    cmd <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'cat /proc/stat |</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>d<span class=\"token punctuation\">.</span>filterType<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> ^cpu'</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    result <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span>cmd<span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>deviceId<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    r <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'(?&lt;!cpu)\\d+'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    toks <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    totalCpu <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        totalCpu <span class=\"token operator\">+=</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>toks<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>totalCpu<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"获取cpu核数\"><a class=\"markdownIt-Anchor\" href=\"#获取cpu核数\">#</a> 获取 CPU 核数</h3>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getCpuCores</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"get Android cpu cores\"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    cmd <span class=\"token operator\">=</span> <span class=\"token string\">'cat /sys/devices/system/cpu/online'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    result <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span>cmd<span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>deviceId<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        nums <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        nums <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">return</span> nums</pre></td></tr></table></figure><h3 id=\"获取系统cpu使用时间\"><a class=\"markdownIt-Anchor\" href=\"#获取系统cpu使用时间\">#</a> 获取系统 CPU 使用时间</h3>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getSysCpuStat</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"get the total cpu usage at a certain time\"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    cmd <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'cat /proc/stat |</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>d<span class=\"token punctuation\">.</span>filterType<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> ^cpu'</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    result <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span>cmd<span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>deviceId<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    r <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'(?&lt;!cpu)\\d+'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    toks <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    ileCpu <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>toks<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    sysCpu <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getTotalCpuStat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> ileCpu</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">return</span> sysCpu</pre></td></tr></table></figure><h3 id=\"采集结果\"><a class=\"markdownIt-Anchor\" href=\"#采集结果\">#</a> 采集结果</h3>\n<blockquote>\n<p>间隔 0.5s 连续获取两次采集结果，然后计算得到 cpu 使用率  <span class=\"exturl\" data-url=\"aHR0cHM6Ly95ZXN0ZXJtb3Jyb3cuZ2l0aHViLmlvLzIwMjEvMDMvMTcvQ1BVJUU0JUJEJUJGJUU3JTk0JUE4JUU3JThFJTg3Lw==\">https://yestermorrow.github.io/2021/03/17/CPU 使用率 /</span></p>\n</blockquote>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getAndroidCpuRate</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> noLog<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"get the Android cpu rate of a process\"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    processCpuTime_1 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getprocessCpuStat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    totalCpuTime_1 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getTotalCpuStat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    sysCpuTime_1 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getSysCpuStat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    processCpuTime_2 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getprocessCpuStat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    totalCpuTime_2 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getTotalCpuStat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    sysCpuTime_2 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getSysCpuStat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    appCpuRate <span class=\"token operator\">=</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>processCpuTime_2 <span class=\"token operator\">-</span> processCpuTime_1<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>totalCpuTime_2 <span class=\"token operator\">-</span> totalCpuTime_1<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    sysCpuRate <span class=\"token operator\">=</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>sysCpuTime_2 <span class=\"token operator\">-</span> sysCpuTime_1<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>totalCpuTime_2 <span class=\"token operator\">-</span> totalCpuTime_1<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">if</span> noLog <span class=\"token keyword\">is</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        apm_time <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">'%H:%M:%S.%f'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        f<span class=\"token punctuation\">.</span>add_log<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">,</span><span class=\"token string\">'cpu_app.log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> apm_time<span class=\"token punctuation\">,</span> appCpuRate<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        f<span class=\"token punctuation\">.</span>add_log<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">,</span><span class=\"token string\">'cpu_sys.log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> apm_time<span class=\"token punctuation\">,</span> sysCpuRate<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">return</span> appCpuRate<span class=\"token punctuation\">,</span> sysCpuRate</pre></td></tr></table></figure><h2 id=\"ios\"><a class=\"markdownIt-Anchor\" href=\"#ios\">#</a> IOS</h2>\n<blockquote>\n<p>ios 基于 pydevice 和 instrument 协议解析</p>\n</blockquote>\n<p>采集数据来自于 tidevice_instruments.py  iter_cpu_memory 方法</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">iter_cpu_memory</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> Iterator<span class=\"token punctuation\">[</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    Close connection after iterator stop</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    Iterator content eg:</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        [&#123;'CPUCount': 2,</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        'EnabledCPUs': 2,</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        'EndMachAbsTime': 2158497307470,</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        'PerCPUUsage': [&#123;'CPU_NiceLoad': 0.0,</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                        'CPU_SystemLoad': -1.0,</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                        'CPU_TotalLoad': 13.0,</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                        'CPU_UserLoad': -1.0&#125;,</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                        &#123;'CPU_NiceLoad': 0.0,</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                        'CPU_SystemLoad': -1.0,</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                        'CPU_TotalLoad': 31.0,</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                        'CPU_UserLoad': -1.0&#125;],</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        'StartMachAbsTime': 2158473307786,</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        'SystemCPUUsage': &#123;'CPU_NiceLoad': 0.0,</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                            'CPU_SystemLoad': -1.0,</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                            'CPU_TotalLoad': 44.0,</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                            'CPU_UserLoad': -1.0&#125;,</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        'Type': 33&#125;,</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        &#123;'EndMachAbsTime': 2158515468993,</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        \"cpuUsage\", \"ctxSwitch\", \"intWakeups\", \"physFootprint\",</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            \"memResidentSize\", \"memAnon\", \"pid\"</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        'Processes': &#123;0: [0.20891292720792148, # cpuUsage</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                            335770139, # contextSwitch</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                            120505483, # interruptWakeups</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                            7913472,   # physical Footprint</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                            869646336, # memory RSS</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                            232210432, # memory Anon?</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                            0],        # pid</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                        1: [0.0005502246751775457,</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                            691065,</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                            6038,</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                            12353840,</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                            4177920,</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                            12255232,</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                            1]</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                        &#125;</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        &#125;]</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    config <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token string\">\"bm\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token string\">\"cpuUsage\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token string\">\"procAttrs\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            <span class=\"token string\">\"memVirtualSize\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cpuUsage\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ctxSwitch\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"intWakeups\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token string\">\"physFootprint\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"memResidentSize\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"memAnon\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"pid\"</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token string\">\"sampleInterval\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1000000000</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 1e9 ns == 1s</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token string\">\"sysAttrs\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token string\">\"vmExtPageCount\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"vmFreeCount\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"vmPurgeableCount\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            <span class=\"token string\">\"vmSpeculativeCount\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"physMemSize\"</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token string\">\"ur\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1000</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    channel_id <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>make_channel<span class=\"token punctuation\">(</span>InstrumentsService<span class=\"token punctuation\">.</span>Sysmontap<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    self<span class=\"token punctuation\">.</span>call_message<span class=\"token punctuation\">(</span>channel_id<span class=\"token punctuation\">,</span> <span class=\"token string\">\"setConfig:\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>config<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    self<span class=\"token punctuation\">.</span>call_message<span class=\"token punctuation\">(</span>channel_id<span class=\"token punctuation\">,</span> <span class=\"token string\">\"start\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token comment\"># channel = self.make_channel(</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token comment\">#     \"com.apple.instruments.server.services.processcontrol\")</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token comment\"># aux = AUXMessageBuffer()</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token comment\"># aux.append_obj(1)  # TODO: pid</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token comment\"># payload = DTXPayload.build(\"startObservingPid:\", aux)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token comment\"># self.send_dtx_message(channel, payload)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    notification_channel_id <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> channel_id</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token keyword\">for</span> m <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>iter_message<span class=\"token punctuation\">(</span>Event<span class=\"token punctuation\">.</span>NOTIFICATION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            <span class=\"token keyword\">if</span> m<span class=\"token punctuation\">.</span>flags <span class=\"token operator\">==</span> <span class=\"token number\">0x01</span> <span class=\"token keyword\">and</span> m<span class=\"token punctuation\">.</span>channel_id <span class=\"token operator\">==</span> notification_channel_id<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>                <span class=\"token keyword\">yield</span> m<span class=\"token punctuation\">.</span>result</pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token keyword\">except</span> GeneratorExit<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        self<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 停止 connection，防止消息不停的发过来，暂时不会别的方法</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token comment\"># print(\"Stop channel\")</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        <span class=\"token comment\">## The following code is not working</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token comment\"># self.call_message(channel_id, \"stopSampling\")</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        <span class=\"token comment\"># aux = AUXMessageBuffer()</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        <span class=\"token comment\"># aux.append_obj(channel_id)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        <span class=\"token comment\"># self.send_dtx_message(channel_id, DTXPayload.build('_channelCanceled:', aux))</span></pre></td></tr></table></figure><ul>\n<li>该方法与 instrument 建立通信 发送协议请求，获取数据<br>\n其数据结果包含了</li>\n<li>cpu 数量</li>\n<li>启动的 cpu</li>\n<li>单个 cpu 使用率</li>\n<li>…</li>\n</ul>\n",
            "tags": [
                "测试开发 性能 工具"
            ]
        },
        {
            "id": "https://fanlu.top/2023/07/01/solox%E4%B9%8Bfps%E6%80%A7%E8%83%BD%E9%87%87%E9%9B%86/",
            "url": "https://fanlu.top/2023/07/01/solox%E4%B9%8Bfps%E6%80%A7%E8%83%BD%E9%87%87%E9%9B%86/",
            "title": "solox之fps性能采集",
            "date_published": "2023-07-01T14:14:39.000Z",
            "content_html": "<h2 id=\"安卓\"><a class=\"markdownIt-Anchor\" href=\"#安卓\">#</a> 安卓</h2>\n<p>通过 fpsMonitor 类获取到 fps 计算器；</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getAndroidFps</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> noLog<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"get Android Fps, unit:HZ\"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    monitors <span class=\"token operator\">=</span> FPSMonitor<span class=\"token punctuation\">(</span>device_id<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>deviceId<span class=\"token punctuation\">,</span> package_name<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>pkgName<span class=\"token punctuation\">,</span> frequency<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                          surfaceview<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>surfaceview<span class=\"token punctuation\">,</span> start_time<span class=\"token operator\">=</span>TimeUtils<span class=\"token punctuation\">.</span>getCurrentTimeUnderline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    monitors<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    fps<span class=\"token punctuation\">,</span> jank <span class=\"token operator\">=</span> monitors<span class=\"token punctuation\">.</span>stop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span> noLog <span class=\"token keyword\">is</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        apm_time <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">'%H:%M:%S.%f'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        f<span class=\"token punctuation\">.</span>add_log<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">,</span><span class=\"token string\">'fps.log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> apm_time<span class=\"token punctuation\">,</span> fps<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        f<span class=\"token punctuation\">.</span>add_log<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">,</span><span class=\"token string\">'jank.log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> apm_time<span class=\"token punctuation\">,</span> jank<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> fps<span class=\"token punctuation\">,</span> jank</pre></td></tr></table></figure><p>在 FPSMonitor 中使用 SurfaceStatsCollector 来采集 FPS 数据</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">FPSMonitor</span><span class=\"token punctuation\">(</span>Monitor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> device_id<span class=\"token punctuation\">,</span> package_name<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> frequency<span class=\"token operator\">=</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> timeout<span class=\"token operator\">=</span><span class=\"token number\">24</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> fps_queue<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                 jank_threshold<span class=\"token operator\">=</span><span class=\"token number\">166</span><span class=\"token punctuation\">,</span> use_legacy<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> surfaceview<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> start_time<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        self<span class=\"token punctuation\">.</span>start_time <span class=\"token operator\">=</span> start_time</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        self<span class=\"token punctuation\">.</span>use_legacy <span class=\"token operator\">=</span> use_legacy</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        self<span class=\"token punctuation\">.</span>frequency <span class=\"token operator\">=</span> frequency  <span class=\"token comment\"># 取样频率</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        self<span class=\"token punctuation\">.</span>jank_threshold <span class=\"token operator\">=</span> jank_threshold</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        self<span class=\"token punctuation\">.</span>device <span class=\"token operator\">=</span> device_id</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        self<span class=\"token punctuation\">.</span>timeout <span class=\"token operator\">=</span> timeout</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        self<span class=\"token punctuation\">.</span>surfaceview <span class=\"token operator\">=</span> surfaceview</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> package_name<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            package_name <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">.</span>adb<span class=\"token punctuation\">.</span>get_foreground_process<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        self<span class=\"token punctuation\">.</span>package <span class=\"token operator\">=</span> package_name</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        self<span class=\"token punctuation\">.</span>fpscollector <span class=\"token operator\">=</span> SurfaceStatsCollector<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>frequency<span class=\"token punctuation\">,</span> package_name<span class=\"token punctuation\">,</span> fps_queue<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                                                  self<span class=\"token punctuation\">.</span>jank_threshold<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>surfaceview<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>use_legacy<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>SurfaceStatsCollector 涵盖的功能有：</p>\n<h4 id=\"获取surface的activity名字\"><a class=\"markdownIt-Anchor\" href=\"#获取surface的activity名字\">#</a> 获取 surface 的 activity 名字</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_surfaceview_activity</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    activity_name <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    activity_line <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        dumpsys_result <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span><span class=\"token string\">'dumpsys SurfaceFlinger --list | &#123;&#125; &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span>filterType<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>package_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        dumpsys_result_list <span class=\"token operator\">=</span> dumpsys_result<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>    </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> dumpsys_result_list<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">if</span> line<span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span><span class=\"token string\">'SurfaceView'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> line<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>package_name<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                activity_line <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">if</span> activity_line<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">if</span> activity_line<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>      </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                activity_name <span class=\"token operator\">=</span> activity_line<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                activity_name <span class=\"token operator\">=</span> activity_line<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'SurfaceView'</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'['</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">']'</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>    </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            activity_name <span class=\"token operator\">=</span> dumpsys_result_list<span class=\"token punctuation\">[</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>dumpsys_result_list<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> activity_name<span class=\"token punctuation\">.</span>__contains__<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>package_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                logger<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span><span class=\"token string\">'get activity name failed, Please provide SurfaceFlinger --list information to the author'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">'dumpsys SurfaceFlinger --list info: &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>dumpsys_result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">except</span> Exception<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        traceback<span class=\"token punctuation\">.</span>print_exc<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        logger<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span><span class=\"token string\">'get activity name failed, Please provide SurfaceFlinger --list information to the author'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">'dumpsys SurfaceFlinger --list info: &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>dumpsys_result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">return</span> activity_name</pre></td></tr></table></figure><h4 id=\"获取聚焦的activity名字\"><a class=\"markdownIt-Anchor\" href=\"#获取聚焦的activity名字\">#</a> 获取聚焦的 activity 名字</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_focus_activity</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    activity_name <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    activity_line <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    dumpsys_result <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span><span class=\"token string\">'dumpsys window windows'</span><span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    dumpsys_result_list <span class=\"token operator\">=</span> dumpsys_result<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> dumpsys_result_list<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">if</span> line<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'mCurrentFocus'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            activity_line <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span> activity_line<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        activity_line_split <span class=\"token operator\">=</span> activity_line<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> activity_name</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>activity_line_split<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">if</span> activity_line_split<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'u0'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            activity_name <span class=\"token operator\">=</span> activity_line_split<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>rstrip<span class=\"token punctuation\">(</span><span class=\"token string\">'&#125;'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            activity_name <span class=\"token operator\">=</span> activity_line_split<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> activity_name<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        activity_name <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>get_surfaceview_activity<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>        </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">return</span> activity_name</pre></td></tr></table></figure><h4 id=\"获取前台进程名字\"><a class=\"markdownIt-Anchor\" href=\"#获取前台进程名字\">#</a> 获取前台进程名字</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_foreground_process</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    focus_activity <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>get_focus_activity<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> focus_activity<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">return</span> focus_activity<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span></pre></td></tr></table></figure><h4 id=\"获取sdk版本\"><a class=\"markdownIt-Anchor\" href=\"#获取sdk版本\">#</a> 获取 sdk 版本</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_sdk_version</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    sdk_version <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span><span class=\"token string\">'getprop ro.build.version.sdk'</span><span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">return</span> sdk_version</pre></td></tr></table></figure><h4 id=\"版本兼容\"><a class=\"markdownIt-Anchor\" href=\"#版本兼容\">#</a> 版本兼容</h4>\n<p>为了兼容不同版本的安卓系统，做了两套方法，在启动时进行区分：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> start_time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> self<span class=\"token punctuation\">.</span>use_legacy_method<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            self<span class=\"token punctuation\">.</span>focus_window <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>get_focus_activity<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>focus_window<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'$'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                self<span class=\"token punctuation\">.</span>focus_window <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>focus_window<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'$'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'\\$'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">except</span> Exception<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            logger<span class=\"token punctuation\">.</span>warning<span class=\"token punctuation\">(</span><span class=\"token string\">u'Unable to dynamically obtain the current activity name, using page_ Flip statistics full screen frame rate'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            self<span class=\"token punctuation\">.</span>use_legacy_method <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            self<span class=\"token punctuation\">.</span>surface_before <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_get_surface_stats_legacy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        logger<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">(</span><span class=\"token string\">\"dumpsys SurfaceFlinger --latency-clear is none\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        self<span class=\"token punctuation\">.</span>use_legacy_method <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        self<span class=\"token punctuation\">.</span>surface_before <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_get_surface_stats_legacy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    self<span class=\"token punctuation\">.</span>collector_thread <span class=\"token operator\">=</span> threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>_collector_thread<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    self<span class=\"token punctuation\">.</span>collector_thread<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    self<span class=\"token punctuation\">.</span>calculator_thread <span class=\"token operator\">=</span> threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>_calculator_thread<span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>start_time<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    self<span class=\"token punctuation\">.</span>calculator_thread<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>这里分别启动了采集线程和计算线程。</p>\n<h4 id=\"旧版本方法\"><a class=\"markdownIt-Anchor\" href=\"#旧版本方法\">#</a> 旧版本方法</h4>\n<blockquote>\n<p>获取当前的 surface 索引和时间戳</p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">_get_surface_stats_legacy</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"Legacy method (before JellyBean), returns the current Surface index</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>         and timestamp.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    Calculate FPS by measuring the difference of Surface index returned by</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    SurfaceFlinger in a period of time.</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    Returns:</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        Dict of &#123;page_flip_count (or 0 if there was an error), timestamp&#125;.</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    cur_surface <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    timestamp <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    ret <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span><span class=\"token string\">\"service call SurfaceFlinger 1013\"</span><span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> ret<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">match</span> <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'^Result: Parcel\\((\\w+)'</span><span class=\"token punctuation\">,</span> ret<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">match</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        cur_surface <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">match</span><span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'page_flip_count'</span><span class=\"token punctuation\">:</span> cur_surface<span class=\"token punctuation\">,</span> <span class=\"token string\">'timestamp'</span><span class=\"token punctuation\">:</span> timestamp<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span></pre></td></tr></table></figure><h4 id=\"新版本方法\"><a class=\"markdownIt-Anchor\" href=\"#新版本方法\">#</a> 新版本方法</h4>\n<h5 id=\"首先获取到帧数据列表\"><a class=\"markdownIt-Anchor\" href=\"#首先获取到帧数据列表\">#</a> 首先获取到帧数据列表</h5>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">_get_surfaceflinger_frame_data</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"Returns collected SurfaceFlinger frame timing data.</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    return:(16.6,[[t1,t2,t3],[t4,t5,t6]])</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    Returns:</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        A tuple containing:</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        - The display's nominal refresh period in seconds.</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        - A list of timestamps signifying frame presentation times in seconds.</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        The return value may be (None, None) if there was no data collected (for</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        example, if the app was closed before the collector thread has finished).</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\"># shell dumpsys SurfaceFlinger --latency &lt;window name></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\"># prints some information about the last 128 frames displayed in</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\"># that window.</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\"># The data returned looks like this:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\"># 16954612</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\"># 7657467895508     7657482691352     7657493499756</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\"># 7657484466553     7657499645964     7657511077881</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\"># 7657500793457     7657516600576     7657527404785</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\"># (...)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\"># The first line is the refresh period (here 16.95 ms), it is followed</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token comment\"># by 128 lines w/ 3 timestamps in nanosecond each:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\"># A) when the app started to draw</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token comment\"># B) the vsync immediately preceding SF submitting the frame to the h/w</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\"># C) timestamp immediately after SF submitted that frame to the h/w</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token comment\"># The difference between the 1st and 3rd timestamp is the frame-latency.</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token comment\"># An interesting data is when the frame latency crosses a refresh period</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token comment\"># boundary, this can be calculated this way:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token comment\"># ceil((C - A) / refresh-period)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token comment\"># (each time the number above changes, we have a \"jank\").</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\"># If this happens a lot during an animation, the animation appears</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token comment\"># janky, even if it runs at 60 fps in average.</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token comment\"># Google Pixel 2 android8.0 dumpsys SurfaceFlinger --latency 结果</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token comment\"># 16666666</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token comment\"># 0       0       0</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token comment\"># 0       0       0</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token comment\"># 0       0       0</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token comment\"># 0       0       0</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token comment\"># 但华为 荣耀 9 android8.0 dumpsys SurfaceFlinger --latency 结果是正常的 但数据更新很慢  也不能用来计算 fps</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token comment\"># 16666666</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token comment\"># 9223372036854775807     3618832932780   9223372036854775807</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token comment\"># 9223372036854775807     3618849592155   9223372036854775807</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token comment\"># 9223372036854775807     3618866251530   9223372036854775807</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    refresh_period <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    timestamps <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    nanoseconds_per_second <span class=\"token operator\">=</span> <span class=\"token number\">1e9</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    pending_fence_timestamp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">63</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>surfaceview <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        results <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            cmd<span class=\"token operator\">=</span><span class=\"token string\">'dumpsys SurfaceFlinger --latency %s'</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>focus_window<span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        results <span class=\"token operator\">=</span> results<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\r\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>splitlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        refresh_period <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> nanoseconds_per_second</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        results <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span><span class=\"token string\">'dumpsys gfxinfo %s framestats'</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>package_name<span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        results <span class=\"token operator\">=</span> results<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\r\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>splitlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        isHaveFoundWindow <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        PROFILEDATA_line <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        activity <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>focus_window</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>focus_window<span class=\"token punctuation\">.</span>__contains__<span class=\"token punctuation\">(</span><span class=\"token string\">'#'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            activity <span class=\"token operator\">=</span> activity<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'#'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> results<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> isHaveFoundWindow<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token string\">\"Window\"</span> <span class=\"token keyword\">in</span> line <span class=\"token keyword\">and</span> activity <span class=\"token keyword\">in</span> line<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>                    isHaveFoundWindow <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> isHaveFoundWindow<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>                <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token string\">\"PROFILEDATA\"</span> <span class=\"token keyword\">in</span> line<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>                PROFILEDATA_line <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>            fields <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>            fields <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>            <span class=\"token keyword\">if</span> fields <span class=\"token keyword\">and</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">==</span> fields<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>                timestamp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>fields<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>fields<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>fields<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>                <span class=\"token keyword\">if</span> timestamp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> pending_fence_timestamp<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>                    <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>                timestamp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>_timestamp <span class=\"token operator\">/</span> nanoseconds_per_second <span class=\"token keyword\">for</span> _timestamp <span class=\"token keyword\">in</span> timestamp<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>                timestamps<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>timestamp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> PROFILEDATA_line<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>                <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        self<span class=\"token punctuation\">.</span>focus_window <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>get_surfaceview_activity<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        results <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>            cmd<span class=\"token operator\">=</span><span class=\"token string\">'dumpsys SurfaceFlinger --latency %s'</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>focus_window<span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        results <span class=\"token operator\">=</span> results<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\r\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>splitlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> results<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>isdigit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>            refresh_period <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> nanoseconds_per_second</pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>            logger<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>        <span class=\"token comment\"># If a fence associated with a frame is still pending when we query the</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>        <span class=\"token comment\"># latency data, SurfaceFlinger gives the frame a timestamp of INT64_MAX.</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>        <span class=\"token comment\"># Since we only care about completed frames, we will ignore any timestamps</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        <span class=\"token comment\"># with this value.</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>        <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> results<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>            fields <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>fields<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>                <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>            timestamp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>fields<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>fields<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>fields<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>            <span class=\"token keyword\">if</span> timestamp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> pending_fence_timestamp<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>                <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>            timestamp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>_timestamp <span class=\"token operator\">/</span> nanoseconds_per_second <span class=\"token keyword\">for</span> _timestamp <span class=\"token keyword\">in</span> timestamp<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>            timestamps<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>timestamp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>refresh_period<span class=\"token punctuation\">,</span> timestamps<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>然后将数据插入到队列中</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>refresh_period<span class=\"token punctuation\">,</span> new_timestamps <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_get_surfaceflinger_frame_data<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> refresh_period <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span> <span class=\"token keyword\">or</span> new_timestamps <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    self<span class=\"token punctuation\">.</span>focus_window <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>get_focus_activity<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    logger<span class=\"token punctuation\">.</span>warning<span class=\"token punctuation\">(</span><span class=\"token string\">\"refresh_period is None or timestamps is None\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>timestamps <span class=\"token operator\">+=</span> <span class=\"token punctuation\">[</span>timestamp <span class=\"token keyword\">for</span> timestamp <span class=\"token keyword\">in</span> new_timestamps</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>               <span class=\"token keyword\">if</span> timestamp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> self<span class=\"token punctuation\">.</span>last_timestamp<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>timestamps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    first_timestamp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>last_timestamp<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> is_first<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        timestamps <span class=\"token operator\">=</span> first_timestamp <span class=\"token operator\">+</span> timestamps</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    self<span class=\"token punctuation\">.</span>last_timestamp <span class=\"token operator\">=</span> timestamps<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    is_first <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    is_first <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    cur_focus_window <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>get_focus_activity<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>focus_window <span class=\"token operator\">!=</span> cur_focus_window<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        self<span class=\"token punctuation\">.</span>focus_window <span class=\"token operator\">=</span> cur_focus_window</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>self<span class=\"token punctuation\">.</span>data_queue<span class=\"token punctuation\">.</span>put<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>refresh_period<span class=\"token punctuation\">,</span> timestamps<span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>time_consume <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> before</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>delta_inter <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>frequency <span class=\"token operator\">-</span> time_consume</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">if</span> delta_inter <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span>delta_inter<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"计算线程计算fps和jank\"><a class=\"markdownIt-Anchor\" href=\"#计算线程计算fps和jank\">#</a> 计算线程计算 fps 和 jank</h4>\n<h5 id=\"旧版本方法-2\"><a class=\"markdownIt-Anchor\" href=\"#旧版本方法-2\">#</a> 旧版本方法</h5>\n<p>不知道为什么 fps 设置最高就是 60</p>\n<p>通过一段时间内的帧总数除以时间差获取到 fps</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>td <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token string\">'timestamp'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> self<span class=\"token punctuation\">.</span>surface_before<span class=\"token punctuation\">[</span><span class=\"token string\">'timestamp'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>seconds <span class=\"token operator\">=</span> td<span class=\"token punctuation\">.</span>seconds <span class=\"token operator\">+</span> td<span class=\"token punctuation\">.</span>microseconds <span class=\"token operator\">/</span> <span class=\"token number\">1e6</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>frame_count <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'page_flip_count'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>               self<span class=\"token punctuation\">.</span>surface_before<span class=\"token punctuation\">[</span><span class=\"token string\">'page_flip_count'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>fps <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span>frame_count <span class=\"token operator\">/</span> seconds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">if</span> fps <span class=\"token operator\">></span> <span class=\"token number\">60</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    fps <span class=\"token operator\">=</span> <span class=\"token number\">60</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>self<span class=\"token punctuation\">.</span>surface_before <span class=\"token operator\">=</span> data</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># logger.debug('FPS:%2s'%fps)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>collect_fps <span class=\"token operator\">=</span> fps</pre></td></tr></table></figure><h4 id=\"新版本方法-2\"><a class=\"markdownIt-Anchor\" href=\"#新版本方法-2\">#</a> 新版本方法</h4>\n<ol>\n<li>首先拿到帧数</li>\n<li>对异常数据的处理</li>\n<li>2、3、4 帧数为啥这样处理？</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">_calculate_results_new</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> refresh_period<span class=\"token punctuation\">,</span> timestamps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    frame_count <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>timestamps<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> frame_count <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        fps <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        jank <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">elif</span> frame_count <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        fps <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        jank <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">elif</span> frame_count <span class=\"token operator\">==</span> <span class=\"token number\">2</span> <span class=\"token keyword\">or</span> frame_count <span class=\"token operator\">==</span> <span class=\"token number\">3</span> <span class=\"token keyword\">or</span> frame_count <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        seconds <span class=\"token operator\">=</span> timestamps<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> timestamps<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">if</span> seconds <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            fps <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>frame_count <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> seconds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            jank <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_calculate_janky<span class=\"token punctuation\">(</span>timestamps<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            fps <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            jank <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        seconds <span class=\"token operator\">=</span> timestamps<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> timestamps<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">if</span> seconds <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            fps <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>frame_count <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> seconds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            jank <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_calculate_jankey_new<span class=\"token punctuation\">(</span>timestamps<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            fps <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            jank <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">return</span> fps<span class=\"token punctuation\">,</span> jank</pre></td></tr></table></figure><h5 id=\"计算jank\"><a class=\"markdownIt-Anchor\" href=\"#计算jank\">#</a> 计算 jank</h5>\n<h6 id=\"旧版本\"><a class=\"markdownIt-Anchor\" href=\"#旧版本\">#</a> 旧版本</h6>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">_calculate_janky</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> timestamps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    tempstamp <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    jank <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span> timestamp <span class=\"token keyword\">in</span> timestamps<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span> tempstamp <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            tempstamp <span class=\"token operator\">=</span> timestamp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        costtime <span class=\"token operator\">=</span> timestamp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> tempstamp</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">if</span> costtime <span class=\"token operator\">></span> self<span class=\"token punctuation\">.</span>jank_threshold<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            jank <span class=\"token operator\">=</span> jank <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        tempstamp <span class=\"token operator\">=</span> timestamp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">return</span> jank</pre></td></tr></table></figure><h5 id=\"新版本\"><a class=\"markdownIt-Anchor\" href=\"#新版本\">#</a> 新版本</h5>\n<p>通过预设的 jank_threshold 阈值判断是否有 jank（默认 166ms 的渲染时间）</p>\n<p>通过过去 4 帧的时间，也即过去三帧的平均渲染时间 *2，如果当前帧渲染时间超过这个值，并且当前帧渲染时间大于上一帧渲染时间，判断为一次 jank</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">_calculate_jankey_new</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> timestamps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    twofilmstamp <span class=\"token operator\">=</span> <span class=\"token number\">83.3</span> <span class=\"token operator\">/</span> <span class=\"token number\">1000.0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    tempstamp <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    jank <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">for</span> index<span class=\"token punctuation\">,</span> timestamp <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>timestamps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">if</span> tempstamp <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                tempstamp <span class=\"token operator\">=</span> timestamp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            costtime <span class=\"token operator\">=</span> timestamp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> tempstamp</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">if</span> costtime <span class=\"token operator\">></span> self<span class=\"token punctuation\">.</span>jank_threshold<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                jank <span class=\"token operator\">=</span> jank <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            tempstamp <span class=\"token operator\">=</span> timestamp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">elif</span> index <span class=\"token operator\">></span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            currentstamp <span class=\"token operator\">=</span> timestamps<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            lastonestamp <span class=\"token operator\">=</span> timestamps<span class=\"token punctuation\">[</span>index <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            lasttwostamp <span class=\"token operator\">=</span> timestamps<span class=\"token punctuation\">[</span>index <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            lastthreestamp <span class=\"token operator\">=</span> timestamps<span class=\"token punctuation\">[</span>index <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            lastfourstamp <span class=\"token operator\">=</span> timestamps<span class=\"token punctuation\">[</span>index <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            tempframetime <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>lastthreestamp <span class=\"token operator\">-</span> lastfourstamp<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>lasttwostamp <span class=\"token operator\">-</span> lastthreestamp<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                    lastonestamp <span class=\"token operator\">-</span> lasttwostamp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            currentframetime <span class=\"token operator\">=</span> currentstamp <span class=\"token operator\">-</span> lastonestamp</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentframetime <span class=\"token operator\">></span> tempframetime<span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span>currentframetime <span class=\"token operator\">></span> twofilmstamp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                jank <span class=\"token operator\">=</span> jank <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">return</span> jank</pre></td></tr></table></figure><h2 id=\"ios\"><a class=\"markdownIt-Anchor\" href=\"#ios\">#</a> IOS</h2>\n<p>同样使用 instrument 协议</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">iter_fps</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">:</span> BaseDevice<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> Iterator<span class=\"token punctuation\">[</span>Any<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">with</span> d<span class=\"token punctuation\">.</span>connect_instruments<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> ts<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">for</span> data <span class=\"token keyword\">in</span> ts<span class=\"token punctuation\">.</span>iter_opengl_data<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            fps <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token string\">'CoreAnimationFramesPerSecond'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># fps from GPU</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token comment\"># print(\"FPS:\", fps)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">yield</span> DataType<span class=\"token punctuation\">.</span>FPS<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"fps\"</span><span class=\"token punctuation\">:</span> fps<span class=\"token punctuation\">,</span> <span class=\"token string\">\"time\"</span><span class=\"token punctuation\">:</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"value\"</span><span class=\"token punctuation\">:</span> fps<span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "测试开发 性能 工具"
            ]
        },
        {
            "id": "https://fanlu.top/2023/06/29/%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90-ASCII%E5%AD%97%E7%AC%A6%E7%94%BB/",
            "url": "https://fanlu.top/2023/06/29/%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90-ASCII%E5%AD%97%E7%AC%A6%E7%94%BB/",
            "title": "ASCII",
            "date_published": "2023-06-29T01:01:40.000Z",
            "content_html": "<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3BhdG9yamsuY29tL3NvZnR3YXJlL3RhYWcvI3A9ZGlzcGxheSZhbXA7Zj0zRCUyMERpYWdvbmFsJmFtcDt0PUhFTExPJTIwV09STEQ=\">http://patorjk.com/software/taag/#p=display&amp;f=3D Diagonal&amp;t=HELLO WORLD</span></p>\n</blockquote>\n<p>在知乎网站 F12 打开开发者工具，你会看到知乎的招聘广告，像这样：</p>\n<p><img data-src=\"https://i.imgloc.com/2023/06/29/V3Vzpk.png\" alt=\"截图\"><br>\n这样的字符画是怎么实现的呢？就可以利用这个网站来实现。</p>\n<p>一个将字符，转换为 ASCII 字符画的网站。（<span class=\"exturl\" data-url=\"aHR0cDovL3BhdG9yamsuY29tL3NvZnR3YXJlL3RhYWcvI3A9ZGlzcGxheSZhbXA7Yz1iYXNoJmFtcDtmPUFscGhhJmFtcDt0PUhJUkUlRUYlQkMlODk=\">http://patorjk.com/software/taag/#p=display&amp;c=bash&amp;f=Alpha&amp;t=HIRE）</span></p>\n<ul>\n<li>支持超多的字体样式</li>\n<li>支持设置字符宽度高度</li>\n<li>可以一键查看所有的样式效果</li>\n<li>支持自定义替换空白符</li>\n</ul>\n<p>比如要实现上面的知乎效果，就可以输出 HIRE，然后选择 Alpha 样式。</p>\n<p>可以给自己的网站开发者工具里面加一点有趣字符画，试试吧。</p>\n",
            "tags": [
                "前端 网站"
            ]
        },
        {
            "id": "https://fanlu.top/2023/06/25/SoloX%E7%A7%BB%E5%8A%A8%E8%AE%BE%E5%A4%87%E6%80%A7%E8%83%BD%E9%87%87%E9%9B%86%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/",
            "url": "https://fanlu.top/2023/06/25/SoloX%E7%A7%BB%E5%8A%A8%E8%AE%BE%E5%A4%87%E6%80%A7%E8%83%BD%E9%87%87%E9%9B%86%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/",
            "title": "SoloX移动设备性能采集工具使用体验",
            "date_published": "2023-06-25T13:46:33.000Z",
            "content_html": "<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NtYXJ0LXRlc3QtdGkvU29sb1g=\">https://github.com/smart-test-ti/SoloX</span></p>\n</blockquote>\n<p>基于 python 的移动设备性能测试工具，支持 android，通过 itunes（tidevice 的技术）支持了 ios 设备。</p>\n<h2 id=\"功能介绍\"><a class=\"markdownIt-Anchor\" href=\"#功能介绍\">#</a> 功能介绍</h2>\n<p>使用 python -m solox 启动服务，会自动打开 web 客户端：默认端口为 50003。</p>\n<h3 id=\"性能测试\"><a class=\"markdownIt-Anchor\" href=\"#性能测试\">#</a> 性能测试</h3>\n<ul>\n<li>\n<p>设备类型支持安卓和苹果</p>\n</li>\n<li>\n<p>支持选择设备列表</p>\n</li>\n<li>\n<p>支持选择目标 app</p>\n</li>\n<li>\n<p>支持选择子进程 (仅安卓)</p>\n</li>\n<li>\n<p>支持性能指标的开关 （只控制显示，不控制是否采集）</p>\n<ul>\n<li>CPU</li>\n<li>内存</li>\n<li>流量</li>\n<li>FPS</li>\n<li>电池</li>\n<li>surfaceview (仅安卓)</li>\n<li>wifi (仅安卓)</li>\n<li>GPU （仅苹果）</li>\n</ul>\n</li>\n<li>\n<p>支持显示设备信息</p>\n<ul>\n<li>品牌</li>\n<li>设备名</li>\n<li>系统版本</li>\n<li>序列号</li>\n<li>wifi 地址</li>\n</ul>\n</li>\n<li>\n<p>支持启动数据采集、停止设备采集（此时生成报告）</p>\n</li>\n<li>\n<p>支持显示 logcat 日志 <em>重要</em>   (仅安卓)</p>\n</li>\n<li>\n<p>支持安装应用</p>\n</li>\n<li>\n<p>支持查看当前应用启动时间 （安卓支持较好）</p>\n</li>\n<li>\n<p>支持对比模式 （仅安卓）<br>\n多台设备同时连接，同时测试<br>\n支持</p>\n<ul>\n<li>CPU</li>\n<li>Memory</li>\n<li>NetWorkData</li>\n<li>FPS</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"报告管理\"><a class=\"markdownIt-Anchor\" href=\"#报告管理\">#</a> 报告管理</h3>\n<ul>\n<li>报告展示</li>\n<li>报告管理\n<ul>\n<li>编辑 （场景名）</li>\n<li>导出为 excel</li>\n<li>删除</li>\n</ul>\n</li>\n<li>报告详情\n<ul>\n<li>结果对比</li>\n<li>保存 html</li>\n<li>保存图片</li>\n<li>单个图片导出</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"功能剖析\"><a class=\"markdownIt-Anchor\" href=\"#功能剖析\">#</a> 功能剖析</h2>\n<h3 id=\"web功能\"><a class=\"markdownIt-Anchor\" href=\"#web功能\">#</a> web 功能</h3>\n<h4 id=\"flask服务\"><a class=\"markdownIt-Anchor\" href=\"#flask服务\">#</a> flask 服务</h4>\n<p>web 功能基于 flask flask-template flask-soketio 实现。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>app <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">,</span> template_folder<span class=\"token operator\">=</span><span class=\"token string\">'templates'</span><span class=\"token punctuation\">,</span> static_folder<span class=\"token operator\">=</span><span class=\"token string\">'static'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>socketio <span class=\"token operator\">=</span> SocketIO<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span> cors_allowed_origins<span class=\"token operator\">=</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">startServer</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    socketio<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span> host<span class=\"token operator\">=</span>host<span class=\"token punctuation\">,</span> debug<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> port<span class=\"token operator\">=</span>port<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"自动打开页面\"><a class=\"markdownIt-Anchor\" href=\"#自动打开页面\">#</a> 自动打开页面</h4>\n<p>服务启动时会自动打开浏览器，打开 solox 前端客户端</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">openUrl</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    flag <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">while</span> flag<span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">'Start solox server ...'</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        f <span class=\"token operator\">=</span> Figlet<span class=\"token punctuation\">(</span>font<span class=\"token operator\">=</span><span class=\"token string\">\"slant\"</span><span class=\"token punctuation\">,</span> width<span class=\"token operator\">=</span><span class=\"token number\">300</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>renderText<span class=\"token punctuation\">(</span><span class=\"token string\">\"SOLOX 2. 6. 7\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        flag <span class=\"token operator\">=</span> getServerStatus<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    webbrowser<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://&#123;&#125;:&#123;&#125;/?platform=Android&amp;lan=en'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> new<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">'Running on http://&#123;&#125;:&#123;&#125;/?platform=Android&amp;lan=en (Press CTRL+C to quit)'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>其中，使用了</p>\n<ul>\n<li>Figlet 打印艺术字</li>\n<li>webbrowser  是 python 内置的一个库，可以打开 url</li>\n</ul>\n<h4 id=\"端口检查\"><a class=\"markdownIt-Anchor\" href=\"#端口检查\">#</a> 端口检查</h4>\n<p>服务启动时，还调用了检查端口的函数</p>\n<ul>\n<li>对于非 windows 系统，直接干掉进程</li>\n</ul>\n<pre><code>os.system(&quot;lsof -i:%s| grep LISTEN| awk '&#123;print $2&#125;'|xargs kill -9&quot; % port)\n</code></pre>\n<ul>\n<li>对于 windows 系统\n<ul>\n<li>使用  <code>netstat</code>  命令结合  <code>findstr</code>  过滤器，在指定端口上查找监听的进程。</li>\n<li>读取命令输出的数据，并逐行处理。</li>\n<li>提取每行中的进程 PID，并将其添加到  <code>pid_list</code>  列表中。</li>\n<li>将  <code>pid_list</code>  转换为集合，再转换回列表，以去除重复的 PID。</li>\n<li>选取列表中的第一个 PID，并使用  <code>taskkill</code>  命令强制终止该进程。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"启动\"><a class=\"markdownIt-Anchor\" href=\"#启动\">#</a> 启动</h4>\n<ul>\n<li>检查 python 版本：必选 3.10 以上</li>\n<li>然后使用 Fire 启动</li>\n</ul>\n<blockquote>\n<p>fire 库可以自己的库封装成一个命令 通过 python -m 命令调用</p>\n</blockquote>\n<p>其他所有的功能都是由 http 请求触发，logcat 是一个 websocket<br>\n 前端使用 jquery 处理事件和操作 dom；</p>\n<h3 id=\"设备监听与信息抓取\"><a class=\"markdownIt-Anchor\" href=\"#设备监听与信息抓取\">#</a> 设备监听与信息抓取</h3>\n<ol>\n<li>前端每次打开页面（ <code>$(document).ready</code> ）后，会自动触发连接按钮的点击事件，从而调用 <code>initializeEnv</code>  方法；</li>\n<li><code>initializeEnv</code>  请求接口 /device/ids?platform = 当前选择设备类型</li>\n<li>后端接口：</li>\n</ol>\n<h4 id=\"安卓\"><a class=\"markdownIt-Anchor\" href=\"#安卓\">#</a> 安卓</h4>\n<ul>\n<li>获取到当前的设备 id 列表 （解析命令行 <code>adb devices</code>  的输出）\n<ul>\n<li>获取第一个设备的 pkg 列表 （adb -s deviceID shell pm list package）</li>\n<li>获取设备信息 (安卓基于 <code>adb</code> ,ios 基于 <code>tidevice</code> )</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getDdeviceDetail</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> deviceId<span class=\"token punctuation\">,</span> platform<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    result <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">match</span><span class=\"token punctuation\">(</span>platform<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">case</span> Platform<span class=\"token punctuation\">.</span>Android<span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'brand'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span><span class=\"token string\">'getprop ro.product.brand'</span><span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>deviceId<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span><span class=\"token string\">'getprop ro.product.model'</span><span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>deviceId<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'version'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span><span class=\"token string\">'getprop ro.build.version.release'</span><span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>deviceId<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'serialno'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span><span class=\"token string\">'getprop ro.serialno'</span><span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>deviceId<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            cmd <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'ip addr show wlan0 | </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>filterType<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> link/ether'</span></span>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'wifiadr'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span>cmd<span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>deviceId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">case</span> Platform<span class=\"token punctuation\">.</span>iOS<span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            iosInfo <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>execCmd<span class=\"token punctuation\">(</span><span class=\"token string\">'tidevice info --json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'brand'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> iosInfo<span class=\"token punctuation\">[</span><span class=\"token string\">'DeviceClass'</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> iosInfo<span class=\"token punctuation\">[</span><span class=\"token string\">'DeviceName'</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'version'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> iosInfo<span class=\"token punctuation\">[</span><span class=\"token string\">'ProductVersion'</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'serialno'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> iosInfo<span class=\"token punctuation\">[</span><span class=\"token string\">'SerialNumber'</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'wifiadr'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> iosInfo<span class=\"token punctuation\">[</span><span class=\"token string\">'WiFiAddress'</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token keyword\">_</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">'&#123;&#125; is undefined'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>platform<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>   </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">return</span> result</pre></td></tr></table></figure><h4 id=\"ios\"><a class=\"markdownIt-Anchor\" href=\"#ios\">#</a> ios</h4>\n<ul>\n<li>获取设备信息 （解析命令行 tidevice list --json）</li>\n<li>获取第一个设备 pkg 列表：  <code>tidevice --udid 设备uid  applist</code></li>\n<li>获取设备详情，同上</li>\n</ul>\n<h3 id=\"性能采集\"><a class=\"markdownIt-Anchor\" href=\"#性能采集\">#</a> 性能采集</h3>\n<p>点击开始按钮，触发启动测试。</p>\n<ul>\n<li>必须先选中设备和应用</li>\n<li>分别调用 collectCpu、collectMem、collectNetwork、collectFps、collectBattery  如果是 ios 系统，还要采集 GPU collectGpu</li>\n<li>这些方法再调用 collectPers 方法（参数包括一个获取采集数据的方法），然后使用<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaGlnaGNoYXJ0cy5jb20v\"> highcharts</span> 绘制图表；其中采集数据的方法作为 highcharts 实例的数据 load 方法，并且图表支持切换时间范围；  这个请求函数成功后会设置一个 settimeout 定时器，一秒钟后再次请求这个接口更新数据，并将数据塞入到图表数据的最新；</li>\n</ul>\n<p>性能采集需要比较复杂，打算分成系列的博客慢慢写一下。</p>\n",
            "tags": [
                "测试开发 性能 工具"
            ]
        },
        {
            "id": "https://fanlu.top/2023/06/22/%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90-CSS%E7%81%B5%E6%84%9F/",
            "url": "https://fanlu.top/2023/06/22/%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90-CSS%E7%81%B5%E6%84%9F/",
            "title": "网站推荐-CSS灵感",
            "date_published": "2023-06-22T07:03:47.000Z",
            "content_html": "<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jc3Njb2NvLmNvbS9pbnNwaXJhdGlvbi8jLy4vaW5pdA==\">https://csscoco.com/inspiration/#/./init</span></p>\n</blockquote>\n<p>作者用 css 写了很多功能，包括：</p>\n<ul>\n<li>布局效果</li>\n<li>阴影特效</li>\n<li>伪类的使用</li>\n<li>滤镜</li>\n<li>边框</li>\n<li>背景</li>\n<li>混合模式</li>\n<li>3D</li>\n<li>动画</li>\n<li>clip-path</li>\n<li>文本内容相关</li>\n<li>SVG</li>\n<li>…</li>\n</ul>\n<p>网站同时提供了源码和演示效果，非常方便。<br>\n源码使用的 scss，可以学到很多 scss 的用法以及 css 的用法；<br>\n当然，也可以直接拿来主义，给自己的开发或者样式实现提供很多思路。</p>\n",
            "tags": [
                "前端 UI 网站"
            ]
        },
        {
            "id": "https://fanlu.top/2023/06/20/daisyUI%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/",
            "url": "https://fanlu.top/2023/06/20/daisyUI%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/",
            "title": "daisyUI使用体验",
            "date_published": "2023-06-20T15:28:33.000Z",
            "content_html": "<h2 id=\"tailwind介绍\"><a class=\"markdownIt-Anchor\" href=\"#tailwind介绍\">#</a> tailwind 介绍</h2>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudGFpbHdpbmRjc3MuY24vZG9jcy9jdXN0b21pemluZy1jb2xvcnMjLTg=\">https://www.tailwindcss.cn/docs/customizing-colors#-8</span></p>\n</blockquote>\n<p><em>以下介绍来自 chatGPT:</em><br>\nTailwind CSS 是一个现代化的 CSS 框架，它提供了一套可复用的构建块和实用工具，用于快速开发现代化的、自定义的用户界面。</p>\n<p>与其他 CSS 框架相比，Tailwind CSS 的一个主要区别是它并没有预定义的样式类。相反，它提供了一组原子级的 CSS 类，每个类都对应一个特定的样式属性。这些类的命名是基于其功能而不是视觉效果，例如 “text-red-500” 表示红色文本颜色，“bg-blue-200” 表示蓝色背景颜色，“p-4” 表示边距为 4 的元素等等。通过将这些类组合在一起，开发者可以轻松地构建自定义的样式。</p>\n<p>使用 Tailwind CSS，开发者可以通过组合这些原子类来创建出复杂的布局和设计，而不需要手动编写大量的 CSS。这使得开发过程更加快速和高效，并且可以在不同的项目中实现一致的设计风格。</p>\n<p>Tailwind CSS 还提供了一些有用的实用工具，如网格系统、响应式设计类、颜色调色板、阴影效果等。它还支持定制化配置，可以根据项目需求进行个性化设置，并且可以通过插件系统进行扩展。</p>\n<p>总的来说，Tailwind CSS 是一个强大的 CSS 框架，它通过提供原子级的类和实用工具，使得开发者可以更轻松、高效地构建自定义的用户界面。它的灵活性和可定制化的特点使其在现代 Web 开发中广受欢迎。</p>\n<p><em>个人使用体验</em>：<br>\n优点：</p>\n<ul>\n<li>节省时间，提升了开发速度</li>\n<li>丰富的预制样式，可以提供样式设计的思路<br>\n缺点：</li>\n<li>代码会比较混乱，一个元素的 class 可能会定义的特别长</li>\n<li>后期不好维护，每个元素都自定义了，后面要修改就比较麻烦 （当然也可以封装）</li>\n<li>可能与其他组件样式冲突</li>\n<li>导致元素的基础样式丢失，比如 h1 h2 等，不过可以使用 prose 插件解决 （具体见：<a href=\"https://fanlu.top/2023/06/12/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%A8%A1%E6%9D%BF%E5%B7%A5%E5%85%B7%E5%BC%80%E5%8F%91-01/%EF%BC%89\">https://fanlu.top/2023/06/12 / 微信公众号模板工具开发 - 01/）</a></li>\n</ul>\n<p>结论：小项目建议使用，大项目不建议</p>\n<h2 id=\"daisyui介绍\"><a class=\"markdownIt-Anchor\" href=\"#daisyui介绍\">#</a> daisyUI 介绍</h2>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kYWlzeXVpLmNvbS9kb2NzL2luc3RhbGwv\">https://daisyui.com/docs/install/</span></p>\n</blockquote>\n<p>这是一个基于 tailwindcss 的组件库，现在 tailwindcss 也有自己的组件库（<span class=\"exturl\" data-url=\"aHR0cHM6Ly90YWlsd2luZHVpLmNvbS9jb21wb25lbnRzJUVGJUJDJTg5JUVGJUJDJThDJUU0JUI4JThEJUU4JUJGJTg3JUU2JTk4JUFGJUU2JTk0JUI2JUU4JUI0JUI5JUU3JTlBJTg0JUUzJTgwJTgy\">https://tailwindui.com/components），不过是收费的。</span></p>\n<p>daisyui 是一个简单的组件库，这里的简单是指它的组件真的很简单，只有预设的样式，没有提供任何原生以外的组件功能。<br>\n想到用这个，主要是因为 element 的原生样式太不能满足需求了，修改也比较麻烦（其实现在看还好）。</p>\n<h2 id=\"简单使用\"><a class=\"markdownIt-Anchor\" href=\"#简单使用\">#</a> 简单使用</h2>\n<ol>\n<li>安装 daisyUI:</li>\n</ol>\n<pre><code class=\"language-undefined\">npm i -D daisyui\n</code></pre>\n<ol start=\"2\">\n<li>然后，在你的 <code>tailwind.config.js</code>  文件里追加 daisyUI 的设置:</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token comment\">//...</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"daisyui\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在组件中这样使用</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn btn-success btn-sm py-0 text-sm leading-3<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>copy<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>复制<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"与elementui的比较\"><a class=\"markdownIt-Anchor\" href=\"#与elementui的比较\">#</a> 与 elementui 的比较</h2>\n<h3 id=\"优势\"><a class=\"markdownIt-Anchor\" href=\"#优势\">#</a> 优势：</h3>\n<ul>\n<li>样式美观，自定义很方便</li>\n<li>功能好修改，更接近原生<br>\n劣势：</li>\n<li>功能不够丰富，大部分功能需要自己单独写</li>\n<li>组件目前还不如 element 丰富</li>\n</ul>\n<h2 id=\"体验总结\"><a class=\"markdownIt-Anchor\" href=\"#体验总结\">#</a> 体验总结</h2>\n<p>建议作为兴趣使用，如果想要快速出活，还是用其他的组件库比较好。</p>\n",
            "tags": [
                "前端 UI"
            ]
        },
        {
            "id": "https://fanlu.top/2023/06/19/Hexo%E5%8D%9A%E5%AE%A2%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/",
            "url": "https://fanlu.top/2023/06/19/Hexo%E5%8D%9A%E5%AE%A2%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/",
            "title": "Hexo博客自动部署",
            "date_published": "2023-06-19T13:56:14.000Z",
            "content_html": "<h2 id=\"简单介绍\"><a class=\"markdownIt-Anchor\" href=\"#简单介绍\">#</a> 简单介绍</h2>\n<p>Hexo 博客是一个非常好用的静态博客，之前也部署过一阵，后来换了 halo，但是遇到了服务器崩溃，丢了一些数据，现在又换回了<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3Mv\"> Hexo</span>.</p>\n<h2 id=\"hexo的部署\"><a class=\"markdownIt-Anchor\" href=\"#hexo的部署\">#</a> hexo 的部署</h2>\n<h3 id=\"github-pages\"><a class=\"markdownIt-Anchor\" href=\"#github-pages\">#</a> github pages</h3>\n<p>github 提供了免费的静态网页托管服务，可以将 github repo 作为静态网站的部署源码。<br>\n同时将 repo 名设置为 yourname.github.io 就可以通过这个域名访问到自己的静态网站。</p>\n<h3 id=\"以前\"><a class=\"markdownIt-Anchor\" href=\"#以前\">#</a> 以前</h3>\n<p>之前使用 hexo 的时候，只能在本地通过 <code>hexo g</code>  命令生成静态资源，然后将静态资源提交到 yourname.github.io 这个 repo 中来完成部署。</p>\n<h3 id=\"现在\"><a class=\"markdownIt-Anchor\" href=\"#现在\">#</a> 现在</h3>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3MvZ2l0aHViLXBhZ2Vz\">https://hexo.io/zh-cn/docs/github-pages</span></p>\n</blockquote>\n<p>得益于 github action 功能的强大，hexo 提供了 pages.yml，有了这个 action 工作流，就可以将整个博客 hexo 项目源代码上传到项目中，避免了源码和生成的静态网站需要分开放的麻烦。</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Pages  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token punctuation\">-</span> main <span class=\"token comment\"># default branch  </span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token key atrule\">pages</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token key atrule\">permissions</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token key atrule\">contents</span><span class=\"token punctuation\">:</span> write  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v2  </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Use Node.js 16.x  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v2  </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>          <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"16\"</span>  </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Cache NPM dependencies  </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/cache@v2  </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>          <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> node_modules  </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>          <span class=\"token key atrule\">key</span><span class=\"token punctuation\">:</span> $&lt;<span class=\"token tag\">!--swig</span>￼0<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">-</span>npm<span class=\"token punctuation\">-</span>cache  </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>          <span class=\"token key atrule\">restore-keys</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">  </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            $-npm-cache  </span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Install Dependencies  </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm install  </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build  </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run build  </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy  </pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> peaceiris/actions<span class=\"token punctuation\">-</span>gh<span class=\"token punctuation\">-</span>pages@v3  </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>          <span class=\"token key atrule\">github_token</span><span class=\"token punctuation\">:</span> $&lt;<span class=\"token tag\">!--swig</span>￼2<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span><span class=\"token scalar string\">  </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>          publish_dir: ./public</span></pre></td></tr></table></figure><p>首先，配置文件中定义了一个工作流（workflow）名为 &quot;Pages&quot;。这个工作流将在推送（push）事件发生时触发执行，但仅限于 &quot;main&quot; 分支。</p>\n<p>工作流中包含一个作业（job）名为 &quot;pages&quot;，它将在最新的 Ubuntu 操作系统上运行。权限设置为 <code>contents: write</code>  表示此作业需要写入文件的权限。</p>\n<p>该作业由多个步骤（steps）组成：</p>\n<ol>\n<li>\n<p><code>actions/checkout@v2</code> ：使用这个步骤来检出代码库的最新版本到工作目录中，以便后续步骤可以访问代码。</p>\n</li>\n<li>\n<p><code>actions/setup-node@v2</code> ：这个步骤用于设置 Node.js 的环境，指定了要使用的 Node.js 版本为 16.x。</p>\n</li>\n<li>\n<p><code>actions/cache@v2</code> ：使用此步骤来缓存 NPM 依赖项，以便在后续构建过程中可以快速恢复。缓存路径为 node_modules，缓存键（key）使用了与操作系统相关的唯一标识符。</p>\n</li>\n<li>\n<p><code>npm install</code> ：这个步骤执行 npm install 命令，安装项目所需的依赖项。</p>\n</li>\n<li>\n<p><code>npm run build</code> ：此步骤运行 npm run build 命令，用于构建静态网站。</p>\n</li>\n<li>\n<p><code>peaceiris/actions-gh-pages@v3</code> ：最后一个步骤使用了一个名为 &quot;peaceiris/actions-gh-pages&quot; 的第三方 GitHub Action。这个 Action 用于将构建后的静态网站发布到 GitHub Pages。它使用了 <code>$&#123;&#123; secrets.GITHUB_TOKEN &#125;&#125;</code>  作为 GitHub API 的访问令牌，并指定了发布目录为 &quot;./public&quot;。</p>\n</li>\n</ol>\n<p>通过这个配置文件，当推送到 &quot;main&quot; 分支时，GitHub Actions 将自动执行这个工作流，检出代码，安装依赖，构建网站，并将构建后的内容发布到 GitHub Pages 上。这样就实现了自动化的静态网站部署过程。</p>\n<p>部署完成后，静态网站就在 gh-pages 这个分支。</p>\n<h2 id=\"在自己的服务器部署hexo\"><a class=\"markdownIt-Anchor\" href=\"#在自己的服务器部署hexo\">#</a> 在自己的服务器部署 hexo</h2>\n<p>因为有自己的云服务器，有自己的域名，都很便宜，闲着也是闲着，也没有做个网站的想法，就用来部署自己的博客好了。</p>\n<ol>\n<li>安装 nginx</li>\n<li>拉取博客代码：<br>\n <code>https://github.com/FanLu1994/fanlu1994.github.io.git</code></li>\n<li>构建博客静态网站<br>\n <code>hexo g</code></li>\n<li>配置 nginx</li>\n</ol>\n<pre><code class=\"language-conf\">server &#123;\n        listen       443 ssl http2;\n        listen       [::]:443 ssl http2;\n        server_name  www.fanlu.top;\n        root         /root/Blog/public;\n\n\t\tlocation / &#123;\n\t\t\troot /home/xiamu/code/Blog/public;\n\t\t&#125;\n&#125;\n</code></pre>\n<p>其中 /home/xiamu/code/Blog/public 是生成后博客的静态代码地址<br>\n 5. 脚本部署</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token shebang important\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">cd</span> ~/code/Blog</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">git</span> reset <span class=\"token parameter variable\">--hard</span> HEAD</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token assign-left variable\">max_retries</span><span class=\"token operator\">=</span><span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token assign-left variable\">retry_count</span><span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token assign-left variable\">success</span><span class=\"token operator\">=</span>false</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 毕竟腾讯云在国内，访问 github 失灵时不灵，所以这里多尝试几次</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$retry_count</span> <span class=\"token parameter variable\">-lt</span> <span class=\"token variable\">$max_retries</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$success</span>\"</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Attempting to pull Git code (Attempt: <span class=\"token variable\"><span class=\"token variable\">$((</span>retry_count<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token variable\">))</span></span>)\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function\">git</span> pull</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$?</span> <span class=\"token parameter variable\">-eq</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token assign-left variable\">success</span><span class=\"token operator\">=</span>true</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Git pull successful\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token assign-left variable\">retry_count</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$((</span>retry_count<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token variable\">))</span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Git pull failed. Retrying...\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$success</span>\"</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Git pull failed after <span class=\"token variable\">$max_retries</span> attempts\"</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>hexo g</pre></td></tr></table></figure><h2 id=\"自动部署\"><a class=\"markdownIt-Anchor\" href=\"#自动部署\">#</a> 自动部署</h2>\n<p>为了实现每次提交后在自己的服务器自动部署更新博客，我使用了开源的定时任务管理工具<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL291cWlhbmcvZ29jcm9u\"> gocron</span>，加上 github actions 来实现</p>\n<h3 id=\"gocron\"><a class=\"markdownIt-Anchor\" href=\"#gocron\">#</a> gocron</h3>\n<p>使用 Go 语言开发的轻量级定时任务集中调度和管理系统，用于替代 Linux-crontab；<br>\n任务的实现基于<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3JvYmZpZy9jcm9u\"> cron 库</span>，这个库的介绍可以看这篇文章<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kYXJqdW4uZ2l0aHViLmlvLzIwMjAvMDYvMjUvZ29kYWlseWxpYi9jcm9uLw==\"># Go 每日一库之 cron</span><br>\n 搭建 gocorn</p>\n<ol>\n<li>首先要有一个 mysql 数据库</li>\n<li>然后使用 docker 启动 gocorn 管理系统<br>\n <code>docker run --name gocron --link mysql:db -p 5920:5920 -d ouqg/gocron</code></li>\n<li>打开 ip:5920 配置数据库</li>\n<li>部署一个 node （gocron 支持多节点任务管理，这里我们用一个本地节点就行了）<br>\n在这里下载节点可执行文件  <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL291cWlhbmcvZ29jcm9uL3JlbGVhc2Vz\">https://github.com/ouqiang/gocron/releases</span><br>\n 放到服务器上执行即可。</li>\n<li>到 ip:5920 节点管理上增加节点。</li>\n</ol>\n<p>现在一个 gocron 任务管理系统就搭建好了。<br>\n然后来新增一个定时部署博客的任务：<br>\n <code>0 0 0 * * * </code> 表示每天零点执行任务；<br>\n<img data-src=\"https://blog-1258032198.cos.ap-shanghai.myqcloud.com/Pasted%20image%2020230619214516.png\" alt=\"https://blog-1258032198.cos.ap-shanghai.myqcloud.com/Pasted%20image%2020230619214516.png\"></p>\n<h3 id=\"github-action\"><a class=\"markdownIt-Anchor\" href=\"#github-action\">#</a> github Action</h3>\n<p>GitHub Actions 是 GitHub 提供的一项持续集成（CI）和持续部署（CD）服务。它允许开发者在 GitHub 上配置和执行自定义的自动化工作流，以响应不同的事件触发器，例如代码推送、问题创建、拉取请求等。</p>\n<ol>\n<li>\n<p>自动化工作流：GitHub Actions 允许用户创建自定义的工作流程，其中包含一个或多个步骤。每个步骤可以执行各种操作，例如检出代码、运行命令、构建和测试应用程序、部署到服务器等。这些工作流可以自动执行，减少了手动执行重复任务的工作量。</p>\n</li>\n<li>\n<p>事件触发器：GitHub Actions 可以响应各种事件触发器，例如推送到代码仓库、创建拉取请求、问题评论等。用户可以配置工作流在特定事件发生时自动触发，以执行相应的操作。这使得工作流可以根据代码库的状态和活动自动进行响应。</p>\n</li>\n<li>\n<p>社区和市场：GitHub Actions 拥有一个丰富的社区生态系统和市场，其中包含许多由 GitHub 和开发者社区提供的预定义工作流程和操作。用户可以利用这些现成的工作流和操作，加快构建和部署流程的设置。</p>\n</li>\n<li>\n<p>无限扩展性：GitHub Actions 提供了强大的扩展性，允许开发者根据自己的需求编写自定义的操作和工作流程。这使得用户可以根据特定的项目要求和工作流程进行灵活配置。</p>\n</li>\n<li>\n<p>集成和协作：GitHub Actions 与 GitHub 平台紧密集成，可以轻松与其他 GitHub 功能（如拉取请求、问题和代码审查）进行协作。用户可以在工作流中使用 GitHub API 和第三方集成，实现更复杂的自动化任务和工作流程。</p>\n</li>\n</ol>\n<h3 id=\"自动化具体实现\"><a class=\"markdownIt-Anchor\" href=\"#自动化具体实现\">#</a> 自动化具体实现</h3>\n<p>由于 gocron 本身并不提供外部调用的 api，可以直接拉起任务，但是可以通过 http 请求，先登录、再启动任务即可。<br>\n登录需要用户名和密码，这些不能放到仓库代码中，好在 github 提供了 secret 可以配置一些密码变量。</p>\n<ol>\n<li>\n<p>repo 中配置 gocron 登录用户名密码</p>\n<ul>\n<li>repo-Settings-Security-Secrets and variables-Actions  添加 action 可以用的密码变量；</li>\n</ul>\n</li>\n<li>\n<p>编写 github Action</p>\n<ul>\n<li>在 项目根路径 /.github/workflows 下面新建一个 deploy.yml</li>\n</ul>\n</li>\n</ol>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy On My server</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token punctuation\">-</span> main  <span class=\"token comment\"># 更改为你要触发的分支</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token key atrule\">login</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest  <span class=\"token comment\"># 可以根据需要更改操作系统</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Checkout code</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v2</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Login and Fetch Token</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>          # 在这里编写登录请求的代码，使用适当的语言和库发送POST请求，获取并提取出令牌</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>          # 将令牌存储在一个变量中</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>          <span class=\"token comment\"># 示例（使用 cURL 发送请求）：</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>          token=$(curl <span class=\"token punctuation\">-</span>X POST <span class=\"token punctuation\">-</span>d 'username= $&lt;<span class=\"token tag\">!--swig</span>￼4<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span><span class=\"token important\">&amp;password=</span> $&lt;<span class=\"token tag\">!--swig</span>￼5<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span>'  http<span class=\"token punctuation\">:</span>//gocron地址<span class=\"token punctuation\">:</span>5920/api/user/login <span class=\"token punctuation\">|</span> jq <span class=\"token punctuation\">-</span>r '.data.token')</pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>          <span class=\"token key atrule\">echo \"Token</span><span class=\"token punctuation\">:</span> $token\"</pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>          <span class=\"token comment\"># 将令牌存储为一个 GitHub Actions 的环境变量，以便在后续的步骤中使用</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>          echo \"TOKEN=$token\" <span class=\"token punctuation\">></span><span class=\"token punctuation\">></span> $GITHUB_ENV</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Start Deploy Task</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>          # 在这里编写发送下一个请求的代码，使用适当的语言和库</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>          # 将上一步获取的令牌放置在请求标头中</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>          <span class=\"token comment\"># 示例（使用 cURL 发送请求）：</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>          token=$TOKEN  <span class=\"token comment\"># 获取上一步中存储的令牌</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>          <span class=\"token key atrule\">curl -H \"Auth-Token</span><span class=\"token punctuation\">:</span> $token\"  http<span class=\"token punctuation\">:</span>//gocron地址<span class=\"token punctuation\">:</span>5920/api/task/run/1</pre></td></tr></table></figure><p>这样就 ok 啦！</p>\n",
            "tags": [
                "CI CD linux"
            ]
        },
        {
            "id": "https://fanlu.top/2023/06/17/Web%E7%95%8C%E9%9D%A2%E8%AE%BE%E8%AE%A1%E5%87%86%E5%88%99%E2%80%94%E7%BF%BB%E8%AF%91/",
            "url": "https://fanlu.top/2023/06/17/Web%E7%95%8C%E9%9D%A2%E8%AE%BE%E8%AE%A1%E5%87%86%E5%88%99%E2%80%94%E7%BF%BB%E8%AF%91/",
            "title": "Web界面设计准则—翻译",
            "date_published": "2023-06-17T15:55:48.000Z",
            "content_html": "<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbnRlcmZhY2VzLnJhdW5vLm1lLw==\">https://interfaces.rauno.me/</span></p>\n<p>这个文档概述了构建良好的用户界面的一些细节，文档在持续更新中。本文借助 chatgpt 以及个人修改进行翻译，有些其实没接触过的，我也不懂啥意思，建议看原文。</p>\n<h2 id=\"交互\"><a class=\"markdownIt-Anchor\" href=\"#交互\">#</a> 交互</h2>\n<ul>\n<li>点击输入框就聚焦输入</li>\n<li>输入框应该被 form 元素包括，enter 件可以提交</li>\n<li>输入框应该包含 type 属性，例如 password、email</li>\n<li>大部分时间，输入框不应该使用拼写检查（spellcheck）以及自动填充（autocomplete）</li>\n<li>需要校验的时候，使用 required 来校验</li>\n<li>输入前缀和后缀装饰，比如图标、应该绝对定位，应该添加内边距，层级放在输入框上方，而不要放在旁边，点击也可以聚焦到输入框</li>\n<li>toggle 组件必须立即生效，不需要二次确认</li>\n<li>按钮应该在提交后失效，避免重复提交  （或者 loading）</li>\n<li>交互的组件应该设置 user-select 为 none</li>\n<li>装饰元素应该禁用指针事件，避免干扰</li>\n<li>垂直或者水平列表中的可交互元素之间不应存在无效区域，同时应该增加元素内边距增大可点击区域</li>\n</ul>\n<h2 id=\"排版\"><a class=\"markdownIt-Anchor\" href=\"#排版\">#</a> 排版</h2>\n<ul>\n<li>\n<ul>\n<li>字体应该应用  <code>-webkit-font-smoothing: antialiased</code>  以提高可读性</li>\n</ul>\n</li>\n<li>\n<p>字体应该应用  <code>text-rendering: optimizeLegibility</code>  以提高可读性</p>\n</li>\n<li>\n<p>字体应该根据内容、字母表或相关语言进行子集化</p>\n</li>\n<li>\n<p>在鼠标悬停或选中状态下不应改变字体粗细，以避免布局变化</p>\n</li>\n<li>\n<p>不应使用低于 400 的字体粗细</p>\n</li>\n<li>\n<p>中等大小的标题通常在 500-600 的字体粗细之间效果最好</p>\n</li>\n<li>\n<p>通过使用 CSS 的  <code>clamp()</code>  函数动态调整数值，例如  <code>clamp(48px, 5vw, 72px)</code> ，可应用于标题的字体大小<br>\n <code>clamp()</code>  CSS 函数将中间值限制在指定的最小值和最大值范围内。该函数接受三个参数：最小值、首选值和最大允许值。<br>\n换句话说， <code>clamp()</code>  函数确保结果值落在指定的范围内。如果首选值在最小值和最大值之间，则直接返回首选值。如果首选值小于最小值，则返回最小值。同样地，如果首选值大于最大值，则返回最大值。<br>\n以下是使用 <code>clamp()</code>  函数的语法：<br>\n <code>clamp(最小值, 首选值, 最大值)</code> <br>\n 例如， <code>clamp(10px, 5vw, 20px)</code>  将返回至少为 10 像素，但不超过 20 像素的值。如果首选值 <code>5vw</code>  在指定的范围内，将使用它作为结果值。<br>\n这个函数在创建响应式设计时非常有用，其中某个值应根据视口大小进行缩放，但仍有定义的限制。</p>\n</li>\n<li>\n<p>在可用时，应使用  <code>font-variant-numeric: tabular-nums</code>  应用表格数字，特别是在表格或不希望出现布局变化的情况下，例如计时器中</p>\n</li>\n<li>\n<p>使用  <code>-webkit-text-size-adjust: 100%</code>  可防止在 iOS 的横向模式下出现意外的文本调整大小</p>\n</li>\n</ul>\n<h2 id=\"motion动画\"><a class=\"markdownIt-Anchor\" href=\"#motion动画\">#</a> Motion (动画)</h2>\n<ul>\n<li>切换主题不应触发元素 transition 或者动画</li>\n<li>动画不应超过 200ms，否则会影响交互速度</li>\n<li>动画值应该和触发器大小成比例：\n<ul>\n<li>缩放动画不应从 0 到 1，而是从 0.8 开始渐变透明度或者缩放度</li>\n<li>按钮激活动画不应从 1 到 0.8，而是到 0.96 0.9 等等</li>\n</ul>\n</li>\n<li>频率较高的动作避免不必要的动画\n<ul>\n<li>例如右键菜单</li>\n<li>删除或者添加列表项</li>\n<li>一般的按钮</li>\n</ul>\n</li>\n<li>看不见的元素动画应该停止，以降低 cpu 和 gpu 的能耗</li>\n<li>使用 scroll-behavior:smooth 来作为业内导航的参数</li>\n</ul>\n<h2 id=\"触摸-移动设备\"><a class=\"markdownIt-Anchor\" href=\"#触摸-移动设备\">#</a> 触摸 （移动设备）</h2>\n<ul>\n<li>触摸时不应显示悬停状态，使用 <code>@media (hover: hover)</code>  来实现。</li>\n<li>输入框字体不小于 16px，防止 ios 焦点状态下缩放</li>\n<li>输入框不应自动获取焦点</li>\n<li>video，应使用  <code>muted</code>  和  <code>playsinline</code>  属性以在 iOS 上自动播放</li>\n<li>对于自定义组件实现了平移和缩放手势的情况，应禁用  <code>touch-action</code>  属性，以防止与缩放和滚动等本机行为的干扰</li>\n<li>使用  <code>-webkit-tap-highlight-color: rgba(0,0,0,0)</code>  可以禁用默认的 iOS 点击高亮效果，但始终应替代为适当的替代方案</li>\n</ul>\n<h2 id=\"优化\"><a class=\"markdownIt-Anchor\" href=\"#优化\">#</a> 优化</h2>\n<ul>\n<li>使用较大的  <code>blur()</code>  值来设置  <code>filter</code>  和  <code>backdrop-filter</code>  可能会导致性能下降</li>\n<li>矩形缩放和模糊处理会导致色带效应（banding），使用径向渐变比较好</li>\n<li>谨慎使用  <code>transform: translateZ(0)</code>  来启用 GPU 渲染，以提高性能，但仅适用于性能较差的动画</li>\n<li>对于性能较差的滚动动画，在动画的持续时间内切换  <code>will-change</code>  属性</li>\n<li>播放过多的视频可能会导致 iOS 设备性能下降，建议对屏幕外的视频进行暂停甚至卸载</li>\n<li>使用  <code>refs</code>  绕过 React 的渲染生命周期，直接将实时值提交给 DOM</li>\n<li>检测和适应用户设备的硬件和网络能力</li>\n</ul>\n<h2 id=\"友好设计\"><a class=\"markdownIt-Anchor\" href=\"#友好设计\">#</a> 友好设计</h2>\n<ul>\n<li>禁用的按钮不应有提示信息</li>\n<li>焦点环使用 box-shadow 而不是 outline</li>\n<li>列表可聚焦元素支持上下键切换</li>\n<li>列表可聚焦元素支持删除键删除</li>\n<li>下拉菜单触发应该是 onMouseDown 而不是 onClick 事件</li>\n<li>使用带有样式标签的 SVG 网站图标，根据 prefers-color-scheme 遵循系统主题</li>\n<li>仅包含图标的交互元素应该定义一个明确的  <code>aria-label</code>   （这样会支持屏幕阅读工具阅读）</li>\n<li>悬浮触发的 tip 不应包含交互内容</li>\n<li>图片使用 img 渲染，方便复制</li>\n<li>插图应该有 aria-label</li>\n<li>渐变文本在  <code>::selection</code>  状态下应取消渐变效果</li>\n<li>当使用嵌套菜单时，使用 &quot;prediction cone” 以防止指针在移动过程中意外关闭菜单</li>\n</ul>\n<h2 id=\"设计\"><a class=\"markdownIt-Anchor\" href=\"#设计\">#</a> 设计</h2>\n<ul>\n<li>提交后数据更新；但服务器报错后进行回滚和提示</li>\n<li>身份验证应该在服务器完成，避免 url 变化</li>\n<li>使用  <code>::selection</code>  样式化文档选中状态</li>\n<li>显示反馈：\n<ul>\n<li>复制成功时，显示一个内联的标记，而不是一个通知</li>\n<li>输入错误时高亮显示相关的输入框</li>\n</ul>\n</li>\n<li>空状态应提示创建新项，并可选择使用模板</li>\n</ul>\n",
            "tags": [
                "前端 产品经理"
            ]
        },
        {
            "id": "https://fanlu.top/2023/06/17/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%A8%A1%E6%9D%BF%E5%B7%A5%E5%85%B7%E5%BC%80%E5%8F%91-02%EF%BC%88end%EF%BC%89/",
            "url": "https://fanlu.top/2023/06/17/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%A8%A1%E6%9D%BF%E5%B7%A5%E5%85%B7%E5%BC%80%E5%8F%91-02%EF%BC%88end%EF%BC%89/",
            "title": "微信公众号模板工具开发-02（end）",
            "date_published": "2023-06-17T13:41:45.000Z",
            "content_html": "<h2 id=\"代码高亮\"><a class=\"markdownIt-Anchor\" href=\"#代码高亮\">#</a> 代码高亮</h2>\n<p>使用 prism.js 来实现代码高亮。<br>\n每次渲染完 md 文档过后，调用 Prism.hightAll ()</p>\n<h4 id=\"安装\"><a class=\"markdownIt-Anchor\" href=\"#安装\">#</a> 安装</h4>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> prismjs@1.29.0 @types/prismjs@1.26.0</pre></td></tr></table></figure><h4 id=\"配置\"><a class=\"markdownIt-Anchor\" href=\"#配置\">#</a> 配置</h4>\n<figure class=\"highlight ts\"><figcaption data-lang=\"TypeScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// nuxt.config.ts</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>vite<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">prismjs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token comment\">// 添加支持的高亮的语言，如果需要支持全部的话改成这样:  languages: \"all\"  </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      languages<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'cpp'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token string\">'javascript'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token string\">'bash'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token string\">'dart'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token string\">'sql'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token string\">'css'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token string\">'html'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token string\">'java'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token string\">'json'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token string\">'sass'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token string\">'scss'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token string\">'log'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token string\">'swift'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token string\">'md'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token string\">'nginx'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token string\">'yaml'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token string\">'xml'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token string\">'shell'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token string\">'ts'</span>  </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token comment\">// 配置 prism 插件 toolbar 是后面两个插件依赖的插件.  </span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token comment\">//show-language: 显示语言名。  </span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token comment\">//copy-to-clipboard: 添加复制代码功能。  </span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'line-numbers'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token comment\">// 主题名称，支持的主题可以在 node_moduels 中安装此库的目录下寻找。  </span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      theme<span class=\"token operator\">:</span> <span class=\"token string\">\"okaidia\"</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      css<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>  </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><h4 id=\"使用\"><a class=\"markdownIt-Anchor\" href=\"#使用\">#</a> 使用</h4>\n<figure class=\"highlight ts\"><figcaption data-lang=\"TypeScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> Prism <span class=\"token keyword\">from</span> <span class=\"token string\">'prismjs'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">...</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 每次渲染完之后调用这个函数，便会自动构建代码样式</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Prism<span class=\"token punctuation\">.</span><span class=\"token function\">highlightAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">...</span></pre></td></tr></table></figure><h2 id=\"引用归纳\"><a class=\"markdownIt-Anchor\" href=\"#引用归纳\">#</a> 引用归纳</h2>\n<p>将文章中插入的链接，以引用文献的样子放在文章最后。 这个想法来自于阮一峰的周刊。<br>\n前端由于浏览器跨域的限制，是无法根据 url 去获取到网站标题的，（不知道 wasm 是否可以）。所以需要一个后端的简单接口，使用 go 或者 python 都可以，我用的 gin 写了个接口</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">GetWebsiteTitle</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">*</span>gin<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   url <span class=\"token operator\">:=</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">Query</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"url\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token keyword\">if</span> url <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      c<span class=\"token punctuation\">.</span><span class=\"token function\">JSON</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span>StatusBadRequest<span class=\"token punctuation\">,</span> APIResponse<span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>         ErrorCode<span class=\"token punctuation\">:</span>    http<span class=\"token punctuation\">.</span>StatusBadRequest<span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>         ErrorMessage<span class=\"token punctuation\">:</span> <span class=\"token string\">\"URL parameter is missing\"</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>         Result<span class=\"token punctuation\">:</span>       <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token keyword\">return</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token comment\">// 使用 Colly 爬取网页标题  </span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   collector <span class=\"token operator\">:=</span> colly<span class=\"token punctuation\">.</span><span class=\"token function\">NewCollector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   collector<span class=\"token punctuation\">.</span><span class=\"token function\">SetRequestTimeout</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">*</span> time<span class=\"token punctuation\">.</span>Second<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token keyword\">var</span> title <span class=\"token builtin\">string</span>  </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   collector<span class=\"token punctuation\">.</span><span class=\"token function\">OnHTML</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"title\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">*</span>colly<span class=\"token punctuation\">.</span>HTMLElement<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      title <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>Text  </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   err <span class=\"token operator\">:=</span> collector<span class=\"token punctuation\">.</span><span class=\"token function\">Visit</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>   <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      c<span class=\"token punctuation\">.</span><span class=\"token function\">JSON</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span>StatusOK<span class=\"token punctuation\">,</span> APIResponse<span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>         ErrorCode<span class=\"token punctuation\">:</span>    http<span class=\"token punctuation\">.</span>StatusInternalServerError<span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>         ErrorMessage<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Failed to fetch website data\"</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>         Result<span class=\"token punctuation\">:</span>       <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token keyword\">return</span>  </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>   c<span class=\"token punctuation\">.</span><span class=\"token function\">JSON</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span>StatusOK<span class=\"token punctuation\">,</span> APIResponse<span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      ErrorCode<span class=\"token punctuation\">:</span>    http<span class=\"token punctuation\">.</span>StatusOK<span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      ErrorMessage<span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      Result<span class=\"token punctuation\">:</span>       title<span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"36\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>然后在 nuxt 中请求数据方法是 useFetch ，获取所有 url 的标题</p>\n<figure class=\"highlight ts\"><figcaption data-lang=\"TypeScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>useFetch<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> data<span class=\"token punctuation\">,</span> pending<span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">,</span> refresh <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">useFetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://localhost:7777/md/get_website_title\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   query<span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>     url<span class=\"token operator\">:</span>links<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>href  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"问题\"><a class=\"markdownIt-Anchor\" href=\"#问题\">#</a> 问题</h2>\n<ol>\n<li>微信样式问题<br>\n发现显示的内容粘贴到微信之后，还能保持该有的样式，发表出去之后，样式反而丢了，很蛋疼</li>\n<li>引用列表显示的还不是很完美，需要再搞搞</li>\n</ol>\n",
            "tags": [
                "nuxt axiss 前端"
            ]
        },
        {
            "id": "https://fanlu.top/2023/06/12/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%A8%A1%E6%9D%BF%E5%B7%A5%E5%85%B7%E5%BC%80%E5%8F%91-01/",
            "url": "https://fanlu.top/2023/06/12/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%A8%A1%E6%9D%BF%E5%B7%A5%E5%85%B7%E5%BC%80%E5%8F%91-01/",
            "title": "微信公众号模板工具开发-01",
            "date_published": "2023-06-12T15:53:49.000Z",
            "content_html": "<blockquote>\n<p>在 nuxt 项目中实现一个 markdown 文本的渲染工作，可以用于微信公众号粘贴</p>\n</blockquote>\n<p>公众号的排版时比较难搞的一件事，但是可以复制样式。因此很多人会采用在模板网站上调好文章的格式，然后复制粘贴到微信编辑器。<br>\n现在开源的几个我觉得样式比较一般，所以想做一个自己的，支持多主题切换的公众号排版工具。</p>\n<p>正好在自己服务器搭了个 nuxt 服务，就作为一个模块写到里面吧。</p>\n<h2 id=\"markdown转换\"><a class=\"markdownIt-Anchor\" href=\"#markdown转换\">#</a> markdown 转换</h2>\n<p>markdown 原始的文本是无法被渲染的好看的，在浏览器中，使用工具按照规则将 markdown 转换为 html 标签，是更好的渲染方法。</p>\n<ul>\n<li>普通文本 =》p 标签；</li>\n<li>一级标题 =》h2 标签，其他标题同理；</li>\n<li>网址链接 =》a 标签</li>\n<li>代码 =》pre 标签</li>\n<li>无序列表 =》ul&gt;li 标签</li>\n<li>有序列表 =》ol&gt;li 标签</li>\n<li>图片 =》img 标签</li>\n</ul>\n<p>在这个项目中，我选择<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21hcmtlZGpzL21hcmtlZA==\"> marked</span>, 作为 markdown 转换为网页标签的转换器。<br>\n使用很简单方便：</p>\n<ol>\n<li>安装<br>\n npm install -g marked</li>\n<li>使用 (我用的 nuxt3)</li>\n</ol>\n<figure class=\"highlight ts\"><figcaption data-lang=\"TypeScript\"><span>s</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 引入 其中 rawText 是原始的 md 文本，mdText 是转换后的 html 文本</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>marked<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"marked\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>mdText<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token function\">marked</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>rawText<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><pre><code class=\"language-vue\">/*使用v_html绑定转换后的md文本*/\n&lt;div v-html=&quot;mdText&quot; id=&quot;preview&quot; class=&quot;prose markdown&quot; :class=&quot;classList&quot;  \n     :style=&quot;&#123;fontSize:fontSize+'px'&#125;&quot;&gt;&lt;/div&gt;\n</code></pre>\n<h2 id=\"taiwindcss-渲染问题\"><a class=\"markdownIt-Anchor\" href=\"#taiwindcss-渲染问题\">#</a> taiwindcss 渲染问题</h2>\n<p>由于项目中引入了<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudGFpbHdpbmRjc3MuY24vZG9jcy9pbnN0YWxsYXRpb24=\"> tailwindcss</span>，这是一个以类来定义样式的库，使用起来非常方便好用，同时我还用了<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kYWlzeXVpLmNvbS8=\"> daisyui</span>, 这是一个基于 taiwindcss 的样式库，使用体验，放到下一篇文章说吧。<br>\ntailwindcss 中包含对很多基本 html 标签的样式定义，比如 h1、a、等等，都会变成普通的文本格式，这样一来，转换后的 markdown 文本就看起来一点样式就没有了。<br>\n<strong>好在</strong> tailwindcss 的设计者考虑到了这个问题，有些地方或者元素我们不希望 tailwind 的样式来影响，那么可以使用<span class=\"exturl\" data-url=\"aHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy90eXBvZ3JhcGh5LXBsdWdpbg==\"> @tailwindcss/typography</span> 来为指定的元素取消 tailwind 样式。</p>\n<p>使用起来也很简单：</p>\n<ol>\n<li>首先安装 @tailwindcss/typography 库</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-D</span> @tailwindcss/typography</pre></td></tr></table></figure><ol start=\"2\">\n<li>在 tailwind.config.js 中配置</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token literal-property property\">theme</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// ...</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@tailwindcss/typography'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// ...</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>在想要的元素上给定一个 class  prose</li>\n</ol>\n<pre><code class=\"language-vue\">&lt;div v-html=&quot;mdText&quot; id=&quot;preview&quot; class=&quot;prose markdown&quot; :class=&quot;classList&quot;  \n     :style=&quot;&#123;fontSize:fontSize+'px'&#125;&quot;&gt;&lt;/div&gt;\n</code></pre>\n<p>这样就 ok 了，原始的 html 样式就回来了。</p>\n<h2 id=\"渲染样式配置\"><a class=\"markdownIt-Anchor\" href=\"#渲染样式配置\">#</a> 渲染样式配置</h2>\n<p>作为配色障碍选手、设计小白，从零搭建一个好看的 markdown 主题不太现实，所以我参考（抄袭）了<span class=\"exturl\" data-url=\"aHR0cHM6Ly90eXBvcmEuaW8v\"> typora</span> 的一些开源主题。</p>\n<h3 id=\"样式切换\"><a class=\"markdownIt-Anchor\" href=\"#样式切换\">#</a> 样式切换</h3>\n<p>项目中使用 scss 作为 css 预处理语言。根据 typora 找来的主题，首先定义自己的一个类，比如 orangeheart 这个主题，它的原始 css 在这个地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2V2Z28yMDE3L3R5cG9yYS10aGVtZS1vcmFuZ2UtaGVhcnQvYmxvYi9tYXN0ZXIvb3JhbmdlaGVhcnQuY3Nz\">https://github.com/evgo2017/typora-theme-orange-heart/blob/master/orangeheart.css</span></p>\n<p>复制到自己的项目中，并且去掉没有必要的名字或者参数：</p>\n<figure class=\"highlight scss\"><figcaption data-lang=\"Sass (Scss)\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">.orangeheart</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> black<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0 10px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span> 1.6<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token property\">word-spacing</span><span class=\"token punctuation\">:</span> 0px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token property\">letter-spacing</span><span class=\"token punctuation\">:</span> 0px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token property\">word-break</span><span class=\"token punctuation\">:</span> break-word<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token property\">word-wrap</span><span class=\"token punctuation\">:</span> break-word<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> left<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> Optima-Regular<span class=\"token punctuation\">,</span> Optima<span class=\"token punctuation\">,</span> PingFangSC-light<span class=\"token punctuation\">,</span> PingFangTC-light<span class=\"token punctuation\">,</span> <span class=\"token string\">'PingFang SC'</span><span class=\"token punctuation\">,</span> Cambria<span class=\"token punctuation\">,</span> Cochin<span class=\"token punctuation\">,</span> Georgia<span class=\"token punctuation\">,</span> Times<span class=\"token punctuation\">,</span> <span class=\"token string\">'Times New Roman'</span><span class=\"token punctuation\">,</span> serif<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token comment\">/* 段落 */</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre> <span class=\"token selector\">+ p,</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> blockquote p </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token property\">padding-top</span><span class=\"token punctuation\">:</span> .5rem<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token property\">padding-bottom</span><span class=\"token punctuation\">:</span> .5rem<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span> 1.5rem<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> black<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre> <span class=\"token selector\">div[mdtype=toc] </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token selector\">h1 h2 h3 h4 h5 h6 </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 1.2em 0 1em<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> black<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token selector\">h1 </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1.5rem<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  <span class=\"token selector\">h2 </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1.3rem<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token property\">border-bottom</span><span class=\"token punctuation\">:</span> 2px solid <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>239<span class=\"token punctuation\">,</span> 112<span class=\"token punctuation\">,</span> 96<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  <span class=\"token selector\">h2 span </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> inline-block<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>239<span class=\"token punctuation\">,</span> 112<span class=\"token punctuation\">,</span> 96<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #ffffff<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 3px 10px 1px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token property\">border-top-right-radius</span><span class=\"token punctuation\">:</span> 3px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token property\">border-top-left-radius</span><span class=\"token punctuation\">:</span> 3px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token property\">margin-right</span><span class=\"token punctuation\">:</span> 3px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>  <span class=\"token selector\">h2:after </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> inline-block<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token property\">vertical-align</span><span class=\"token punctuation\">:</span> bottom<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token property\">border-bottom</span><span class=\"token punctuation\">:</span> 1.25rem solid #efebe9<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token property\">border-right</span><span class=\"token punctuation\">:</span> 1.25rem solid transparent<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>  <span class=\"token selector\">h3 </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1.3rem<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>  <span class=\"token selector\">h4 </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1.2rem<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>  <span class=\"token selector\">h5 </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1.1rem<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>  <span class=\"token selector\">h6 </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>  <span class=\"token comment\">/* 列表 */</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>  <span class=\"token selector\">ul,</pre></td></tr><tr><td data-num=\"78\"></td><td><pre>  ol </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> 8px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> 8px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token property\">padding-left</span><span class=\"token punctuation\">:</span> 25px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> black<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>  <span class=\"token selector\">ul </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token property\">list-style-type</span><span class=\"token punctuation\">:</span> disc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>  <span class=\"token selector\">ul ul </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token property\">list-style-type</span><span class=\"token punctuation\">:</span> square<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>  <span class=\"token selector\">ol </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token property\">list-style-type</span><span class=\"token punctuation\">:</span> decimal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>  <span class=\"token selector\">li section </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> 5px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> 5px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span> 1.7rem<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> left<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>1<span class=\"token punctuation\">,</span>1<span class=\"token punctuation\">,</span>1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 只要是纯黑色微信编辑器就会把 color 这个属性吞掉。。。*/</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 500<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>  <span class=\"token comment\">/* 引用 */</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>  <span class=\"token selector\">blockquote </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> .9em<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    <span class=\"token property\">border-left</span><span class=\"token punctuation\">:</span> 3px solid <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>239<span class=\"token punctuation\">,</span> 112<span class=\"token punctuation\">,</span> 96<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #6a737d<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 10px 10px 10px 20px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>    <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #fff9f9<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>  <span class=\"token comment\">/* 链接 */</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>  <span class=\"token selector\">a </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>    <span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    <span class=\"token property\">word-wrap</span><span class=\"token punctuation\">:</span> break-word<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>    <span class=\"token property\">border-bottom</span><span class=\"token punctuation\">:</span> 1px solid #1e6bb8<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>239<span class=\"token punctuation\">,</span> 112<span class=\"token punctuation\">,</span> 96<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>    <span class=\"token property\">border-bottom</span><span class=\"token punctuation\">:</span> 1px solid <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>239<span class=\"token punctuation\">,</span> 112<span class=\"token punctuation\">,</span> 96<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>  <span class=\"token comment\">/* 行内代码 */</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>  <span class=\"token selector\">p code,</pre></td></tr><tr><td data-num=\"127\"></td><td><pre>  li code </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> .9rem<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>    <span class=\"token property\">word-wrap</span><span class=\"token punctuation\">:</span> break-word<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 2px 4px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>    <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 4px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>    <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0 2px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span>  <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>239<span class=\"token punctuation\">,</span> 112<span class=\"token punctuation\">,</span> 96<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>27<span class=\"token punctuation\">,</span>31<span class=\"token punctuation\">,</span>35<span class=\"token punctuation\">,</span>.05<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> Operator Mono<span class=\"token punctuation\">,</span> Consolas<span class=\"token punctuation\">,</span> Monaco<span class=\"token punctuation\">,</span> Menlo<span class=\"token punctuation\">,</span> monospace<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>    <span class=\"token property\">word-break</span><span class=\"token punctuation\">:</span> break-all<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>  <span class=\"token comment\">/* 图片 */</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>  <span class=\"token selector\">img </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>    <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0 auto<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>    <span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>  <span class=\"token selector\">span img </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> inline-block<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>    <span class=\"token property\">border-right</span><span class=\"token punctuation\">:</span> 0px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>    <span class=\"token property\">border-left</span><span class=\"token punctuation\">:</span> 0px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>  <span class=\"token comment\">/* 表格 */</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>  <span class=\"token selector\">table </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> table<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>    <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> left<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>  <span class=\"token selector\">tbody </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>  <span class=\"token selector\">table tr </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>    <span class=\"token property\">border-top</span><span class=\"token punctuation\">:</span> 1px solid #ccc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> white<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>  table <span class=\"token property\">tr</span><span class=\"token punctuation\">:</span><span class=\"token function\">nth-child</span><span class=\"token punctuation\">(</span>2n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #F8F8F8<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>  <span class=\"token selector\">table tr th,</pre></td></tr><tr><td data-num=\"169\"></td><td><pre>  table tr td </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid #ccc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 5px 10px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>    <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> left<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>  <span class=\"token selector\">table tr th </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #f0f0f0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>  <span class=\"token comment\">/* 行内代码 */</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>  <span class=\"token selector\">span code, li code </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>239<span class=\"token punctuation\">,</span> 112<span class=\"token punctuation\">,</span> 96<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>  <span class=\"token comment\">/* 脚注上标 */</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>  <span class=\"token selector\">.md-footnote </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>239<span class=\"token punctuation\">,</span> 112<span class=\"token punctuation\">,</span> 96<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>  <span class=\"token selector\">.md-footnote > .md-text:before </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>    <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'['</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>  <span class=\"token selector\">.md-footnote > .md-text:after </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre>    <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">']'</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>  <span class=\"token comment\">/* 脚注 */</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>  <span class=\"token selector\">.md-def-name </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre>    <span class=\"token property\">padding-right</span><span class=\"token punctuation\">:</span> 1.8ch<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>  <span class=\"token selector\">.md-def-name:before </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre>    <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'['</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #000<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>  <span class=\"token selector\">.md-def-name:after </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #000<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre></pre></td></tr><tr><td data-num=\"209\"></td><td><pre>  <span class=\"token comment\">/* 代码块主题 */</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre>  <span class=\"token selector\">.md-fences:before </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre>    <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre>    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre>    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre>    <span class=\"token property\">background-size</span><span class=\"token punctuation\">:</span> 40px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"215\"></td><td><pre>    <span class=\"token property\">background-repeat</span><span class=\"token punctuation\">:</span> no-repeat<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"216\"></td><td><pre>    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #282c34<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"217\"></td><td><pre>    <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> -7px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"218\"></td><td><pre>    <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 5px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"219\"></td><td><pre>    <span class=\"token property\">background-position</span><span class=\"token punctuation\">:</span> 10px 10px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"220\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"221\"></td><td><pre></pre></td></tr><tr><td data-num=\"222\"></td><td><pre>  <span class=\"token comment\">/* CodeMirror 相关内容 */</span></pre></td></tr><tr><td data-num=\"223\"></td><td><pre>  <span class=\"token selector\">.CodeMirror-wrap .CodeMirror-scroll </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"224\"></td><td><pre>    <span class=\"token property\">overflow-x</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"225\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"226\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner.CodeMirror </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"227\"></td><td><pre>    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> .5rem<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"228\"></td><td><pre>    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #292d3e<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"229\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #a6accd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"230\"></td><td><pre>    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> Consolas<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"231\"></td><td><pre>    <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 4px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"232\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"233\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-keyword </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"234\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #c792ea <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"235\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"236\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-operator </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"237\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #89ddff <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"238\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"239\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-variable-2 </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"240\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #eeffff <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"241\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"242\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-variable-3,</pre></td></tr><tr><td data-num=\"243\"></td><td><pre>  .cm-s-inner .cm-type </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"244\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #f07178 <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"245\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"246\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-builtin </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"247\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #ffcb6b <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"248\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"249\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-atom </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"250\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #f78c6c <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"251\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"252\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-number </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"253\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #ff5370 <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"254\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"255\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-def </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"256\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #82aaff <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"257\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"258\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-string </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"259\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #c3e88d <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"260\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"261\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-string-2 </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"262\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #f07178 <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"263\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"264\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-comment </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"265\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #676e95 <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"266\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"267\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-variable </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"268\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #f07178 <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"269\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"270\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-tag </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"271\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #ff5370 <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"272\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"273\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-meta </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"274\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #ffcb6b <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"275\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"276\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-attribute </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"277\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #c792ea <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"278\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"279\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-property </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"280\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #c792ea <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"281\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"282\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-qualifier </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"283\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #decb6b <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"284\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"285\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-variable-3,</pre></td></tr><tr><td data-num=\"286\"></td><td><pre>  .cm-s-inner .cm-type </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"287\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #decb6b <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"288\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"289\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-error </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"290\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>255<span class=\"token punctuation\">,</span> 255<span class=\"token punctuation\">,</span> 255<span class=\"token punctuation\">,</span> 1<span class=\"token punctuation\">)</span> <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"291\"></td><td><pre>    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #ff5370 <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"292\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"293\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .CodeMirror-matchingbracket </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"294\"></td><td><pre>    <span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> underline<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"295\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> white <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"296\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"297\"></td><td><pre>  <span class=\"token selector\">.CodeMirror div.CodeMirror-cursor </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"298\"></td><td><pre>    <span class=\"token property\">border-left</span><span class=\"token punctuation\">:</span> 1px solid <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>239<span class=\"token punctuation\">,</span> 112<span class=\"token punctuation\">,</span> 96<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"299\"></td><td><pre>    <span class=\"token property\">z-index</span><span class=\"token punctuation\">:</span> 3<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"300\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"301\"></td><td><pre></pre></td></tr><tr><td data-num=\"302\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner div.CodeMirror-selected </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"303\"></td><td><pre>    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>167<span class=\"token punctuation\">,</span> 178<span class=\"token punctuation\">,</span> 189<span class=\"token punctuation\">,</span> 0.2<span class=\"token punctuation\">)</span> <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"304\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"305\"></td><td><pre></pre></td></tr><tr><td data-num=\"306\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner.CodeMirror-focused div.CodeMirror-selected </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"307\"></td><td><pre>    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>167<span class=\"token punctuation\">,</span> 178<span class=\"token punctuation\">,</span> 189<span class=\"token punctuation\">,</span> 0.2<span class=\"token punctuation\">)</span> <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"308\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"309\"></td><td><pre></pre></td></tr><tr><td data-num=\"310\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .CodeMirror-selected,</pre></td></tr><tr><td data-num=\"311\"></td><td><pre>  .cm-s-inner .CodeMirror-selectedtext </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"312\"></td><td><pre>    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>167<span class=\"token punctuation\">,</span> 178<span class=\"token punctuation\">,</span> 189<span class=\"token punctuation\">,</span> 0.0<span class=\"token punctuation\">)</span> <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"313\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"314\"></td><td><pre></pre></td></tr><tr><td data-num=\"315\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .CodeMirror-line::-moz-selection,</pre></td></tr><tr><td data-num=\"316\"></td><td><pre>  .cm-s-inner .CodeMirror-line > span::-moz-selection,</pre></td></tr><tr><td data-num=\"317\"></td><td><pre>  .cm-s-inner .CodeMirror-line > span > span::-moz-selection </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"318\"></td><td><pre>    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>167<span class=\"token punctuation\">,</span> 178<span class=\"token punctuation\">,</span> 189<span class=\"token punctuation\">,</span> 0.2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"319\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"320\"></td><td><pre></pre></td></tr><tr><td data-num=\"321\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .CodeMirror-line::selection,</pre></td></tr><tr><td data-num=\"322\"></td><td><pre>  .cm-s-inner .CodeMirror-line > span::selection,</pre></td></tr><tr><td data-num=\"323\"></td><td><pre>  .cm-s-inner .CodeMirror-line > span > span::selection </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"324\"></td><td><pre>    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>167<span class=\"token punctuation\">,</span> 178<span class=\"token punctuation\">,</span> 189<span class=\"token punctuation\">,</span> 0.2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"325\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"326\"></td><td><pre></pre></td></tr><tr><td data-num=\"327\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这里定义了类名为 orangeheart，然后再 nuxt （nuxt.config.ts）中需要引入定义的样式；</p>\n<figure class=\"highlight ts\"><figcaption data-lang=\"TypeScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">defineNuxtConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token operator\">...</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     css<span class=\"token operator\">:</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token string\">'@/assets/css/main.css'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token string\">'@/assets/css/font.css'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token string\">'@/assets/css/wechat_theme/index.scss'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token operator\">...</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>然后回到 md 的容器，添加 class： orangeheart  一切 ok 啦，样式出现啦，当然了，觉得不好看，可以自己再调整；</p>\n<p>接下来，再从 typora <code>偷</code> 几个主题，分别给不同的 class 名，将 class 动态绑定到元素上，这里就不再罗嗦了，相信用过 vue 的都知道咋搞了。</p>\n<h3 id=\"字体切换\"><a class=\"markdownIt-Anchor\" href=\"#字体切换\">#</a> 字体切换</h3>\n<p>从<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuMTAwZm9udC5jb20v\"> 100font</span> 找了几个免费的字体库，将里面的 ttf 文件放到我们的项目中，定义字体样式类：</p>\n<figure class=\"highlight scss\"><figcaption data-lang=\"Sass (Scss)\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">.deyihei</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'deyihei'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> normal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token url\">url</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../../font/deyihei.ttf'</span><span class=\"token punctuation\">)</span> <span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'truetype'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> deyihei <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token selector\">.sanjipomo</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'sanjipomo'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> normal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token url\">url</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../../font/三极泼墨体.ttf'</span><span class=\"token punctuation\">)</span> <span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'truetype'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> sanjipomo <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token selector\">.zibangwankuti</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'zibangwankuti'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> normal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token url\">url</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../../font/字帮玩酷体.ttf'</span><span class=\"token punctuation\">)</span> <span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'truetype'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> zibangwankuti <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><code>注意</code> ：</p>\n<ul>\n<li>这里使用了！import 提高字体的优先级，否则可能因为已有的 font-family 而不生效。</li>\n</ul>\n<p>定义了三个字体类之后，还是可以动态绑定的方式给到 md 容器，这里也省略吧，别忘了默认字体。</p>\n<h3 id=\"字体大小切换\"><a class=\"markdownIt-Anchor\" href=\"#字体大小切换\">#</a> 字体大小切换</h3>\n<p>这个就更简单了，只是一个动态绑定的 style，就不赘述了。</p>\n<p>未完待续…</p>\n",
            "tags": [
                "nuxt axiss 前端"
            ]
        },
        {
            "id": "https://fanlu.top/2023/06/11/%E9%B8%A1%E6%AF%9B%E8%92%9C%E7%9A%AE%E5%91%A8%E5%88%8A-04/",
            "url": "https://fanlu.top/2023/06/11/%E9%B8%A1%E6%AF%9B%E8%92%9C%E7%9A%AE%E5%91%A8%E5%88%8A-04/",
            "title": "鸡毛蒜皮周刊-04",
            "date_published": "2023-06-11T15:05:21.000Z",
            "content_html": "<h2 id=\"wasm初体验\"><a class=\"markdownIt-Anchor\" href=\"#wasm初体验\">#</a> WASM 初体验</h2>\n<p>最近看到了很多介绍 webassembly 的文章，包括字节的公众号连续分享了两篇文章：</p>\n<ol>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC82MTczNjgwODY=\"># WebAssembly 使用场景和未来发展趋势</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC82MjA3MTY3NTQ=\"> WebAssembly 常用开发语言和工具链</span><br>\n简单来说，webassembly 可以将你用 c、go、rust 等语言写的程序打包，交给 js 在浏览器中调用。我觉得是非常有用的一项技术，一切能用浏览器实现的技术应该早晚会交给浏览器。<br>\n出于学习的想法以及对 go 和前端的开发经验，找了一份小教程，体验了一下 go-wasm:<br>\n 教程：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9nZWVrdHV0dS5jb20vcG9zdC9xdWljay1nby13YXNtLmh0bWw=\"># Go WebAssembly (Wasm) 简明教程</span><br>\n还是挺有趣的，把 go 的编译目标系统和架构分别改成 js 和 wasm，然后前端还需要引入 wasm_exec.js。<br>\n这里有个小坑，就是用最新的 golang 官方库里面最新的 wasm_exec.js（<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dvbGFuZy9nby90cmVlL21hc3Rlci9taXNjL3dhc20lRUYlQkMlODklRTUlOEYlQUYlRTglODMlQkQlRTQlQkMlOUElRTUlODclQkElRTclOEUlQjAlRTYlOEElQTUlRTklOTQlOTklRUYlQkMlOEMlRTglQTYlODElRTclOTQlQThnb29nbGUlRTclOUElODQlRTglQkYlOTklRTQlQjglQUElRTclODklODglRTYlOUMlQUMlRUYlQkMlODhodHRwczovL2dvLmdvb2dsZXNvdXJjZS5jb20vZ28uZ2l0LysvcmVmcy90YWdzL2dvMS4xN3JjMS9taXNjL3dhc20vd2FzbV9leGVjLmpzP2F1dG9kaXZlPTAlMkYlMkYlRUYlQkMlODk=\">https://github.com/golang/go/tree/master/misc/wasm）可能会出现报错，要用 google 的这个版本（https://go.googlesource.com/go.git/+/refs/tags/go1.17rc1/misc/wasm/wasm_exec.js?autodive=0%2F%2F）</span></li>\n</ol>\n<h2 id=\"wsgi和asgi\"><a class=\"markdownIt-Anchor\" href=\"#wsgi和asgi\">#</a> wsgi 和 asgi</h2>\n<p>工作中常用到 python，使用 python 开发 web，一般会用到 flask、django，现在一般采用前后端分离方法，所以一般也不用模板了。python 项目只提供网络接口。开发的时候运行很方便，但是部署的时候一般使用 gunicorn 部署。 它是一个符合 wsgi 规范的 http 服务器，用于为 python web 应用提供底层网络实现。python 还有另外一种网关接口叫做 ASGI，就去查资料了解了一下区别。<br>\n首先了解一下基本概念：<br>\n- web 服务器：用于提供网络服务，接受外部请求、响应、转发等，比如 nginx、tomcat、apache 等<br>\n - web 应用程序：用于处理请求，执行服务，返回结果，比如 django、flask 等等<br>\n - 网关接口，用于连接 web 服务器和 web 应用程序，wsgi 和 asgi 就是干这个的<br>\n wsgi 是基于 python 的一个网关接口，它不支持 http2.0,websocket 等长连接，只能支持一个请求、一个回应的方式；<br>\nasgi 是异步的网关接口，得益于 python3.5 之后加入了 async/await 特性，对 http2.0 和 websocket 提供了支持。</p>\n<p>参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3N0dWR5ZWJveS9hcnRpY2xlL2RldGFpbHMvMTIwOTU2MTg4\">https://blog.csdn.net/studyeboy/article/details/120956188</span></p>\n<h2 id=\"gunicorn\"><a class=\"markdownIt-Anchor\" href=\"#gunicorn\">#</a> gunicorn</h2>\n<p>再了解一下 gunicorn！<br>\nwsgi 服务器会预先生成一批 worker 等待请求的到来，存在一个 master 来管理这些 worker。<br>\nworker 也有不同的类型：</p>\n<ol>\n<li>sync workers<br>\n 每个 worker 一次只处理一个请求，并发量很低</li>\n<li>async workers<br>\n 基于 Greenlet 有两种：Gevent、Eventlet。\n<ul>\n<li>GreenLet 是 python 的协程实现、一个线程内，可以有多个 GreenLet，同一时间，只有一个 Greenlet 在 run，调度由系统实现。</li>\n<li>Gevent：通过 Greenlet 协程和 libev 快速事件循环实现异步。 每个请求的连接都是一个 Greenlet 协程，IO 等待时，不会阻塞其他请求的处理</li>\n<li>Eventlet 在 Greenlet 的基础上实现了自己的 GreenThread，实际上就是 greenlet 类的扩展封装，而与 Greenlet 的不同是，Eventlet 实现了自己调度器称为 Hub，Hub 类似于 Tornado 的 IOLoop，是单实例的。在 Hub 中有一个 event loop，根据不同的事件来切换到对应的 GreenThread。同时 Eventlet 还实现了一系列的补丁来使 Python 标准库中的 socket 等等 module 来支持 GreenThread 的切换。</li>\n</ul>\n</li>\n<li>tornado workers<br>\n 配合 tornado 网络框架使用，基于异步非阻塞模型处理长延时请求。</li>\n</ol>\n<p>gunicorn 的高并发就是通过这些 worker 来实现的，worker 配置一般是 2 * CPU+1，在任何时间，都有一半在 io、另一半在占用 cpu。<br>\n启动参数：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>-c CONFIG,–config<span class=\"token operator\">=</span>CONFIG</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>指定一个配置文件（py文件）</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>-b BIND,–bind<span class=\"token operator\">=</span>BIND</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>与指定socket进行板顶</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>-D,–daemon</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>后台进程方式运行gunicorn进程</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>-w WORKERS,–workers<span class=\"token operator\">=</span>WORKERS</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>工作进程的数量</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>-k WORKERCLASS,–worker-class<span class=\"token operator\">=</span>WORKERCLASS</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>工作进程类型，包括sync（默认）,eventlet,gevent,tornado,gthread,gaiohttp</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">6</span><span class=\"token punctuation\">)</span>–backlog INT</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>最大挂起的连接数</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">7</span><span class=\"token punctuation\">)</span>–log-level LEVEL</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>日志输出等级</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>–access-logfile FILE</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>访问日志输出文件</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token number\">9</span><span class=\"token punctuation\">)</span>–error-logfile FILE</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>错误日志输出文件</pre></td></tr></table></figure><h2 id=\"daisyui\"><a class=\"markdownIt-Anchor\" href=\"#daisyui\">#</a> daisyUI</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kYWlzeXVpLmNvbS9kb2NzL2luc3RhbGwv\">https://daisyui.com/docs/install/</span><br>\n 一个基于 tailwindcss 的组件库，之前常用 element，好用的同时又嫌弃他样式太丑了，也不好改，于是在新的小项目中使用了 daisyUI 尝试一下，并且自己写 css 的时候也可以参考它的源码库，挺有意思的。</p>\n<h2 id=\"andbrowser\"><a class=\"markdownIt-Anchor\" href=\"#andbrowser\">#</a> AndBrowser</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Jlc3RzZW5kL2FuZGJyb3dzZXI=\">https://github.com/restsend/andbrowser</span><br>\n 在浏览器中接入了 scrcpy，使用了 web 提供的 api，筛选并连接安卓 usb 设备，推送 scrcpy 程序到设备中，并启动，随后连接屏幕视频流和控制流，同时也提供文件管理，作者提供了在线的 demo：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9icm93c2VybGlmeS5jb20vP2Zyb209Z2l0aHVi\">https://browserlify.com/?from=github</span></p>\n<p>作者是一个做自动化的大佬，他在知乎上也介绍了这个项目的原理：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC81MDQ1NzYxNjk=\"># Phone On Web 的实现原理</span></p>\n<h2 id=\"本周阅读\"><a class=\"markdownIt-Anchor\" href=\"#本周阅读\">#</a> 本周阅读</h2>\n<h3 id=\"诡秘之主\"><a class=\"markdownIt-Anchor\" href=\"#诡秘之主\">#</a> 诡秘之主</h3>\n<p>看到了第二卷：无面人。<br>\n少有的文笔很好的小说，细节描写非常丰富，很容易将我的想象力带入进书中的世界。还会继续看下去。<br>\n目前缺点在于，我不太清楚主线的最终目的，可能我看漏了，或者书中没有过多的强调，主线一直不太清晰，我不明白克莱恩最终要怎么样。</p>\n<h3 id=\"linux命令行与shell脚本编程\"><a class=\"markdownIt-Anchor\" href=\"#linux命令行与shell脚本编程\">#</a> linux 命令行与 shell 脚本编程</h3>\n<p>相比起鸟哥的 liunx 私房菜，这本书读起来就简单多了，基本上就是诸多命令的说明书，也有丰富的案例。适合我这种 linux 菜鸡读，不过之后还会重新读鸟哥。学的深一点更好。</p>\n<h2 id=\"买的新玩意儿\"><a class=\"markdownIt-Anchor\" href=\"#买的新玩意儿\">#</a> 买的新玩意儿</h2>\n<h3 id=\"ps5\"><a class=\"markdownIt-Anchor\" href=\"#ps5\">#</a> ps5</h3>\n<p>今年过生日老婆打算送我 ps5, 本着早买早享受的原则，已经从拼多多买来了，买个三个游戏：双人成行、p5r、蜘蛛侠迈尔斯。 据说各版的 ps5 都可以刷成外服，不过我还是买了日版的，虽然没有保修，不过这东西一般不会坏吧。<br>\n电视上打游戏真的爽！</p>\n<h3 id=\"always-blue\"><a class=\"markdownIt-Anchor\" href=\"#always-blue\">#</a> always blue</h3>\n<p>之前看美剧《硅谷》，对他们玩的那个 always blue 非常感兴趣，就去淘宝搜了一下，叫做手抛球、变色球。还是挺有意思的，可惜发给我的不是蓝色的。<br>\n<img data-src=\"https://i.imgloc.com/2023/06/11/VHZPho.jpeg\" alt=\"alwaysblue\"></p>\n<h2 id=\"重构项目的反思\"><a class=\"markdownIt-Anchor\" href=\"#重构项目的反思\">#</a> 重构项目的反思</h2>\n<p>最近工作中在重构两个项目。<br>\n在之前的使用中有很多想法，将它优化，但到实际执行中，发现难以下手，着实有点眼高手低，对整体的设计还是不够了解，对自己的优化想法也没有实际的细节上的规划。要吸取教训，以后要注意：</p>\n<ul>\n<li>了解整体项目架构：每个点设计的原因细节要搞清楚，前后端实现都要了解</li>\n<li>分析优化点为什么要优化，根源问题在哪？</li>\n<li>修改点要想清楚，前后端增加的工作量不能无效增加</li>\n</ul>\n",
            "tags": [
                "鸡毛蒜皮周刊"
            ]
        },
        {
            "id": "https://fanlu.top/2023/06/05/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%87%8D%E6%96%B0%E6%90%AD%E5%BB%BA%E5%AE%9E%E5%BD%95/",
            "url": "https://fanlu.top/2023/06/05/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%87%8D%E6%96%B0%E6%90%AD%E5%BB%BA%E5%AE%9E%E5%BD%95/",
            "title": "云服务器重新搭建实录",
            "date_published": "2023-06-05T00:47:28.000Z",
            "content_html": "<blockquote>\n<p>上上周把腾讯云的环境搞坏了，之前搭建的 halo 博客站数据也丢了，好在基本都有备份，有些垃圾文章就直接扔掉了。  重新部署了一下云服务器，包括 rss 阅读、hexo 博客、gocron 定时任务等等。这篇文章记录一下我的部署流程。</p>\n</blockquote>\n<h2 id=\"安装docker\"><a class=\"markdownIt-Anchor\" href=\"#安装docker\">#</a> 安装 docker</h2>\n<p>略</p>\n<h2 id=\"安装docker-compose\"><a class=\"markdownIt-Anchor\" href=\"#安装docker-compose\">#</a> 安装 docker-compose</h2>\n<pre><code>sudo curl -L &quot;https://get.daocloud.io/docker/compose/releases/download/2.17.3/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose\nsudo chmod +x /usr/local/bin/docker-compose\ndocker-compose --version\n\n</code></pre>\n<h2 id=\"部署rsshub\"><a class=\"markdownIt-Anchor\" href=\"#部署rsshub\">#</a> 部署 rsshub</h2>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnJzc2h1Yi5hcHAv\">https://docs.rsshub.app/</span></p>\n</blockquote>\n<pre><code>docker pull diygod/rsshub\ndocker run -d --name rsshub -p 1200:1200 diygod/rsshub\n</code></pre>\n<h2 id=\"部署mysql\"><a class=\"markdownIt-Anchor\" href=\"#部署mysql\">#</a> 部署 mysql</h2>\n<ul>\n<li>感谢 chatgpt 的指导</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> volume create mysql_data</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">--name</span> mysql8 <span class=\"token parameter variable\">-p</span> <span class=\"token number\">3307</span>:3306 <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">MYSQL_ROOT_PASSWORD</span><span class=\"token operator\">=</span>********</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">MYSQL_DATABASE</span><span class=\"token operator\">=</span>mydb <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">MYSQL_USER</span><span class=\"token operator\">=</span>myuser <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">MYSQL_PASSWORD</span><span class=\"token operator\">=</span>********</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token parameter variable\">-d</span> mysql:8.0 --default-authentication-plugin<span class=\"token operator\">=</span>mysql_native_password</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>mysql <span class=\"token parameter variable\">-h</span> <span class=\"token number\">127.0</span>.0.1 <span class=\"token parameter variable\">-P</span> <span class=\"token number\">3307</span> <span class=\"token parameter variable\">-u</span> root <span class=\"token parameter variable\">-p</span></pre></td></tr></table></figure><h2 id=\"部署rssant\"><a class=\"markdownIt-Anchor\" href=\"#部署rssant\">#</a> 部署 rssant</h2>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FueWFudC9yc3NhbnQ=\">https://github.com/anyant/rssant</span></p>\n</blockquote>\n<ol>\n<li>准备配置文件～/rssant/rssant.env</li>\n</ol>\n<pre><code># 默认关闭DEBUG，请勿在开发测试之外开启DEBUG\nRSSANT_DEBUG=0\n\n# 请随机生成一个字符串\nRSSANT_SECRET_KEY=********\n\n# 应用的访问地址\nRSSANT_ROOT_URL=http://localhost:6789\n\n# 检查订阅的时间间隔，默认30分钟\nRSSANT_CHECK_FEED_MINUTES=30\n\n# 请前往GITHUB设置页面申请，不需要Github登录可留空\n# GitHub OAuth callback:\n# http://&lt;你的域名&gt;/api/v1/accounts/github/login/callback/\nRSSANT_GITHUB_CLIENT_ID=\nRSSANT_GITHUB_SECRET=\n\n# SMTP邮件功能，不需要注册功能可留空\nRSSANT_ADMIN_EMAIL=\nRSSANT_SMTP_ENABLE=false\nRSSANT_SMTP_HOST=smtp.qq.com\nRSSANT_SMTP_PORT=465\nRSSANT_SMTP_USE_SSL=true\nRSSANT_SMTP_USERNAME=\nRSSANT_SMTP_PASSWORD=\n\n# RSS代理功能，可留空\n# 参考项目 cloudflare_worker/rssant 目录下的说明部署代理\nRSSANT_RSS_PROXY_ENABLE=false\nRSSANT_RSS_PROXY_URL=\nRSSANT_RSS_PROXY_TOKEN=\n\n# 以下配置保持不动\nRSSANT_SCHEDULER_NETWORK=rssant\nRSSANT_PG_DB=rssant\nRSSANT_PG_HOST=localhost\nRSSANT_PG_USER=rssant\nRSSANT_PG_PASSWORD=rssant\n</code></pre>\n<ol start=\"2\">\n<li></li>\n</ol>\n<pre><code>#!/bin/bash\n\ndocker volume create rssant-data || true\ndocker volume create rssant-postgres-data || true\ndocker volume create rssant-postgres-logs || true\n\ndocker rm -f rssant || true\ndocker run -ti --name rssant -d \\\n    -p 8050:80 \\\n    --env-file ~/rssant/rssant.env \\\n    -v rssant-data:/app/data \\\n    -v rssant-postgres-data:/var/lib/postgresql/11/main \\\n    -v rssant-postgres-logs:/var/log/postgresql \\\n    --log-driver json-file --log-opt max-size=50m --log-opt max-file=10 \\\n    --restart unless-stopped \\\n    guyskk/rssant:latest\n\ndocker logs --tail 1000 -f rssant\n</code></pre>\n<h2 id=\"部署nginx\"><a class=\"markdownIt-Anchor\" href=\"#部署nginx\">#</a> 部署 nginx</h2>\n<ol>\n<li>安装 nginx</li>\n<li>配置 ssl 证书</li>\n<li>配置端口转发</li>\n</ol>\n<h2 id=\"部署hexo\"><a class=\"markdownIt-Anchor\" href=\"#部署hexo\">#</a> 部署 hexo</h2>\n<ol>\n<li>本地创建自己的 hexo 项目</li>\n<li>部署到 github</li>\n<li>在服务器上拉去项目并 hexo g</li>\n<li>将 nginx location 根目录设置到 hexo 生成目录下<br>\n生成页面为空文件</li>\n</ol>\n<h3 id=\"主题调整\"><a class=\"markdownIt-Anchor\" href=\"#主题调整\">#</a> 主题调整</h3>\n<p>使用这个主题 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvaGV4by10aGVtZS1zaG9rYQ==\">https://github.com/amehime/hexo-theme-shoka</span></p>\n<ul>\n<li>修改配置信息等等</li>\n<li>修改语言</li>\n<li>修改标题</li>\n<li>修改 loading</li>\n<li>修改图片函数</li>\n<li>修改图片列表</li>\n<li>添加备案信息</li>\n<li>…<br>\n 一开始配置出了问题，代码没有高亮，重新创建、配置就行了</li>\n</ul>\n<h2 id=\"部署文件服务器\"><a class=\"markdownIt-Anchor\" href=\"#部署文件服务器\">#</a> 部署文件服务器</h2>\n<p>选择 filebrowser <span class=\"exturl\" data-url=\"aHR0cHM6Ly9maWxlYnJvd3Nlci5vcmcvaW5zdGFsbGF0aW9u\">https://filebrowser.org/installation</span></p>\n<p>按照文档进行安装、启动、很方便，但是它不能作为图床使用，只是一个文件管理器。</p>\n<h2 id=\"图床\"><a class=\"markdownIt-Anchor\" href=\"#图床\">#</a> 图床</h2>\n<p>还需要部署图床吗？<br>\n本来想搭建图床、提供给博客使用，但是自己的服务器带宽和存储实在太有限，就使用了第三方的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWdsb2MuY29tLw==\">图床</span><br>\n从<span class=\"exturl\" data-url=\"aHR0cHM6Ly93YWxsaGF2ZW4uY2Mv\"> wallhaven</span> 下载的图片太大了，就用<span class=\"exturl\" data-url=\"aHR0cHM6Ly90dXlhLnhpbnhpYW8udGVjaC8=\">图压</span>先压缩了一下，再上传到图床。</p>\n<h2 id=\"gocron定时任务\"><a class=\"markdownIt-Anchor\" href=\"#gocron定时任务\">#</a> gocron 定时任务</h2>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL291cWlhbmcvZ29jcm9u\">https://github.com/ouqiang/gocron</span><br>\n 先用 docker 安装服务<br>\n再启动一个本地节点</p>\n</blockquote>\n<h3 id=\"节点安装\"><a class=\"markdownIt-Anchor\" href=\"#节点安装\">#</a> 节点安装</h3>\n<p>gocron-node<br>\n 创建用户</p>\n<p>注意：有些后安装的命令，节点无法识别。需要重启一下节点。</p>\n<h3 id=\"自动部署blog\"><a class=\"markdownIt-Anchor\" href=\"#自动部署blog\">#</a> 自动部署 blog</h3>\n<ul>\n<li>github 添加 action</li>\n<li>服务器上部署 gocron 服务</li>\n<li>想办法实现 gocron 的 http 接口触发</li>\n<li>调用部署脚本</li>\n</ul>\n<p>gocron 的接口：</p>\n<ol>\n<li>登录<br>\n<span class=\"exturl\" data-url=\"aHR0cDovLzExMC40Mi4xODIuOTI=\"> http://110.42.182.92</span>:<em>port</em>/api/user/login<br>\npost 请求<br>\n参数：username  password<br>\n 返回的数据：</li>\n</ol>\n<pre><code>&#123;\n\tcode:\n\tmessage:\n\tdata:&#123;\n\t\tis_admin: 1,\n\t\ttoken: &quot;&quot;\n\t\tuid:,\n\t\tusername:&quot;&quot;\n\t&#125;\n&#125;\n</code></pre>\n<ol>\n<li>运行任务<br>\n<span class=\"exturl\" data-url=\"aHR0cDovLzExMC40Mi4xODIuOTI=\"> http://110.42.182.92</span>:<em>port</em>/api/task/run/1<br>\nget 请求<br>\n header 中携带 Auth-Token</li>\n</ol>\n<p>github 中 Action 可以带着 secret，可以先登录在调用任务运行部署脚本；<br>\n脚本需要调整，git 失败时需要不断重试；</p>\n<p>github 脚本：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy On My server</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  push<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    branches<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token punctuation\">-</span> main  <span class=\"token comment\"># 更改为你要触发的分支</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  login<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    runs<span class=\"token punctuation\">-</span><span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest  <span class=\"token comment\"># 可以根据需要更改操作系统</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    steps<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Checkout code</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        uses<span class=\"token punctuation\">:</span> actions/checkout@v2</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Login and Fetch Token</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        run<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>          <span class=\"token comment\"># 在这里编写登录请求的代码，使用适当的语言和库发送 POST 请求，获取并提取出令牌</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>          <span class=\"token comment\"># 将令牌存储在一个变量中</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>          <span class=\"token comment\"># 示例（使用 cURL 发送请求）：</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>          token=$(curl <span class=\"token punctuation\">-</span>X POST <span class=\"token punctuation\">-</span>d 'username= $&lt;<span class=\"token tag\">!--swig</span>￼0<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span><span class=\"token important\">&amp;password=</span> $&lt;<span class=\"token tag\">!--swig</span>￼1<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span>'  http<span class=\"token punctuation\">:</span>//110.42.182.92<span class=\"token punctuation\">:</span><span class=\"token important\">*port*/api/user/login</span> <span class=\"token punctuation\">|</span> jq <span class=\"token punctuation\">-</span>r '.data.token')</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>          echo \"Token<span class=\"token punctuation\">:</span> $token\"</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>          <span class=\"token comment\"># 将令牌存储为一个 GitHub Actions 的环境变量，以便在后续的步骤中使用</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>          echo \"TOKEN=$token\" <span class=\"token punctuation\">></span><span class=\"token punctuation\">></span> $GITHUB_ENV</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Start Deploy Task</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        run<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>          <span class=\"token comment\"># 在这里编写发送下一个请求的代码，使用适当的语言和库</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>          <span class=\"token comment\"># 将上一步获取的令牌放置在请求标头中</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>          <span class=\"token comment\"># 示例（使用 cURL 发送请求）：</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>          token=$TOKEN  <span class=\"token comment\"># 获取上一步中存储的令牌</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>          curl <span class=\"token punctuation\">-</span><span class=\"token key atrule\">H \"Auth-Token</span><span class=\"token punctuation\">:</span> $token\"  http<span class=\"token punctuation\">:</span>//110.42.182.92<span class=\"token punctuation\">:</span><span class=\"token important\">*port*/api/task/run/1</span></pre></td></tr></table></figure><p>命令脚本：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token shebang important\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">cd</span> ~/code/Blog</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">git</span> reset <span class=\"token parameter variable\">--hard</span> HEAD</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token assign-left variable\">max_retries</span><span class=\"token operator\">=</span><span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token assign-left variable\">retry_count</span><span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token assign-left variable\">success</span><span class=\"token operator\">=</span>false</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$retry_count</span> <span class=\"token parameter variable\">-lt</span> <span class=\"token variable\">$max_retries</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$success</span>\"</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Attempting to pull Git code (Attempt: <span class=\"token variable\"><span class=\"token variable\">$((</span>retry_count<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token variable\">))</span></span>)\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function\">git</span> pull</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$?</span> <span class=\"token parameter variable\">-eq</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token assign-left variable\">success</span><span class=\"token operator\">=</span>true</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Git pull successful\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token assign-left variable\">retry_count</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$((</span>retry_count<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token variable\">))</span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Git pull failed. Retrying...\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$success</span>\"</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Git pull failed after <span class=\"token variable\">$max_retries</span> attempts\"</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>hexo g</pre></td></tr></table></figure>",
            "tags": [
                "云服务器"
            ]
        },
        {
            "id": "https://fanlu.top/2023/06/03/%E9%B8%A1%E6%AF%9B%E8%92%9C%E7%9A%AE%E5%91%A8%E5%88%8A-03/",
            "url": "https://fanlu.top/2023/06/03/%E9%B8%A1%E6%AF%9B%E8%92%9C%E7%9A%AE%E5%91%A8%E5%88%8A-03/",
            "title": "鸡毛蒜皮周刊-03",
            "date_published": "2023-06-03T07:18:12.000Z",
            "content_html": "<h2 id=\"ue4的网络模块\"><a class=\"markdownIt-Anchor\" href=\"#ue4的网络模块\">#</a> ue4 的网络模块</h2>\n<p>ue4 的网络和客户端紧密结合，通过蓝图中的设置就能实现服务器的功能。这篇文章介绍了 ue4 网络模块的原理。<br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuemh5aW5na3VuLmNvbS9tYXJrZG93bi91ZTRuZXR3b3JrLw==\">UE4 网络模块剖析</span></p>\n<h2 id=\"tcp\"><a class=\"markdownIt-Anchor\" href=\"#tcp\">#</a> TCP</h2>\n<p>工作中发现一个棘手的问题，TCP 莫名其妙的断开。目前还没有定位到，可能是阿里云的 DNS 负载均衡搞得鬼。<br>\n发现对于 TCP 的了解太匮乏了，于是买了几本书，另外要好好学下 tcpdump 和 wireshark</p>\n<h2 id=\"wasm\"><a class=\"markdownIt-Anchor\" href=\"#wasm\">#</a> WASM</h2>\n<p>了解了一下 WASM 是干嘛的：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC82ODA0ODUyNA==\">https://zhuanlan.zhihu.com/p/68048524</span></p>\n<h2 id=\"clickhouse\"><a class=\"markdownIt-Anchor\" href=\"#clickhouse\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbGlja2hvdXNlLmNvbS9kb2NzL3poLw==\">ClickHouse</span></h2>\n<p>ClickHouse 是一个用于联机分析 (OLAP) 的列式数据库管理系统 (DBMS)。<br>\n一般用作用户埋点数据存储和分析。</p>\n<h2 id=\"表格设计\"><a class=\"markdownIt-Anchor\" href=\"#表格设计\">#</a> 表格设计</h2>\n<p>前端需要展示表格时，总是不知道该如何区分主次、强调信息、美化表格、减少冗余信息。这篇文章详细写了前端表格设计的方方面面，非常实用。<br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaHRtbHRyaXAuY29tLzE4NTIuaHRtbA==\">如何设计好的 web 表格？分享大神的总结 - 前端印记 (htmltrip.com)</span></p>\n",
            "tags": [
                "鸡毛蒜皮周刊"
            ]
        },
        {
            "id": "https://fanlu.top/2023/05/19/%E5%9B%BE%E7%89%87%E6%89%B9%E9%87%8F%E5%8E%8B%E7%BC%A9%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/",
            "url": "https://fanlu.top/2023/05/19/%E5%9B%BE%E7%89%87%E6%89%B9%E9%87%8F%E5%8E%8B%E7%BC%A9%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/",
            "title": "图片批量压缩工具推荐",
            "date_published": "2023-05-19T15:24:15.000Z",
            "content_html": "<p>一个图片批量压缩工具，使用非常方便。<br>\n把文件夹中图片全部拖进去，然后很快就压缩好并再次保存到文件夹中。</p>\n<ul>\n<li>支持指定宽高</li>\n<li>支持指定压缩强度或者文件大小</li>\n<li>可选目标格式</li>\n<li>可选保存路径</li>\n<li>可选新文件后缀。</li>\n<li>没广告！！！！！！</li>\n<li>免费！！！！！！！</li>\n</ul>\n<p>官网在这里⬇</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly90dXlhLnhpbnhpYW8udGVjaC8jb3Blbi1zb3VyY2U=\">图压官网</span></p>\n",
            "tags": [
                "工具"
            ]
        },
        {
            "id": "https://fanlu.top/2023/05/18/%E9%B8%A1%E6%AF%9B%E8%92%9C%E7%9A%AE%E5%91%A8%E5%88%8A-02/",
            "url": "https://fanlu.top/2023/05/18/%E9%B8%A1%E6%AF%9B%E8%92%9C%E7%9A%AE%E5%91%A8%E5%88%8A-02/",
            "title": "鸡毛蒜皮周刊-02",
            "date_published": "2023-05-18T15:20:45.000Z",
            "content_html": "<h2 id=\"nonebot-和-微信机器人\"><a class=\"markdownIt-Anchor\" href=\"#nonebot-和-微信机器人\">#</a> NoneBot 和 微信机器人</h2>\n<p>NoneBot（<strong><span class=\"exturl\" data-url=\"aHR0cHM6Ly92Mi5ub25lYm90LmRldi8=\">NoneBot</span></strong>）是一个 python 框架，用来实现机器人聊天应答，支持的平台包括：qq、飞书、钉钉等，插件非常丰富，文档也很详尽，准备搭建试试。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly94aWUuaW5mb3EuY24vYXJ0aWNsZS8yMGYxOTE0NjIzN2YzNzE0YzVlYjVhZGI3\">微信 + ChatGPT = 自己的智能助手 | 社区征文_ChatGPT_IT 蜗壳 - Tango_InfoQ 写作社区</span> 作者基于 wechaty python 库和一个 chatGpt 账号，实现了一个微信的智能应答机器人</p>\n<h2 id=\"pake\"><a class=\"markdownIt-Anchor\" href=\"#pake\">#</a> Pake</h2>\n<p>基于 rust 和 tauri 来将网站打包成一个应用，支持多平台。<br>\n我拿来试了下，打包了部署在个人腾讯云上面的 rss 阅读器，体验非常好，阅读 rss 的时间大大增加了。<br>\n<img data-src=\"http://110.42.182.92:4080/Pasted%20image%2020230307081744.png\" alt=\"图片\"><br>\n顺便吐槽一句，win 上现有的 rss 阅读器真的很难用。</p>\n<h2 id=\"ue4\"><a class=\"markdownIt-Anchor\" href=\"#ue4\">#</a> UE4</h2>\n<p>由于工作的原因，需要了解一下 UE4 的开发。试了一下 B 站上的一个教程：</p>\n<iframe src=\"//player.bilibili.com/player.html?aid=728399911&bvid=BV1qS4y1J7oh&cid=772526176&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n体验如下：\n- 蓝图太好用了，可视化编程无敌\n- 蓝图太难记了，控件、方法实在太多了，有些是需要牵引出来才能找到，太难找了\n- ue4的网络模块太牛了，在蓝图里就能开发网络，需要好好学习一下\n<h2 id=\"rust和chatgpt\"><a class=\"markdownIt-Anchor\" href=\"#rust和chatgpt\">#</a> rust 和 chatGPT</h2>\n<p>尝试看了一个 rust 后端，tauri 前端的小项目。<br>\nrust 语法有点难理解啊。<br>\n忽然想起 chatGPT，于是放进去问问，效果惊人<br>\n<img data-src=\"http://110.42.182.92:4080/Pasted%20image%2020230309091056.png\" alt=\"\"></p>\n<h2 id=\"travellingscn\"><a class=\"markdownIt-Anchor\" href=\"#travellingscn\">#</a> <span class=\"exturl\" data-url=\"aHR0cDovL1RyYXZlbGxpbmdzLmNu\">Travellings.cn</span></h2>\n<p>偶然发现某个博客有个友链的跳转地址，<span class=\"exturl\" data-url=\"aHR0cDovL3huLS10cmF2ZWxsaW5ncy1rdTZyaThndXU1M2F4cWxiLmNu\">首先跳到 travellings.cn</span>，然后跳到另一个博客，然后下一个博客也有这么一个链接，感觉是一个博客联盟之类的，进行随机跳转。一查果然没错：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudHJhdmVsbGluZ3MuY24v\">开往 - 友链接力 (travellings.cn)</span><br>\n 挺有意思的，可以把自己的博客也搞上去<br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudHJhdmVsbGluZ3MuY24vZ28uaHRtbA==\">开往 - 友链接力 (travellings.cn)</span>  这个链接可以随机前往到某个博客，进入他们的世界，感觉很不错。</p>\n",
            "tags": [
                "鸡毛蒜皮周刊"
            ]
        },
        {
            "id": "https://fanlu.top/2023/05/17/gopher-lua%E4%BD%BF%E7%94%A8%E5%B0%8Fdemo/",
            "url": "https://fanlu.top/2023/05/17/gopher-lua%E4%BD%BF%E7%94%A8%E5%B0%8Fdemo/",
            "title": "gopher-lua使用小demo",
            "date_published": "2023-05-17T01:04:08.000Z",
            "content_html": "<blockquote>\n<p>模拟读者读书</p>\n</blockquote>\n<h2 id=\"首先新建reader类\"><a class=\"markdownIt-Anchor\" href=\"#首先新建reader类\">#</a> 首先新建 reader 类</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">type</span> Reader <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tUid         <span class=\"token builtin\">uint32</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tUserName    <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tReaderCount <span class=\"token builtin\">uint8</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>reader <span class=\"token operator\">*</span>Reader<span class=\"token punctuation\">)</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span>book <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\treader<span class=\"token punctuation\">.</span>ReaderCount<span class=\"token operator\">++</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Reader:%v,Name:%v,read book %v\\n\"</span><span class=\"token punctuation\">,</span> reader<span class=\"token punctuation\">.</span>Uid<span class=\"token punctuation\">,</span> reader<span class=\"token punctuation\">.</span>UserName<span class=\"token punctuation\">,</span> book<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"将reader类注册到lua中\"><a class=\"markdownIt-Anchor\" href=\"#将reader类注册到lua中\">#</a> 将 reader 类注册到 lua 中</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> lua <span class=\"token string\">\"github.com/yuin/gopher-lua\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">const</span> luaPersonTypeName <span class=\"token operator\">=</span> <span class=\"token string\">\"reader\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">var</span> readerMethods <span class=\"token operator\">=</span> <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span>lua<span class=\"token punctuation\">.</span>LGFunction<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token string\">\"read\"</span><span class=\"token punctuation\">:</span>     luaReaderRead<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token string\">\"username\"</span><span class=\"token punctuation\">:</span> readerGetSetUsername<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// 注册定义的类成为 lua 的一个元表</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">registerReaderType</span><span class=\"token punctuation\">(</span>L <span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>LState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tmt <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">NewTypeMetatable</span><span class=\"token punctuation\">(</span>luaPersonTypeName<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tL<span class=\"token punctuation\">.</span><span class=\"token function\">SetGlobal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"reader\"</span><span class=\"token punctuation\">,</span> mt<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tL<span class=\"token punctuation\">.</span><span class=\"token function\">SetField</span><span class=\"token punctuation\">(</span>mt<span class=\"token punctuation\">,</span> <span class=\"token string\">\"new\"</span><span class=\"token punctuation\">,</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">NewFunction</span><span class=\"token punctuation\">(</span>luaNewReader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tL<span class=\"token punctuation\">.</span><span class=\"token function\">SetField</span><span class=\"token punctuation\">(</span>mt<span class=\"token punctuation\">,</span> <span class=\"token string\">\"__index\"</span><span class=\"token punctuation\">,</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">SetFuncs</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">.</span><span class=\"token function\">NewTable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> readerMethods<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">//lua 创建对象方法</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">luaNewReader</span><span class=\"token punctuation\">(</span>L <span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>LState<span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\treader <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>Reader<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token function\">uint32</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">.</span><span class=\"token function\">CheckInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\tL<span class=\"token punctuation\">.</span><span class=\"token function\">CheckString</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token function\">uint8</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">.</span><span class=\"token function\">CheckInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tud <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">NewUserData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\tud<span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> reader</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\tL<span class=\"token punctuation\">.</span><span class=\"token function\">SetMetatable</span><span class=\"token punctuation\">(</span>ud<span class=\"token punctuation\">,</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">GetTypeMetatable</span><span class=\"token punctuation\">(</span>luaPersonTypeName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\tL<span class=\"token punctuation\">.</span><span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>ud<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\">// 在 lua 中获取对象的重要一步</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">checkReader</span><span class=\"token punctuation\">(</span>L <span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>LState<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span>Reader <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\tud <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">CheckUserData</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token keyword\">if</span> v<span class=\"token punctuation\">,</span> ok <span class=\"token operator\">:=</span> ud<span class=\"token punctuation\">.</span>Value<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>Reader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> ok <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> v</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\tL<span class=\"token punctuation\">.</span><span class=\"token function\">ArgError</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"reader expected\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token comment\">// 方法注册到 lua 中</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">luaReaderRead</span><span class=\"token punctuation\">(</span>L <span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>LState<span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\tr <span class=\"token operator\">:=</span> <span class=\"token function\">checkReader</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\tbook <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\tr<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>book<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token comment\">// 属性的 get Set 方法， 注意方法名必须这样写：结构名 GetSet 属性名，大小写也要注意</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">readerGetSetUsername</span><span class=\"token punctuation\">(</span>L <span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>LState<span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\tr <span class=\"token operator\">:=</span> <span class=\"token function\">checkReader</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t<span class=\"token keyword\">if</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">GetTop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\tr<span class=\"token punctuation\">.</span>UserName <span class=\"token operator\">=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">CheckString</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\tL<span class=\"token punctuation\">.</span><span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>lua<span class=\"token punctuation\">.</span><span class=\"token function\">LString</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>UserName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"也许有一些模块需要注入到lua中\"><a class=\"markdownIt-Anchor\" href=\"#也许有一些模块需要注入到lua中\">#</a> 也许有一些模块需要注入到 lua 中</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tlua <span class=\"token string\">\"github.com/yuin/gopher-lua\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">var</span> modFuncs <span class=\"token operator\">=</span> <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span>lua<span class=\"token punctuation\">.</span>LGFunction<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token string\">\"eat\"</span><span class=\"token punctuation\">:</span>    Eat<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token string\">\"drink\"</span><span class=\"token punctuation\">:</span>  Drink<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token string\">\"record\"</span><span class=\"token punctuation\">:</span> Record<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">Eat</span><span class=\"token punctuation\">(</span>L <span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>LState<span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tmsg <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">CheckString</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"eat:\"</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">Drink</span><span class=\"token punctuation\">(</span>L <span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>LState<span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tmsg <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">CheckString</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"drink:\"</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">Record</span><span class=\"token punctuation\">(</span>L <span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>LState<span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tr <span class=\"token operator\">:=</span> <span class=\"token function\">checkReader</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%v读完了！一共%v本书！\\n\"</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>UserName<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>ReaderCount<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">Loader</span><span class=\"token punctuation\">(</span>L <span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>LState<span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\tmod <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">SetFuncs</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">.</span><span class=\"token function\">NewTable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> modFuncs<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\tL<span class=\"token punctuation\">.</span><span class=\"token function\">SetField</span><span class=\"token punctuation\">(</span>mod<span class=\"token punctuation\">,</span> <span class=\"token string\">\"mymod\"</span><span class=\"token punctuation\">,</span> lua<span class=\"token punctuation\">.</span><span class=\"token function\">LString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"value\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\tL<span class=\"token punctuation\">.</span><span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>mod<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"预先定义一个lua文件\"><a class=\"markdownIt-Anchor\" href=\"#预先定义一个lua文件\">#</a> 预先定义一个 lua 文件</h2>\n<p>这样所有的协程可以共享这个 lua 文件</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">local</span> mymod <span class=\"token operator\">=</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mymod\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">-- 加载注入的模块</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    global_id <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    global_name <span class=\"token operator\">=</span> <span class=\"token string\">\"test\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">newReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    r <span class=\"token operator\">=</span> reader<span class=\"token punctuation\">.</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span>global_id<span class=\"token punctuation\">,</span>global_name<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">-- 连续执行三次</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span>book<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    r<span class=\"token punctuation\">:</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>book<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    mymod<span class=\"token punctuation\">.</span><span class=\"token function\">eat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"面包\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    mymod<span class=\"token punctuation\">.</span><span class=\"token function\">drink</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"雪碧\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">finish</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    mymod<span class=\"token punctuation\">.</span><span class=\"token function\">record</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr></table></figure><h2 id=\"然后可以试试看啦\"><a class=\"markdownIt-Anchor\" href=\"#然后可以试试看啦\">#</a> 然后可以试试看啦</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token string\">\"bufio\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token string\">\"github.com/yuin/gopher-lua\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token string\">\"github.com/yuin/gopher-lua/parse\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token string\">\"math/rand\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token string\">\"os\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token string\">\"strconv\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token string\">\"sync\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token string\">\"time\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">// TODO: 加载 lua 代码执行</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">// TODO: 多线程</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">var</span> wg sync<span class=\"token punctuation\">.</span>WaitGroup</pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tbooks <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token string\">\"活着\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"白鹿原\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"春秋战国\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"兄弟\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"许三观卖血记\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"丰乳肥臀\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\tluaPath <span class=\"token operator\">:=</span> <span class=\"token string\">\"./main/test.lua\"</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\tluaProto<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">compileFile</span><span class=\"token punctuation\">(</span>luaPath<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t<span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\twg<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t<span class=\"token keyword\">go</span> <span class=\"token function\">DoRead</span><span class=\"token punctuation\">(</span>luaProto<span class=\"token punctuation\">,</span> <span class=\"token function\">uint32</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Reader\"</span><span class=\"token operator\">+</span>strconv<span class=\"token punctuation\">.</span><span class=\"token function\">Itoa</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> books<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\twg<span class=\"token punctuation\">.</span><span class=\"token function\">Wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\">// 机器人主流程</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">DoRead</span><span class=\"token punctuation\">(</span>luaProto <span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>FunctionProto<span class=\"token punctuation\">,</span> id <span class=\"token builtin\">uint32</span><span class=\"token punctuation\">,</span> name <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> books <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\tL <span class=\"token operator\">:=</span> lua<span class=\"token punctuation\">.</span><span class=\"token function\">NewState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t<span class=\"token keyword\">defer</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t<span class=\"token function\">registerReaderType</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\tL<span class=\"token punctuation\">.</span><span class=\"token function\">PreloadModule</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mymod\"</span><span class=\"token punctuation\">,</span> Loader<span class=\"token punctuation\">)</span>          <span class=\"token comment\">// 注入自己的模块</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\tlFunc <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">NewFunctionFromProto</span><span class=\"token punctuation\">(</span>luaProto<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 从字节码解析得到</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\tL<span class=\"token punctuation\">.</span><span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>lFunc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\tL<span class=\"token punctuation\">.</span><span class=\"token function\">PCall</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> lua<span class=\"token punctuation\">.</span>MultRet<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t<span class=\"token comment\">// init</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">CallByParam</span><span class=\"token punctuation\">(</span>lua<span class=\"token punctuation\">.</span>P<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\tFn<span class=\"token punctuation\">:</span>      L<span class=\"token punctuation\">.</span><span class=\"token function\">GetGlobal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"init\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\tNRet<span class=\"token punctuation\">:</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\tProtect<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> lua<span class=\"token punctuation\">.</span>LNil<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t<span class=\"token comment\">// 新建机器人</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\tL<span class=\"token punctuation\">.</span><span class=\"token function\">SetGlobal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"global_id\"</span><span class=\"token punctuation\">,</span> lua<span class=\"token punctuation\">.</span><span class=\"token function\">LNumber</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\tL<span class=\"token punctuation\">.</span><span class=\"token function\">SetGlobal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"global_name\"</span><span class=\"token punctuation\">,</span> lua<span class=\"token punctuation\">.</span><span class=\"token function\">LString</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">CallByParam</span><span class=\"token punctuation\">(</span>lua<span class=\"token punctuation\">.</span>P<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t\tFn<span class=\"token punctuation\">:</span>      L<span class=\"token punctuation\">.</span><span class=\"token function\">GetGlobal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"newReader\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t\tNRet<span class=\"token punctuation\">:</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t\tProtect<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> lua<span class=\"token punctuation\">.</span>LNil<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t<span class=\"token comment\">// 读书</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t\tbook <span class=\"token operator\">:=</span> books<span class=\"token punctuation\">[</span>rand<span class=\"token punctuation\">.</span><span class=\"token function\">Int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>books<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">CallByParam</span><span class=\"token punctuation\">(</span>lua<span class=\"token punctuation\">.</span>P<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t\t\tFn<span class=\"token punctuation\">:</span>      L<span class=\"token punctuation\">.</span><span class=\"token function\">GetGlobal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"read\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t\t\tNRet<span class=\"token punctuation\">:</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t\t\tProtect<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> lua<span class=\"token punctuation\">.</span><span class=\"token function\">LString</span><span class=\"token punctuation\">(</span>book<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t\ttime<span class=\"token punctuation\">.</span><span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>Second<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t<span class=\"token comment\">// 结束</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">CallByParam</span><span class=\"token punctuation\">(</span>lua<span class=\"token punctuation\">.</span>P<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\t\tFn<span class=\"token punctuation\">:</span>      L<span class=\"token punctuation\">.</span><span class=\"token function\">GetGlobal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"finish\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>\t\tNRet<span class=\"token punctuation\">:</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\t\tProtect<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> lua<span class=\"token punctuation\">.</span>LNil<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\twg<span class=\"token punctuation\">.</span><span class=\"token function\">Done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre></pre></td></tr><tr><td data-num=\"96\"></td><td><pre><span class=\"token comment\">// 解析文件变成 lua 字节码</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">compileFile</span><span class=\"token punctuation\">(</span>filePath <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>FunctionProto<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\tfile<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\t<span class=\"token keyword\">defer</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err</pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>\treader <span class=\"token operator\">:=</span> bufio<span class=\"token punctuation\">.</span><span class=\"token function\">NewReader</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\tchunk<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> parse<span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>reader<span class=\"token punctuation\">,</span> filePath<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err</pre></td></tr><tr><td data-num=\"107\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\tproto<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> lua<span class=\"token punctuation\">.</span><span class=\"token function\">Compile</span><span class=\"token punctuation\">(</span>chunk<span class=\"token punctuation\">,</span> filePath<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err</pre></td></tr><tr><td data-num=\"111\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>\t<span class=\"token keyword\">return</span> proto<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "golang实验室"
            ]
        },
        {
            "id": "https://fanlu.top/2023/05/17/gopher-lua%E7%9A%84%E4%BD%BF%E7%94%A8/",
            "url": "https://fanlu.top/2023/05/17/gopher-lua%E7%9A%84%E4%BD%BF%E7%94%A8/",
            "title": "gopher-lua的使用",
            "date_published": "2023-05-17T01:03:13.000Z",
            "content_html": "<p>#golang #lua #压测</p>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3l1aW4vZ29waGVyLWx1YSN1c2FnZQ==\">https://github.com/yuin/gopher-lua#usage</span></p>\n</blockquote>\n<h2 id=\"简单使用\"><a class=\"markdownIt-Anchor\" href=\"#简单使用\">#</a> 简单使用</h2>\n<ol>\n<li>首先声明一个 lua 虚拟机： L := lua.NewState ()  返回一个 LState Struct</li>\n<li>然后可以执行 lua 格式的字符串或者 File\n<ul>\n<li>lua.DoString( <code>print(&quot;hello&quot;)</code> )</li>\n<li>lua.DoFile (lua 脚本的路径)</li>\n</ul>\n</li>\n</ol>\n<p>LState 定义如下：</p>\n<pre><code class=\"language-golang\">type LState struct &#123;\n\tG       *Global\n\tParent  *LState\n\tEnv     *LTable\n\tPanic   func(*LState)\n\tDead    bool\n\tOptions Options\n\n\tstop         int32\n\treg          *registry\n\tstack        callFrameStack\n\talloc        *allocator\n\tcurrentFrame *callFrame\n\twrapped      bool\n\tuvcache      *Upvalue\n\thasErrorFunc bool\n\tmainLoop     func(*LState, *callFrame)\n\tctx          context.Context\n&#125;\n</code></pre>\n<ul>\n<li>Get 方法  获取栈中的变量</li>\n<li></li>\n</ul>\n<h2 id=\"数据模型\"><a class=\"markdownIt-Anchor\" href=\"#数据模型\">#</a> 数据模型</h2>\n<p>gopher-lua 中的说有变量值都是一个 LValue, 是 go 语言中的 interface，包含两个方法：</p>\n<ul>\n<li>String（）string</li>\n<li>Type() LValueType</li>\n</ul>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">type</span> LValue <span class=\"token keyword\">interface</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">string</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token function\">Type</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> LValueType   </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token function\">assertFloat64</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">float64</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token function\">assertString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token function\">assertFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>LFunction<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>该接口的实现包括如下类：</p>\n<table>\n<thead>\n<tr>\n<th>Type name</th>\n<th>Go type</th>\n<th>Type() value</th>\n<th>Constants</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LNilType</code></td>\n<td>(constants)</td>\n<td><code>LTNil</code></td>\n<td><code>LNil</code></td>\n</tr>\n<tr>\n<td><code>LBool</code></td>\n<td>(constants)</td>\n<td><code>LTBool</code></td>\n<td><code>LTrue</code> ,  <code>LFalse</code></td>\n</tr>\n<tr>\n<td><code>LNumber</code></td>\n<td>float64</td>\n<td><code>LTNumber</code></td>\n<td><code>-</code></td>\n</tr>\n<tr>\n<td><code>LString</code></td>\n<td>string</td>\n<td><code>LTString</code></td>\n<td><code>-</code></td>\n</tr>\n<tr>\n<td><code>LFunction</code></td>\n<td>struct pointer</td>\n<td><code>LTFunction</code></td>\n<td><code>-</code></td>\n</tr>\n<tr>\n<td><code>LUserData</code></td>\n<td>struct pointer</td>\n<td><code>LTUserData</code></td>\n<td><code>-</code></td>\n</tr>\n<tr>\n<td><code>LState</code></td>\n<td>struct pointer</td>\n<td><code>LTThread</code></td>\n<td><code>-</code></td>\n</tr>\n<tr>\n<td><code>LTable</code></td>\n<td>struct pointer</td>\n<td><code>LTTable</code></td>\n<td><code>-</code></td>\n</tr>\n<tr>\n<td><code>LChannel</code></td>\n<td>chan LValue</td>\n<td><code>LTChannel</code></td>\n<td><code>-</code></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>lv.Type () 可以获取类型</li>\n<li>原表不可用；没有错误捕捉</li>\n</ul>\n<h2 id=\"callstack-registry-size\"><a class=\"markdownIt-Anchor\" href=\"#callstack-registry-size\">#</a> Callstack &amp; Registry size</h2>\n<p>LState 的调用栈的大小控制着脚本中 Lua 函数的最大调用深度（Go 函数的调用不算在内）。</p>\n<p>LState 的注册表实现了对调用函数（包括 Lua 和 Go 函数）和表达式中的临时变量的栈存储。它的存储需求将随着调用堆栈的使用和代码的复杂性而增加。</p>\n<p>注册表和调用堆栈都可以被设置为固定大小或自动大小。</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>L <span class=\"token operator\">:=</span> lua<span class=\"token punctuation\">.</span><span class=\"token function\">NewState</span><span class=\"token punctuation\">(</span>lua<span class=\"token punctuation\">.</span>Options<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    RegistrySize<span class=\"token punctuation\">:</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>         <span class=\"token comment\">// this is the initial size of the registry</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    RegistryMaxSize<span class=\"token punctuation\">:</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span>      <span class=\"token comment\">// this is the maximum size that the registry can grow to. If set to `0` (the default) then the registry will not auto grow</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    RegistryGrowStep<span class=\"token punctuation\">:</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span>            <span class=\"token comment\">// this is how much to step up the registry by each time it runs out of space. The default is `32`.</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">defer</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"api\"><a class=\"markdownIt-Anchor\" href=\"#api\">#</a> API</h2>\n<h3 id=\"从lua中调用go函数\"><a class=\"markdownIt-Anchor\" href=\"#从lua中调用go函数\">#</a> 从 lua 中调用 go 函数</h3>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">Double</span><span class=\"token punctuation\">(</span>L <span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>LState<span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    lv <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">ToInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>             <span class=\"token comment\">/* get argument */</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    L<span class=\"token punctuation\">.</span><span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>lua<span class=\"token punctuation\">.</span><span class=\"token function\">LNumber</span><span class=\"token punctuation\">(</span>lv <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">/* push result */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">1</span>                     <span class=\"token comment\">/* number of results */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    L <span class=\"token operator\">:=</span> lua<span class=\"token punctuation\">.</span><span class=\"token function\">NewState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">defer</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    L<span class=\"token punctuation\">.</span><span class=\"token function\">SetGlobal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"double\"</span><span class=\"token punctuation\">,</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">NewFunction</span><span class=\"token punctuation\">(</span>Double<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">/* Original lua_setglobal uses stack... */</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   \t<span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">DoString</span><span class=\"token punctuation\">(</span><span class=\"token string\">`print(double(20))`</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>注册为 lua 函数之后，会变成一个 LGFunction 类型；</p>\n<p>支持协程中运行；</p>\n<h3 id=\"加载lua内置库的函数\"><a class=\"markdownIt-Anchor\" href=\"#加载lua内置库的函数\">#</a> 加载 lua 内置库的函数</h3>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    L <span class=\"token operator\">:=</span> lua<span class=\"token punctuation\">.</span><span class=\"token function\">NewState</span><span class=\"token punctuation\">(</span>lua<span class=\"token punctuation\">.</span>Options<span class=\"token punctuation\">&#123;</span>SkipOpenLibs<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">defer</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> pair <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        n <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        f lua<span class=\"token punctuation\">.</span>LGFunction</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span>lua<span class=\"token punctuation\">.</span>LoadLibName<span class=\"token punctuation\">,</span> lua<span class=\"token punctuation\">.</span>OpenPackage<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Must be first</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span>lua<span class=\"token punctuation\">.</span>BaseLibName<span class=\"token punctuation\">,</span> lua<span class=\"token punctuation\">.</span>OpenBase<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span>lua<span class=\"token punctuation\">.</span>TabLibName<span class=\"token punctuation\">,</span> lua<span class=\"token punctuation\">.</span>OpenTable<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">CallByParam</span><span class=\"token punctuation\">(</span>lua<span class=\"token punctuation\">.</span>P<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            Fn<span class=\"token punctuation\">:</span>      L<span class=\"token punctuation\">.</span><span class=\"token function\">NewFunction</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            NRet<span class=\"token punctuation\">:</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            Protect<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> lua<span class=\"token punctuation\">.</span><span class=\"token function\">LString</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">.</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">DoFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"main.lua\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"在go中创建一个lua的模块\"><a class=\"markdownIt-Anchor\" href=\"#在go中创建一个lua的模块\">#</a> 在 go 中创建一个 lua 的模块</h3>\n<ol>\n<li>\n<p>首先定义一组方法  类型为 map [string] lua.LGFuntion</p>\n</li>\n<li>\n<p>然后调用 SetFuncs  将函数表分配给一个 lua table，作为一个模块，获取到一个 LTable</p>\n</li>\n<li>\n<p>然后将模块 push 到栈</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">Loader</span><span class=\"token punctuation\">(</span>L <span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>LState<span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// register functions to the table</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    mod <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">SetFuncs</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">.</span><span class=\"token function\">NewTable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> exports<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// register other stuff</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    L<span class=\"token punctuation\">.</span><span class=\"token function\">SetField</span><span class=\"token punctuation\">(</span>mod<span class=\"token punctuation\">,</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> lua<span class=\"token punctuation\">.</span><span class=\"token function\">LString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"value\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// returns the module</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    L<span class=\"token punctuation\">.</span><span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>mod<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>通过 PreLoadModule（name,  注册方法）将模块注册到虚拟机中</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>L<span class=\"token punctuation\">.</span><span class=\"token function\">PreloadModule</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mymodule\"</span><span class=\"token punctuation\">,</span> mymodule<span class=\"token punctuation\">.</span>Loader<span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"在go中调用lua方法\"><a class=\"markdownIt-Anchor\" href=\"#在go中调用lua方法\">#</a> 在 go 中调用 lua 方法</h3>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">CallByParam</span><span class=\"token punctuation\">(</span>lua<span class=\"token punctuation\">.</span>P<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    Fn<span class=\"token punctuation\">:</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">GetGlobal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"double\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\t\t<span class=\"token comment\">//lua 方法名</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    NRet<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\t\t\t\t\t<span class=\"token comment\">// </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    Protect<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> lua<span class=\"token punctuation\">.</span><span class=\"token function\">LNumber</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>CallByParam 方法 第一个参数 lua.P 结构； 第二个参数 参数</li>\n<li>通过 lua.P 结构进行调用</li>\n<li>实际使用中 函数参数也可以使用提前设置全局变量的方式来实现</li>\n</ul>\n<h3 id=\"自定义类型\"><a class=\"markdownIt-Anchor\" href=\"#自定义类型\">#</a> 自定义类型</h3>\n<p>支持在 Go 中自定义新类型</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">type</span> Person <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    Name <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">const</span> luaPersonTypeName <span class=\"token operator\">=</span> <span class=\"token string\">\"person\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 注册类型</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">registerPersonType</span><span class=\"token punctuation\">(</span>L <span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>LState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    mt <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">NewTypeMetatable</span><span class=\"token punctuation\">(</span>luaPersonTypeName<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 新建一个元表</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    L<span class=\"token punctuation\">.</span><span class=\"token function\">SetGlobal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"person\"</span><span class=\"token punctuation\">,</span> mt<span class=\"token punctuation\">)</span>\t\t\t\t\t<span class=\"token comment\">// 元表设置为全局变量</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">// static attributes</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    L<span class=\"token punctuation\">.</span><span class=\"token function\">SetField</span><span class=\"token punctuation\">(</span>mt<span class=\"token punctuation\">,</span> <span class=\"token string\">\"new\"</span><span class=\"token punctuation\">,</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">NewFunction</span><span class=\"token punctuation\">(</span>newPerson<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 注册方法到元表中 静态放啊</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">// methods</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    L<span class=\"token punctuation\">.</span><span class=\"token function\">SetField</span><span class=\"token punctuation\">(</span>mt<span class=\"token punctuation\">,</span> <span class=\"token string\">\"__index\"</span><span class=\"token punctuation\">,</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">SetFuncs</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">.</span><span class=\"token function\">NewTable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> personMethods<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 注册方法到元表</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">// Constructor</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">newPerson</span><span class=\"token punctuation\">(</span>L <span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>LState<span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span>\t\t\t<span class=\"token comment\">//go 方法</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    person <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>Person<span class=\"token punctuation\">&#123;</span>L<span class=\"token punctuation\">.</span><span class=\"token function\">CheckString</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    ud <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">NewUserData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    ud<span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> person</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    L<span class=\"token punctuation\">.</span><span class=\"token function\">SetMetatable</span><span class=\"token punctuation\">(</span>ud<span class=\"token punctuation\">,</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">GetTypeMetatable</span><span class=\"token punctuation\">(</span>luaPersonTypeName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    L<span class=\"token punctuation\">.</span><span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>ud<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">// Checks whether the first lua argument is a *LUserData with *Person and returns this *Person.</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">checkPerson</span><span class=\"token punctuation\">(</span>L <span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>LState<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span>Person <span class=\"token punctuation\">&#123;</span>  <span class=\"token comment\">// 检查类型</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    ud <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">CheckUserData</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">if</span> v<span class=\"token punctuation\">,</span> ok <span class=\"token operator\">:=</span> ud<span class=\"token punctuation\">.</span>Value<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>Person<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> ok <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">return</span> v</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    L<span class=\"token punctuation\">.</span><span class=\"token function\">ArgError</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"person expected\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">var</span> personMethods <span class=\"token operator\">=</span> <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span>lua<span class=\"token punctuation\">.</span>LGFunction<span class=\"token punctuation\">&#123;</span>\t\t<span class=\"token comment\">// 方法表</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> personGetSetName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\">// Getter and setter for the Person#Name</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">personGetSetName</span><span class=\"token punctuation\">(</span>L <span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>LState<span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span>\t\t\t<span class=\"token comment\">// 属性的 Getter 和 Setter 在 lua 中通过 p:name () 调用</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    p <span class=\"token operator\">:=</span> <span class=\"token function\">checkPerson</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">if</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">GetTop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        p<span class=\"token punctuation\">.</span>Name <span class=\"token operator\">=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">CheckString</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    L<span class=\"token punctuation\">.</span><span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>lua<span class=\"token punctuation\">.</span><span class=\"token function\">LString</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    L <span class=\"token operator\">:=</span> lua<span class=\"token punctuation\">.</span><span class=\"token function\">NewState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">defer</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token function\">registerPersonType</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">DoString</span><span class=\"token punctuation\">(</span><span class=\"token string\">`\t\t\t\t\t\t</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        p = person.new(\"Steeve\")\t</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        print(p:name(\"新名字\")) --  </pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t\tprint(p:name())</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        p:name(\"Alice\")</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        print(p:name()) -- \"Alice\"</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    `</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"共享lua字节代码\"><a class=\"markdownIt-Anchor\" href=\"#共享lua字节代码\">#</a> 共享 lua 字节代码</h3>\n<p>调用 DoFile 将加载一个 Lua 脚本，将其编译为字节码，并在一个 LState 中运行字节码。</p>\n<p>如果你有多个 LState，它们都需要运行同一个脚本，你可以在它们之间共享字节码，这将节省内存。共享字节码是安全的，因为它是只读的，不能被 lua 脚本所改变。</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// CompileLua reads the passed lua file from disk and compiles it.</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">CompileLua</span><span class=\"token punctuation\">(</span>filePath <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>FunctionProto<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    file<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">defer</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    reader <span class=\"token operator\">:=</span> bufio<span class=\"token punctuation\">.</span><span class=\"token function\">NewReader</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    chunk<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> parse<span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>reader<span class=\"token punctuation\">,</span> filePath<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    proto<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> lua<span class=\"token punctuation\">.</span><span class=\"token function\">Compile</span><span class=\"token punctuation\">(</span>chunk<span class=\"token punctuation\">,</span> filePath<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">return</span> proto<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">// DoCompiledFile takes a FunctionProto, as returned by CompileLua, and runs it in the LState. It is equivalent</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">// to calling DoFile on the LState with the original source file.</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">DoCompiledFile</span><span class=\"token punctuation\">(</span>L <span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>LState<span class=\"token punctuation\">,</span> proto <span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>FunctionProto<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    lfunc <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">NewFunctionFromProto</span><span class=\"token punctuation\">(</span>proto<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    L<span class=\"token punctuation\">.</span><span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>lfunc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">return</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">PCall</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> lua<span class=\"token punctuation\">.</span>MultRet<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"go协程\"><a class=\"markdownIt-Anchor\" href=\"#go协程\">#</a> go 协程</h3>\n<p>LState 不是 goroutine-safe。建议每个 goroutine 使用一个 LState，并通过使用通道在 goroutine 之间通信。</p>\n<p>通道在 GopherLua 中由通道对象表示。而一个通道表提供了执行通道操作的函数。</p>\n<p>有些对象不能通过通道发送，因为它本身有非 goroutine 安全的对象。</p>\n<p>一个线程 (state)<br>\n 一个函数<br>\n一个用户数据<br>\n一个有元数据的表</p>\n",
            "tags": [
                "golang实验室"
            ]
        },
        {
            "id": "https://fanlu.top/2023/05/16/vben-admin%E6%8D%A2%E8%82%A4%E5%AE%9E%E7%8E%B0/",
            "url": "https://fanlu.top/2023/05/16/vben-admin%E6%8D%A2%E8%82%A4%E5%AE%9E%E7%8E%B0/",
            "title": "vben-admin换肤实现",
            "date_published": "2023-05-16T00:19:08.000Z",
            "content_html": "<p>最近在 github 上看到了一个后台管理的前端项目，使用了 vue3+ts+vite+ant-vue 的技术，看起来很不错，功能特别丰富，clone 下来发现代码也写的特别好，比我现在的小白代码根本不在同一个等级，因此想要学习一下。 个人觉得从一个功能抽丝剥茧来学习一个功能的写法可能会对自己的技术提高有帮助。</p>\n<p>项目中的侧边栏提供了超多的主题选项，可以丰富的变换主题。因此本文想分析一下这个换肤是如何实现的。</p>\n<p><img data-src=\"https://secure2.wostatic.cn/static/wGUf6UvBJUZVXfAPhrzaF/image.png?auth_key=1684196309-2jkBMzvREcZ21xSJjxnEvU-0-4173f6dd779469091bae7835b4c93aa7\" alt=\"\"></p>\n<h2 id=\"黑色亮色主题切换\"><a class=\"markdownIt-Anchor\" href=\"#黑色亮色主题切换\">#</a> 黑色 / 亮色主题切换</h2>\n<p>主题切换组件 AppDarkModeToggle.vue</p>\n<ul>\n<li>定义点击事件 toggleDarkMode\n<ol>\n<li>\n<p>调用设置黑色主题函数 setDarkMode</p>\n<p>修改 pinia 状态中的 dark 模式，并将变量存储到 localStorage 中</p>\n</li>\n<li>\n<p>调用 updateDarkTheme</p>\n<ul>\n<li>获取 htmlRoot dom 节点，即本项目应用的根节点</li>\n<li>判断根节点是否包含 dark class 定义</li>\n<li>如果是 dark\n<ul>\n<li>判断是否为生产模式，并加载 dark 主题 css（由 vite-plugin-theme 支持）</li>\n<li>将根节点的 data-teme 设置为 dark</li>\n<li>并添加 class 为 dark</li>\n</ul>\n</li>\n<li>如果不是 dark\n<ul>\n<li>将根节点 data-theme 设置为 light</li>\n<li>并且移除 dark class</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n</li>\n</ul>\n<pre><code class=\"language-Python\">这里修改data-theme为dark，利用了less中条件判断语句\n例如：\n\n  html[data-theme='dark'] &#123;\n    .@&#123;prefix-cls&#125; &#123;\n      border: 1px solid rgb(196 188 188);\n    &#125;\n  &#125;\n\nps：less还支持动态变量名，6666\n</code></pre>\n<pre><code>3. 调用updateHeaderBgColor修改header的背景色\n    - 判断是否为dark模式，获取到颜色，如果不是暗色，那就获取当前设置的颜色\n</code></pre>\n<p>color = appStore.getHeaderSetting.bgColor;<br>\n- 将获取到的颜色设置 css 变量  setCssVar</p>\n<pre><code class=\"language-JavaScript\">export function setCssVar(prop: string, val: any, dom = docEle) &#123;\n  console.log(prop,val)\n  dom.style.setProperty(prop, val);\n&#125;\n</code></pre>\n<pre><code>    - 计算得到hover颜色（亮度提高6），同样设置css变量\n\n        这里用到了自定义的颜色函数，我觉得很有用\n</code></pre>\n<pre><code class=\"language-TypeScript\">/**\n * 判断是否 十六进制颜色值.\n * 输入形式可为 #fff000 #f00\n *\n * @param   String  color   十六进制颜色值\n * @return  Boolean\n */\nexport function isHexColor(color: string) &#123;\n  const reg = /^#([0-9a-fA-F]&#123;3&#125;|[0-9a-fA-f]&#123;6&#125;)$/;\n  return reg.test(color);\n&#125;\n\n/**\n * RGB 颜色值转换为 十六进制颜色值.\n * r, g, 和 b 需要在 [0, 255] 范围内\n *\n * @return  String          类似#ff00ff\n * @param r\n * @param g\n * @param b\n */\nexport function rgbToHex(r: number, g: number, b: number) &#123;\n  // tslint:disable-next-line:no-bitwise\n  const hex = ((r &lt;&lt; 16) | (g &lt;&lt; 8) | b).toString(16);\n  return '#' + new Array(Math.abs(hex.length - 7)).join('0') + hex;\n&#125;\n\n/**\n * Transform a HEX color to its RGB representation\n * @param &#123;string&#125; hex The color to transform\n * @returns The RGB representation of the passed color\n */\nexport function hexToRGB(hex: string) &#123;\n  let sHex = hex.toLowerCase();\n  if (isHexColor(hex)) &#123;\n    if (sHex.length === 4) &#123;\n      let sColorNew = '#';\n      for (let i = 1; i &lt; 4; i += 1) &#123;\n        sColorNew += sHex.slice(i, i + 1).concat(sHex.slice(i, i + 1));\n      &#125;\n      sHex = sColorNew;\n    &#125;\n    const sColorChange: number[] = [];\n    for (let i = 1; i &lt; 7; i += 2) &#123;\n      sColorChange.push(parseInt('0x' + sHex.slice(i, i + 2)));\n    &#125;\n    return 'RGB(' + sColorChange.join(',') + ')';\n  &#125;\n  return sHex;\n&#125;\n\nexport function colorIsDark(color: string) &#123;\n  if (!isHexColor(color)) return;\n  const [r, g, b] = hexToRGB(color)\n    .replace(/(?:\\(|\\)|rgb|RGB)*/g, '')\n    .split(',')\n    .map((item) =&gt; Number(item));\n  return r * 0.299 + g * 0.578 + b * 0.114 &lt; 192;\n&#125;\n\n/**\n * Darkens a HEX color given the passed percentage\n * @param &#123;string&#125; color The color to process\n * @param &#123;number&#125; amount The amount to change the color by\n * @returns &#123;string&#125; The HEX representation of the processed color\n */\nexport function darken(color: string, amount: number) &#123;\n  color = color.indexOf('#') &gt;= 0 ? color.substring(1, color.length) : color;\n  amount = Math.trunc((255 * amount) / 100);\n  return `#$&#123;subtractLight(color.substring(0, 2), amount)&#125;$&#123;subtractLight(\n    color.substring(2, 4),\n    amount,\n  )&#125;$&#123;subtractLight(color.substring(4, 6), amount)&#125;`;\n&#125;\n\n/**\n * Lightens a 6 char HEX color according to the passed percentage\n * @param &#123;string&#125; color The color to change\n * @param &#123;number&#125; amount The amount to change the color by\n * @returns &#123;string&#125; The processed color represented as HEX\n */\nexport function lighten(color: string, amount: number) &#123;\n  color = color.indexOf('#') &gt;= 0 ? color.substring(1, color.length) : color;\n  amount = Math.trunc((255 * amount) / 100);\n  return `#$&#123;addLight(color.substring(0, 2), amount)&#125;$&#123;addLight(\n    color.substring(2, 4),\n    amount,\n  )&#125;$&#123;addLight(color.substring(4, 6), amount)&#125;`;\n&#125;\n\n/* Suma el porcentaje indicado a un color (RR, GG o BB) hexadecimal para aclararlo */\n/**\n * Sums the passed percentage to the R, G or B of a HEX color\n * @param &#123;string&#125; color The color to change\n * @param &#123;number&#125; amount The amount to change the color by\n * @returns &#123;string&#125; The processed part of the color\n */\nfunction addLight(color: string, amount: number) &#123;\n  const cc = parseInt(color, 16) + amount;\n  const c = cc &gt; 255 ? 255 : cc;\n  return c.toString(16).length &gt; 1 ? c.toString(16) : `0$&#123;c.toString(16)&#125;`;\n&#125;\n\n/**\n * Calculates luminance of an rgb color\n * @param &#123;number&#125; r red\n * @param &#123;number&#125; g green\n * @param &#123;number&#125; b blue\n */\nfunction luminanace(r: number, g: number, b: number) &#123;\n  const a = [r, g, b].map((v) =&gt; &#123;\n    v /= 255;\n    return v &lt;= 0.03928 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\n  &#125;);\n  return a[0] * 0.2126 + a[1] * 0.7152 + a[2] * 0.0722;\n&#125;\n\n/**\n * Calculates contrast between two rgb colors\n * @param &#123;string&#125; rgb1 rgb color 1\n * @param &#123;string&#125; rgb2 rgb color 2\n */\nfunction contrast(rgb1: string[], rgb2: number[]) &#123;\n  return (\n    (luminanace(~~rgb1[0], ~~rgb1[1], ~~rgb1[2]) + 0.05) /\n    (luminanace(rgb2[0], rgb2[1], rgb2[2]) + 0.05)\n  );\n&#125;\n\n/**\n * Determines what the best text color is (black or white) based con the contrast with the background\n * @param hexColor - Last selected color by the user\n */\nexport function calculateBestTextColor(hexColor: string) &#123;\n  const rgbColor = hexToRGB(hexColor.substring(1));\n  const contrastWithBlack = contrast(rgbColor.split(','), [0, 0, 0]);\n\n  return contrastWithBlack &gt;= 12 ? '#000000' : '#FFFFFF';\n&#125;\n\n/**\n * Subtracts the indicated percentage to the R, G or B of a HEX color\n * @param &#123;string&#125; color The color to change\n * @param &#123;number&#125; amount The amount to change the color by\n * @returns &#123;string&#125; The processed part of the color\n */\nfunction subtractLight(color: string, amount: number) &#123;\n  const cc = parseInt(color, 16) - amount;\n  const c = cc &lt; 0 ? 0 : cc;\n  return c.toString(16).length &gt; 1 ? c.toString(16) : `0$&#123;c.toString(16)&#125;`;\n&#125;\n\n</code></pre>\n<pre><code>    - updateSidebarBgColor  修改侧边栏颜色 原理同上\n</code></pre>\n<p>以上大概有几个关键点：</p>\n<ol>\n<li>充分利用 less 的用法\n<ul>\n<li>条件语句</li>\n<li>动态前缀变量名</li>\n</ul>\n</li>\n<li>利用 js 来修改原生 css 变量的颜色，同时计算悬浮颜色</li>\n<li>项目中大部分样式类名以前缀方式定义，主 less 中定义了一个 vben 为 namespace，在 less 中作为全局变量；而 designSetting 中定义了 prefixCls 在 ts 中作为全局变量。 他们存在这对应关系，因此需要同时修改才能起作用。</li>\n</ol>\n<h2 id=\"导航栏模式切换\"><a class=\"markdownIt-Anchor\" href=\"#导航栏模式切换\">#</a> 导航栏模式切换</h2>\n<blockquote>\n<p>导航栏模式分为了四种：</p>\n</blockquote>\n<p><img data-src=\"https://secure2.wostatic.cn/static/sPjnd9xQ7suquNPauh5Qqw/image.png?auth_key=1684196309-2o96KrtYmowc5t254R8edZ-0-bbe91f85e3201ce1060d94391f94427b\" alt=\"\"></p>\n<ol>\n<li>左边可折叠菜单，右边上部面包屑，下部内容</li>\n<li>上下布局，上部面包屑，下面左边菜单右边内容</li>\n<li>上下布局，上面菜单，下面内容</li>\n<li>左右布局，左边菜单点击展开子目录，右上方面包屑，下方内容</li>\n</ol>\n<p>右边的样式选项都是通过自定义的 Picker 组件来实现的，导航栏模式选择的是 TypePicker 组件，传入的方法是 baseHandler:</p>\n<pre><code class=\"language-Vue\"> &lt;TypePicker\n    menuTypeList=&#123;menuTypeList&#125;\n    handler=&#123;(item: typeof menuTypeList[0]) =&gt; &#123;\n      baseHandler(HandlerEnum.CHANGE_LAYOUT, &#123;\n        mode: item.mode,\n        type: item.type,\n        split: unref(getIsHorizontal) ? false : undefined,\n      &#125;);\n    &#125;&#125;\n    def=&#123;unref(getMenuType)&#125;\n  /&gt;\n</code></pre>\n<p>其中 menuTypeList 表示上方提到的四种模式，其定义如下：</p>\n<pre><code class=\"language-TypeScript\">export const menuTypeList = [\n  &#123;\n    title: t('layout.setting.menuTypeSidebar'),\n    mode: MenuModeEnum.INLINE,\n    type: MenuTypeEnum.SIDEBAR,\n  &#125;,\n  &#123;\n    title: t('layout.setting.menuTypeMix'),\n    mode: MenuModeEnum.INLINE,\n    type: MenuTypeEnum.MIX,\n  &#125;,\n\n  &#123;\n    title: t('layout.setting.menuTypeTopMenu'),\n    mode: MenuModeEnum.HORIZONTAL,\n    type: MenuTypeEnum.TOP_MENU,\n  &#125;,\n  &#123;\n    title: t('layout.setting.menuTypeMixSidebar'),\n    mode: MenuModeEnum.INLINE,\n    type: MenuTypeEnum.MIX_SIDEBAR,\n  &#125;,\n];\n</code></pre>\n<blockquote>\n<p>ps: 由样式定义来看，less 支持不同状态下，class 后面拼接字符串的样式，比如 &amp;–active</p>\n</blockquote>\n<p>调用 handler 函数：</p>\n<ol>\n<li>获取 appStore 配置信息</li>\n<li>根据传来的 mode 和 type 生成新的 menuSetting</li>\n<li>将新的配置更新到 pinia 全局配置中</li>\n<li>更新来的配置几乎每一个属性都封装为一个 computed</li>\n</ol>\n<pre><code class=\"language-TypeScript\">export interface MenuSetting &#123;\n  bgColor: string;\n  fixed: boolean;\n  collapsed: boolean;\n  siderHidden: boolean;\n  canDrag: boolean;\n  show: boolean;\n  hidden: boolean;\n  split: boolean;\n  menuWidth: number;\n  mode: MenuModeEnum;\n  type: MenuTypeEnum;\n  theme: ThemeEnum;\n  topMenuAlign: 'start' | 'center' | 'end';\n  trigger: TriggerEnum;\n  accordion: boolean;\n  closeMixSidebarOnChange: boolean;\n  collapsedShowTitle: boolean;\n  mixSideTrigger: MixSidebarTriggerEnum;\n  mixSideFixed: boolean;\n&#125;\n\n</code></pre>\n<p>全都定义在 useMenuSetting.ts 中，这是一个<strong>自定义 hook</strong></p>\n<h2 id=\"系统主题切换\"><a class=\"markdownIt-Anchor\" href=\"#系统主题切换\">#</a> 系统主题切换</h2>\n<p>自定义组件 ThemeColorPicker 实现，包含三个 prop</p>\n<ol>\n<li>颜色列表</li>\n<li>默认颜色 通过 getThemeColor 计算属性获取（真实来源自 pinia 中存储的 themeColor）** 默认值都配置在 src/projectSetting.ts 下面 **</li>\n<li>event，表示事件 ID</li>\n</ol>\n<p>通过点击事件，调用 baseHandle 修改全局配置；</p>\n<p>调用 generateColors 方法生成一组颜色，这组颜色的计算可以参考：</p>\n<pre><code class=\"language-TypeScript\">export function generateColors(&#123;\n  color = primaryColor,\n  mixLighten,\n  mixDarken,\n  tinycolor,\n&#125;: GenerateColorsParams) &#123;\n  const arr = new Array(19).fill(0);\n  const lightens = arr.map((_t, i) =&gt; &#123;\n    return mixLighten(color, i / 5);\n  &#125;);\n\n  const darkens = arr.map((_t, i) =&gt; &#123;\n    return mixDarken(color, i / 5);\n  &#125;);\n\n  const alphaColors = arr.map((_t, i) =&gt; &#123;\n    return tinycolor(color)\n      .setAlpha(i / 20)\n      .toRgbString();\n  &#125;);\n\n  const shortAlphaColors = alphaColors.map((item) =&gt; item.replace(/\\s/g, '').replace(/0\\./g, '.'));\n\n  const tinycolorLightens = arr\n    .map((_t, i) =&gt; &#123;\n      return tinycolor(color)\n        .lighten(i * 5)\n        .toHexString();\n    &#125;)\n    .filter((item) =&gt; item !== '#ffffff');\n\n  const tinycolorDarkens = arr\n    .map((_t, i) =&gt; &#123;\n      return tinycolor(color)\n        .darken(i * 5)\n        .toHexString();\n    &#125;)\n    .filter((item) =&gt; item !== '#000000');\n  return [\n    ...lightens,\n    ...darkens,\n    ...alphaColors,\n    ...shortAlphaColors,\n    ...tinycolorDarkens,\n    ...tinycolorLightens,\n  ].filter((item) =&gt; !item.includes('-'));\n&#125;\n</code></pre>\n<p>然后利用 vite-plugin-theme 方法替换样式变量</p>\n<h2 id=\"顶栏主题\"><a class=\"markdownIt-Anchor\" href=\"#顶栏主题\">#</a> 顶栏主题</h2>\n<ul>\n<li>\n<p>自定义组件 ThemeColorPicker</p>\n</li>\n<li>\n<p>调用 updateHeaderBgColor 方法</p>\n<p>首先判断是否为夜间模式，夜间模式不生效；</p>\n<p>然后修改 css 变量–header-bg-color</p>\n<p>修改悬浮颜色： const hoverColor = lighten (color!, 6); 修改 css 变量</p>\n<p>修改 headerSetting： 判断选择的颜色是否属于暗色，然后结合当前是否为暗色模式，判断设置是否生效</p>\n</li>\n</ul>\n<h2 id=\"菜单主题\"><a class=\"markdownIt-Anchor\" href=\"#菜单主题\">#</a> 菜单主题</h2>\n<p>同顶栏主题</p>\n<h2 id=\"最后\"><a class=\"markdownIt-Anchor\" href=\"#最后\">#</a> 最后</h2>\n<blockquote>\n<p>vben 这个项目比较大，功能可以说是非常丰富，也可以说时非常冗杂，想要啃下来非常困难。 看到一个博客专门分析 vben 的可以参考：</p>\n</blockquote>\n",
            "tags": [
                "前端搬砖指南"
            ]
        },
        {
            "id": "https://fanlu.top/2023/05/15/%E9%B8%A1%E6%AF%9B%E8%92%9C%E7%9A%AE%E5%91%A8%E5%88%8A-01/",
            "url": "https://fanlu.top/2023/05/15/%E9%B8%A1%E6%AF%9B%E8%92%9C%E7%9A%AE%E5%91%A8%E5%88%8A-01/",
            "title": "鸡毛蒜皮周刊-01",
            "date_published": "2023-05-15T14:53:53.000Z",
            "content_html": "<h2 id=\"人类群星闪耀时\"><a class=\"markdownIt-Anchor\" href=\"#人类群星闪耀时\">#</a> 人类群星闪耀时</h2>\n<p>作者茨威格选择了一些很有意思的历史时间进行文学叙述，文笔确实很好。 但是作为一个历史” 爱好者 “，始终无法相信这样过度的文学描写，这样总会导致历史失真。</p>\n<h2 id=\"家里的wifi\"><a class=\"markdownIt-Anchor\" href=\"#家里的wifi\">#</a> 家里的 wifi</h2>\n<p>上海电信默认光猫是路由模式，又接了一个小米路由器，网速总是不稳定，这周找师傅来改成了桥接模式，需要电信远程下发数据还挺麻烦。 但是改完之后，室内的台式机（当时装修脑子抽，没给台式机留网口），网络还是一般，怀疑是主板网卡的问题，于是买了一个绿联的即插网卡，插上搞定！</p>\n<h2 id=\"chrome插件\"><a class=\"markdownIt-Anchor\" href=\"#chrome插件\">#</a> chrome 插件</h2>\n<p>最近对 chrome 插件开发感兴趣。于是琢磨着写个小项目试试能做点啥。于是考虑做个统计网页浏览时间的小应用。简单来说，有两个步骤，</p>\n<ol>\n<li>获取到当前标签页的地址</li>\n<li>切换标签页时重新进行计时<br>\n网上的插件开发教程写的还行，但是对于 api 的教程太少了。于是找到了一个现成的插件项目叫做 “网费很贵”，对于我想要的功能它已经做的很完整了。于是扒了下它的源码【<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NoZWVwemgvdGltZXIvYmxvYi9tYWluL1JFQURNRS16aC5tZCVFMyU4MCU5MSVFMyU4MCU4Mg==\">https://github.com/sheepzh/timer/blob/main/README-zh.md】。</span> 项目代码十分优雅，一看就能甩我好几年的功力。<br>\n找到了几个关键 api：</li>\n</ol>\n<figure class=\"highlight ts\"><figcaption data-lang=\"TypeScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>chrome<span class=\"token punctuation\">.</span>tabs<span class=\"token punctuation\">.</span>onActivated<span class=\"token punctuation\">.</span>addListener  <span class=\"token comment\">// 添加切换 tab 的监听</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>chrome<span class=\"token punctuation\">.</span>browser<span class=\"token punctuation\">.</span>setBadgeText  <span class=\"token comment\">// 修改插件图标上的文字</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>chrome<span class=\"token punctuation\">.</span>tabs<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>tabId<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>tab<span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 根据 tabID 获取到标签的信息</span></pre></td></tr></table></figure><p>代码会放到 github 上。</p>\n<h2 id=\"docxtemplater\"><a class=\"markdownIt-Anchor\" href=\"#docxtemplater\">#</a> docxtemplater</h2>\n<p>工作中用到了前端导出 word 的操作，chatGpt 给我推荐了这个库<br>\n！[[Pasted image 20230228121250.png]]<br>\n 使用方法可以参照：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC83MDk0MTM5NDEzMjQ4MDgxOTI4\">前端使用 docxtemplater 导出 word 文档最佳实践 - 掘金 (juejin.cn)</span><br>\n 这个库的地址在：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL29wZW4teG1sLXRlbXBsYXRpbmcvZG9jeHRlbXBsYXRlcg==\">open-xml-templating/docxtemplater: Generate docx, pptx, and xlsx from templates (Word, Powerpoint and Excel documents), from Node.js, the Browser and the command line / Demo: https://www.docxtemplater.com/demo. #docx #office #generator #templating #report #json #generate #generation #template #create #pptx #docx #xlsx #react #vuejs #angularjs #browser #typescript #image #html #table #chart (github.com)</span><br>\n 使用下来，感觉很强大的一个库，支持模板渲染、循环数据渲染、表格循环渲染。</p>\n<h2 id=\"诡秘之主\"><a class=\"markdownIt-Anchor\" href=\"#诡秘之主\">#</a> 诡秘之主</h2>\n<p>这是一个在各种排名都很高的网文，我看了几十章，实在看不下去了，节奏太慢了，看网文的目的是放松和休息大脑，实在不想费劲阅读。<br>\n但是打开起点，看到它在第一名，还是继续看下去吧。</p>\n<h2 id=\"ppchart\"><a class=\"markdownIt-Anchor\" href=\"#ppchart\">#</a> PPChart</h2>\n<p>用 echarts 总觉得调样式很麻烦，这个网站不错，可以看到不少好看的效果，以后可以用来参考（拷贝）。😲<br>\n<span class=\"exturl\" data-url=\"aHR0cDovL3BwY2hhcnQuY29tLyMv\">PPChart - 让图表更简单</span><br>\n！[[Pasted image 20230301164049.png]]<br>\n 同类型的网站还有：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWFrZWFwaWUuY24vZWNoYXJ0c19jYXRlZ29yeS9zZXJpZXMtYmFy\">series-bar 柱状图 - makeapie echarts 图表可视化案例</span></p>\n<h2 id=\"nas赚钱\"><a class=\"markdownIt-Anchor\" href=\"#nas赚钱\">#</a> nas 赚钱</h2>\n<p>在极空间 z4s 上打开了迅雷的网心云插件，用闲置的带宽做 pcdn 赚钱，目前几天下来，每天 5 毛钱。可惜没有公网 ip 不然应该会高一点，现在好像还不够 nas 的电费。</p>\n",
            "tags": [
                "鸡毛蒜皮周刊"
            ]
        }
    ]
}