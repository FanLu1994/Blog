{
    "version": "https://jsonfeed.org/version/1",
    "title": "何妨吟啸且徐行 • All posts by \"前端\" category",
    "description": "",
    "home_page_url": "https://fanlu.top",
    "items": [
        {
            "id": "https://fanlu.top/2023/08/23/%E5%89%8D%E7%AB%AF/rrweb%E4%BD%BF%E7%94%A8/",
            "url": "https://fanlu.top/2023/08/23/%E5%89%8D%E7%AB%AF/rrweb%E4%BD%BF%E7%94%A8/",
            "title": "rrweb使用",
            "date_published": "2023-08-23T15:09:10.000Z",
            "content_html": "<h2 id=\"介绍\"><a class=\"markdownIt-Anchor\" href=\"#介绍\">#</a> 介绍</h2>\n<p>rrweb 是一种通过记录页面 dom 元素的变化，以及鼠标或者键盘输入的变化，来实现 web 操作的录制回放的功能。<br>\n官网在这里：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnJ3ZWIuaW8v\">rrweb</span><br>\n 源码在这里：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Jyd2ViLWlvL3Jyd2Vi\">https://github.com/rrweb-io/rrweb</span></p>\n<h2 id=\"在vue中使用\"><a class=\"markdownIt-Anchor\" href=\"#在vue中使用\">#</a> 在 vue 中使用</h2>\n<h3 id=\"新建vue3项目\"><a class=\"markdownIt-Anchor\" href=\"#新建vue3项目\">#</a> 新建 vue3 项目</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-g</span> @vue/cli</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>vue create rrweb-vue-demo</pre></td></tr></table></figure><h3 id=\"创建两个路由页面\"><a class=\"markdownIt-Anchor\" href=\"#创建两个路由页面\">#</a> 创建两个路由页面</h3>\n<p>分别用来录制操作和回放操作</p>\n<figure class=\"highlight ts\"><figcaption data-lang=\"TypeScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> Router <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue-router\"</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> routes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span>path<span class=\"token operator\">:</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>component<span class=\"token operator\">:</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"../Record.vue\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span> path<span class=\"token operator\">:</span> <span class=\"token string\">'/play'</span><span class=\"token punctuation\">,</span> component<span class=\"token operator\">:</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"../Play.vue\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> Router<span class=\"token punctuation\">.</span><span class=\"token function\">createRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">// 4. 内部提供了 history 模式的实现。为了简单起见，我们在这里使用 hash 模式。  </span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    history<span class=\"token operator\">:</span> Router<span class=\"token punctuation\">.</span><span class=\"token function\">createWebHashHistory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    routes<span class=\"token punctuation\">,</span> <span class=\"token comment\">// `routes: routes` 的缩写  </span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"录制和播放\"><a class=\"markdownIt-Anchor\" href=\"#录制和播放\">#</a> 录制和播放</h3>\n<h3 id=\"安装rrweb\"><a class=\"markdownIt-Anchor\" href=\"#安装rrweb\">#</a> 安装 rrweb</h3>\n<pre><code>npm install rrweb rrweb-player\n</code></pre>\n<h3 id=\"录制\"><a class=\"markdownIt-Anchor\" href=\"#录制\">#</a> 录制</h3>\n<p>这里录制 20s 自动停止，你也可以改成手动停止</p>\n<pre><code class=\"language-vue\">&lt;template&gt;  \n  &lt;button @click=&quot;startRecord&quot;&gt;开启记录&lt;/button&gt;  \n  &lt;HelloWorld msg=&quot;Vite + Vue&quot; /&gt;  \n  &lt;button @click=&quot;gotoPlay&quot;&gt;前往回放&lt;/button&gt;  \n&lt;/template&gt;  \n  \n&lt;script setup  lang=&quot;ts&quot;&gt;  \nimport HelloWorld from './components/HelloWorld.vue'  \nimport * as rrweb from &quot;rrweb&quot;;  \nimport &#123;useRouter&#125; from &quot;vue-router&quot;;  \nconst startRecord = () =&gt; &#123;  \n  //record() 方法启动录制  \n  //stopFn为暂停录制的方法  \n  let stopFn = rrweb.record(&#123;  \n    //12秒后停止页面的录制，如果想一直录得话可以去掉。  \n    emit(event) &#123;  \n      setTimeout(() =&gt; &#123;  \n        stopFn();  \n      &#125;, 20000);  \n      // 用任意方式存  储 event      // store.commit(&quot;updateEvents&quot;, &#123; event: event &#125;);      let eventList: any[] = JSON.parse(localStorage.getItem(&quot;events&quot;))  \n      if (eventList == null)&#123;  \n        eventList = [event]  \n      &#125;else&#123;  \n        eventList.push(event)  \n      &#125;  \n      localStorage.setItem(&quot;events&quot;,JSON.stringify(eventList))  \n  \n      // lo  \n      console.log(event)  \n    &#125;,  \n  &#125;);  \n  console.log(&quot;开启记录&quot;)  \n&#125;;  \n  \nconst route = useRouter()  \nconst gotoPlay = ()=&gt;&#123;  \n  \n  console.log(route)  \n  route.push(&quot;/play&quot;)  \n&#125;  \n  \n&lt;/script&gt;  \n  \n&lt;style scoped&gt;  \n  \n&lt;/style&gt;\n</code></pre>\n<h3 id=\"回放\"><a class=\"markdownIt-Anchor\" href=\"#回放\">#</a> 回放</h3>\n<pre><code class=\"language-vue\">&lt;template&gt;  \n  &lt;button @click=&quot;startPlay&quot;&gt;回放&lt;/button&gt;  \n  &lt;div class=&quot;counte&quot;&gt;  \n    &lt;div id=&quot;playback&quot;&gt;&lt;/div&gt;  \n  &lt;/div&gt;&lt;/template&gt;  \n  \n&lt;script lang=&quot;ts&quot; setup&gt;  \nimport rrwebPlayer from &quot;rrweb-player&quot;;  \nimport &quot;rrweb-player/dist/style.css&quot;  \nimport &#123;ref&#125; from &quot;vue&quot;;  \n  \nconst player = ref(null)  \nconst startPlay = ()=&gt;&#123;  \n  const events = JSON.parse(localStorage.getItem(&quot;events&quot;))  \n  player.value = new rrwebPlayer(&#123;  \n    target: document.getElementById(&quot;playback&quot;),  \n    props:&#123;  \n      events:events,  \n      speedOption:[1,2,5,10]  \n    &#125;  \n  &#125;)  \n&#125;  \n  \n&lt;/script&gt;  \n  \n&lt;style scoped&gt;  \n  \n&lt;/style&gt;\n</code></pre>\n<h2 id=\"用途\"><a class=\"markdownIt-Anchor\" href=\"#用途\">#</a> 用途</h2>\n<h3 id=\"自动化测试\"><a class=\"markdownIt-Anchor\" href=\"#自动化测试\">#</a> 自动化测试</h3>\n<p>对于 web 的项目，可以预先录制一份操作数据。<br>\n然后测试时通过回放操作来进行回放。<br>\n不过如何发现测试中的错误，我还没有深入研究。<br>\n当然，如果要进行自动化测试，前端还有很多自动化的工具可以使用，这个未必好用。</p>\n<h3 id=\"bug复现\"><a class=\"markdownIt-Anchor\" href=\"#bug复现\">#</a> bug 复现</h3>\n<p>这个应该是 rrweb 最重要的功能。<br>\n线上如果出现 bug，可以利用 rrweb 录制的结果去回放 bug 现场。什么时机判断出现了 bug 呢？可以让用户一键上报，也可以进行埋点，发现问题就自动上报。</p>\n<h3 id=\"操作说明\"><a class=\"markdownIt-Anchor\" href=\"#操作说明\">#</a> 操作说明</h3>\n<p>一些需要教育用户的复杂操作，可以通过 rrweb 录制一份操作指南，让用户去观看学习。</p>\n<h3 id=\"其他\"><a class=\"markdownIt-Anchor\" href=\"#其他\">#</a> 其他</h3>\n<p>其他</p>\n<h2 id=\"注意事项\"><a class=\"markdownIt-Anchor\" href=\"#注意事项\">#</a> ！！ 注意事项</h2>\n<p>因为回放的原理是通过 iframe 加载网页，来回放操作，如果录制时和回放时的内容不一样，那就 game over 了</p>\n",
            "tags": [
                "前端",
                "工具"
            ]
        },
        {
            "id": "https://fanlu.top/2023/08/23/%E5%89%8D%E7%AB%AF/lottielab%E5%8A%A8%E7%94%BB%E5%BA%93/",
            "url": "https://fanlu.top/2023/08/23/%E5%89%8D%E7%AB%AF/lottielab%E5%8A%A8%E7%94%BB%E5%BA%93/",
            "title": "lottielab动画库",
            "date_published": "2023-08-23T15:07:29.000Z",
            "content_html": "<h2 id=\"lottie\"><a class=\"markdownIt-Anchor\" href=\"#lottie\">#</a> lottie</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9haXJibmIuZGVzaWduL2xvdHRpZS8=\">lottie</span> 是 aribnb 开发的一个面向 web 或者移动平台的动画编辑和播放库。<br>\n编辑的动画会生成一个 json 文件，然后你的项目中要集成 lottie 的库，加载到这个 json 文件，然后可以进行动画的播放</p>\n<h2 id=\"lottiefiles\"><a class=\"markdownIt-Anchor\" href=\"#lottiefiles\">#</a> lottieFiles</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sb3R0aWVmaWxlcy5jb20vZmVhdHVyZWQ=\">lottieFiles</span> 是一个 lottie 托管库。包含内容有：</p>\n<ul>\n<li>大量的其他艺术家的动画作品</li>\n<li>托管自己的动画库的平台，可以通过上传方式上传 json</li>\n<li>可以在在线制作 lottie 动画 -》<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lZGl0b3IubG90dGllZmlsZXMuY29tLw==\">lottie-editor</span></li>\n</ul>\n<h2 id=\"lottielab\"><a class=\"markdownIt-Anchor\" href=\"#lottielab\">#</a> lottielab</h2>\n<p>这是一个更好用的 lottie 动画编辑器。<br>\n地址： <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubG90dGllbGFiLmNvbS8=\">https://www.lottielab.com/</span><br>\n 操作方式很像视频编辑器操作。</p>\n<ul>\n<li>左侧可以添加元素物体</li>\n<li>右侧调整物体属性</li>\n<li>下方时间轴可以拖拽调整或者双击添加关键帧<br>\n更加丰富的玩法需要自己去探索了。</li>\n</ul>\n<p>做好的动画可以导出为 json、mp4、gif，非常方便。</p>\n",
            "tags": [
                "前端",
                "动画",
                "工具"
            ]
        },
        {
            "id": "https://fanlu.top/2023/07/16/%E5%89%8D%E7%AB%AF/vue-golang-webassembly%E5%88%9D%E4%BD%93%E9%AA%8C/",
            "url": "https://fanlu.top/2023/07/16/%E5%89%8D%E7%AB%AF/vue-golang-webassembly%E5%88%9D%E4%BD%93%E9%AA%8C/",
            "title": "vue-golang-webassembly初体验",
            "date_published": "2023-07-16T04:44:21.000Z",
            "content_html": "<h1 id=\"golang-部分\"><a class=\"markdownIt-Anchor\" href=\"#golang-部分\">#</a> golang 部分</h1>\n<blockquote>\n<p>参考 https://geektutu.com/post/quick-go-wasm.html</p>\n</blockquote>\n<h2 id=\"开发\"><a class=\"markdownIt-Anchor\" href=\"#开发\">#</a> 开发</h2>\n<pre><code>package main  \n  \nimport &quot;syscall/js&quot;  //  goland可能会报错，忽略即可\n  \nfunc main() &#123;  \n   alert := js.Global().Get(&quot;alert&quot;)  \n   alert.Invoke(&quot;Hello World!&quot;)  \n&#125;\n</code></pre>\n<h2 id=\"编译\"><a class=\"markdownIt-Anchor\" href=\"#编译\">#</a> 编译</h2>\n<p>不能用 <code>go build</code>  直接编译<br>\n windows 下面可以在 git bash 窗口编译</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token assign-left variable\">GOOS</span><span class=\"token operator\">=</span>js <span class=\"token assign-left variable\">GOARCH</span><span class=\"token operator\">=</span>wasm go build <span class=\"token parameter variable\">-o</span> static/main.wasm</pre></td></tr></table></figure><p>编译后，会在项目目录下生成 static/main.wasm</p>\n<h2 id=\"vue部分\"><a class=\"markdownIt-Anchor\" href=\"#vue部分\">#</a> vue 部分</h2>\n<h3 id=\"创建项目\"><a class=\"markdownIt-Anchor\" href=\"#创建项目\">#</a> 创建项目</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> init vite vue-wasm</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token builtin class-name\">cd</span> vue-wasm</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token function\">npm</span> <span class=\"token function\">install</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token function\">npm</span> run dev</pre></td></tr></table></figure><h3 id=\"引入wasm\"><a class=\"markdownIt-Anchor\" href=\"#引入wasm\">#</a> 引入 wasm</h3>\n<ol>\n<li>把 wasm_exec.js (注意有不同的版本，报错了可以换版本) 以及 main.wasm 文件复制到 vue 项目下 /static</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// Copyright 2018 The Go Authors. All rights reserved.  </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// Use of this source code is governed by a BSD-style  </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// license that can be found in the LICENSE file.  </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token comment\">// Map multiple JavaScript environments to a single common API,  </span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token comment\">// preferring web standards over Node.js API.   //   // Environments considered:   // - Browsers   // - Node.js   // - Electron   // - Parcel   // - Webpack  </span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> global <span class=\"token operator\">!==</span> <span class=\"token string\">\"undefined\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token comment\">// global already exists  </span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> window <span class=\"token operator\">!==</span> <span class=\"token string\">\"undefined\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      window<span class=\"token punctuation\">.</span>global <span class=\"token operator\">=</span> window<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> self <span class=\"token operator\">!==</span> <span class=\"token string\">\"undefined\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      self<span class=\"token punctuation\">.</span>global <span class=\"token operator\">=</span> self<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cannot export Go (neither global, window nor self is defined)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>global<span class=\"token punctuation\">.</span>require <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> require <span class=\"token operator\">!==</span> <span class=\"token string\">\"undefined\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      global<span class=\"token punctuation\">.</span>require <span class=\"token operator\">=</span> require<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>global<span class=\"token punctuation\">.</span>fs <span class=\"token operator\">&amp;&amp;</span> global<span class=\"token punctuation\">.</span>require<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fs\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> fs <span class=\"token operator\">===</span> <span class=\"token string\">\"object\"</span> <span class=\"token operator\">&amp;&amp;</span> fs <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length <span class=\"token operator\">!==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>         global<span class=\"token punctuation\">.</span>fs <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>   <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">enosys</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token keyword\">const</span> err <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"not implemented\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      err<span class=\"token punctuation\">.</span>code <span class=\"token operator\">=</span> <span class=\"token string\">\"ENOSYS\"</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token keyword\">return</span> err<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"35\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>global<span class=\"token punctuation\">.</span>fs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      <span class=\"token keyword\">let</span> outputBuf <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>      global<span class=\"token punctuation\">.</span>fs <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"38\"></td><td><pre>         <span class=\"token literal-property property\">constants</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token constant\">O_WRONLY</span><span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">O_RDWR</span><span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">O_CREAT</span><span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">O_TRUNC</span><span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">O_APPEND</span><span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">O_EXCL</span><span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// unused  </span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>         <span class=\"token function\">writeSync</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fd<span class=\"token punctuation\">,</span> buf</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            outputBuf <span class=\"token operator\">+=</span> decoder<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token keyword\">const</span> nl <span class=\"token operator\">=</span> outputBuf<span class=\"token punctuation\">.</span><span class=\"token function\">lastIndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nl <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"43\"></td><td><pre>               console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>outputBuf<span class=\"token punctuation\">.</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> nl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"44\"></td><td><pre>               outputBuf <span class=\"token operator\">=</span> outputBuf<span class=\"token punctuation\">.</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span>nl <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token keyword\">return</span> buf<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"47\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"48\"></td><td><pre>         <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fd<span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">,</span> offset<span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>offset <span class=\"token operator\">!==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> length <span class=\"token operator\">!==</span> buf<span class=\"token punctuation\">.</span>length <span class=\"token operator\">||</span> position <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"50\"></td><td><pre>               <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"51\"></td><td><pre>               <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token keyword\">const</span> n <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">writeSync</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"54\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"55\"></td><td><pre>         <span class=\"token function\">chmod</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> mode<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"56\"></td><td><pre>         <span class=\"token function\">chown</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> uid<span class=\"token punctuation\">,</span> gid<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"57\"></td><td><pre>         <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fd<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"58\"></td><td><pre>         <span class=\"token function\">fchmod</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fd<span class=\"token punctuation\">,</span> mode<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"59\"></td><td><pre>         <span class=\"token function\">fchown</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fd<span class=\"token punctuation\">,</span> uid<span class=\"token punctuation\">,</span> gid<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"60\"></td><td><pre>         <span class=\"token function\">fstat</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fd<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"61\"></td><td><pre>         <span class=\"token function\">fsync</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fd<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"62\"></td><td><pre>         <span class=\"token function\">ftruncate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fd<span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"63\"></td><td><pre>         <span class=\"token function\">lchown</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> uid<span class=\"token punctuation\">,</span> gid<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"64\"></td><td><pre>         <span class=\"token function\">link</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> link<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"65\"></td><td><pre>         <span class=\"token function\">lstat</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"66\"></td><td><pre>         <span class=\"token function\">mkdir</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> perm<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"67\"></td><td><pre>         <span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> flags<span class=\"token punctuation\">,</span> mode<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"68\"></td><td><pre>         <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fd<span class=\"token punctuation\">,</span> buffer<span class=\"token punctuation\">,</span> offset<span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"69\"></td><td><pre>         <span class=\"token function\">readdir</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"70\"></td><td><pre>         <span class=\"token function\">readlink</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"71\"></td><td><pre>         <span class=\"token function\">rename</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">from<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"72\"></td><td><pre>         <span class=\"token function\">rmdir</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"73\"></td><td><pre>         <span class=\"token function\">stat</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"74\"></td><td><pre>         <span class=\"token function\">symlink</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> link<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"75\"></td><td><pre>         <span class=\"token function\">truncate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"76\"></td><td><pre>         <span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"77\"></td><td><pre>         <span class=\"token function\">utimes</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> atime<span class=\"token punctuation\">,</span> mtime<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"78\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"79\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"80\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"81\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>global<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"82\"></td><td><pre>      global<span class=\"token punctuation\">.</span>process <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"83\"></td><td><pre>         <span class=\"token function\">getuid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"84\"></td><td><pre>         <span class=\"token function\">getgid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"85\"></td><td><pre>         <span class=\"token function\">geteuid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"86\"></td><td><pre>         <span class=\"token function\">getegid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"87\"></td><td><pre>         <span class=\"token function\">getgroups</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">throw</span> <span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"88\"></td><td><pre>         <span class=\"token literal-property property\">pid</span><span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"89\"></td><td><pre>         <span class=\"token literal-property property\">ppid</span><span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"90\"></td><td><pre>         <span class=\"token function\">umask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">throw</span> <span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"91\"></td><td><pre>         <span class=\"token function\">cwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">throw</span> <span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"92\"></td><td><pre>         <span class=\"token function\">chdir</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">throw</span> <span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"93\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"94\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"95\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"96\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>global<span class=\"token punctuation\">.</span>crypto <span class=\"token operator\">&amp;&amp;</span> global<span class=\"token punctuation\">.</span>require<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"97\"></td><td><pre>      <span class=\"token keyword\">const</span> nodeCrypto <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"crypto\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"98\"></td><td><pre>      global<span class=\"token punctuation\">.</span>crypto <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"99\"></td><td><pre>         <span class=\"token function\">getRandomValues</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"100\"></td><td><pre>            nodeCrypto<span class=\"token punctuation\">.</span><span class=\"token function\">randomFillSync</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"101\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"102\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"103\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"104\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>global<span class=\"token punctuation\">.</span>crypto<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"105\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"global.crypto is not available, polyfill required (getRandomValues only)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"106\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"107\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"108\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>global<span class=\"token punctuation\">.</span>performance<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"109\"></td><td><pre>      global<span class=\"token punctuation\">.</span>performance <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"110\"></td><td><pre>         <span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"111\"></td><td><pre>            <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>sec<span class=\"token punctuation\">,</span> nsec<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span><span class=\"token function\">hrtime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"112\"></td><td><pre>            <span class=\"token keyword\">return</span> sec <span class=\"token operator\">*</span> <span class=\"token number\">1000</span> <span class=\"token operator\">+</span> nsec <span class=\"token operator\">/</span> <span class=\"token number\">1000000</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"113\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"114\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"115\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"116\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"117\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>global<span class=\"token punctuation\">.</span>TextEncoder <span class=\"token operator\">&amp;&amp;</span> global<span class=\"token punctuation\">.</span>require<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"118\"></td><td><pre>      global<span class=\"token punctuation\">.</span>TextEncoder <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"util\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>TextEncoder<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"119\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"120\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>global<span class=\"token punctuation\">.</span>TextEncoder<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"121\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"global.TextEncoder is not available, polyfill required\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"122\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"123\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"124\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>global<span class=\"token punctuation\">.</span>TextDecoder <span class=\"token operator\">&amp;&amp;</span> global<span class=\"token punctuation\">.</span>require<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"125\"></td><td><pre>      global<span class=\"token punctuation\">.</span>TextDecoder <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"util\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>TextDecoder<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"126\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"127\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>global<span class=\"token punctuation\">.</span>TextDecoder<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"128\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"global.TextDecoder is not available, polyfill required\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"129\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"130\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"131\"></td><td><pre>   <span class=\"token comment\">// End of polyfills for common API.  </span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"133\"></td><td><pre>   <span class=\"token keyword\">const</span> encoder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextEncoder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"134\"></td><td><pre>   <span class=\"token keyword\">const</span> decoder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextDecoder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"135\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"136\"></td><td><pre>   global<span class=\"token punctuation\">.</span>Go <span class=\"token operator\">=</span> <span class=\"token keyword\">class</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"137\"></td><td><pre>      <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"138\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>argv <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"js\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"139\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>env <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"140\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exit</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">code</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"141\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>code <span class=\"token operator\">!==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"142\"></td><td><pre>               console<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"exit code:\"</span><span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"143\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"144\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"145\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_exitPromise <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"146\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_resolveExitPromise <span class=\"token operator\">=</span> resolve<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"147\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"148\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_pendingEvent <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"149\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scheduledTimeouts <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"150\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_nextCallbackTimeoutID <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"151\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"152\"></td><td><pre>         <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">setInt64</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">addr<span class=\"token punctuation\">,</span> v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"153\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint32</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"154\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint32</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>v <span class=\"token operator\">/</span> <span class=\"token number\">4294967296</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"155\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"156\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"157\"></td><td><pre>         <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getInt64</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">addr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"158\"></td><td><pre>            <span class=\"token keyword\">const</span> low <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">getUint32</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"159\"></td><td><pre>            <span class=\"token keyword\">const</span> high <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">getInt32</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"160\"></td><td><pre>            <span class=\"token keyword\">return</span> low <span class=\"token operator\">+</span> high <span class=\"token operator\">*</span> <span class=\"token number\">4294967296</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"161\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"162\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"163\"></td><td><pre>         <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">loadValue</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">addr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"164\"></td><td><pre>            <span class=\"token keyword\">const</span> f <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">getFloat64</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"165\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>f <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"166\"></td><td><pre>               <span class=\"token keyword\">return</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"167\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"168\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"169\"></td><td><pre>               <span class=\"token keyword\">return</span> f<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"170\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"171\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"172\"></td><td><pre>            <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">getUint32</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"173\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_values<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"174\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"175\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"176\"></td><td><pre>         <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">storeValue</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">addr<span class=\"token punctuation\">,</span> v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"177\"></td><td><pre>            <span class=\"token keyword\">const</span> nanHead <span class=\"token operator\">=</span> <span class=\"token number\">0x7FF80000</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"178\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"179\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> v <span class=\"token operator\">===</span> <span class=\"token string\">\"number\"</span> <span class=\"token operator\">&amp;&amp;</span> v <span class=\"token operator\">!==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"180\"></td><td><pre>               <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"181\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint32</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> nanHead<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"182\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint32</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"183\"></td><td><pre>                  <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>               <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"184\"></td><td><pre>               <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat64</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"185\"></td><td><pre>               <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"186\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"187\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>v <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"188\"></td><td><pre>               <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat64</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"189\"></td><td><pre>               <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"190\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"191\"></td><td><pre>            <span class=\"token keyword\">let</span> id <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_ids<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"192\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>id <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"193\"></td><td><pre>               id <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_idPool<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"194\"></td><td><pre>               <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>id <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"195\"></td><td><pre>                  id <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_values<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"196\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"197\"></td><td><pre>               <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_values<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"198\"></td><td><pre>               <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_goRefCounts<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"199\"></td><td><pre>               <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_ids<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"200\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"201\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_goRefCounts<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"202\"></td><td><pre>            <span class=\"token keyword\">let</span> typeFlag <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"203\"></td><td><pre>            <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> v<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"204\"></td><td><pre>               <span class=\"token keyword\">case</span> <span class=\"token string\">\"object\"</span><span class=\"token operator\">:</span>  </pre></td></tr><tr><td data-num=\"205\"></td><td><pre>                  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>v <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"206\"></td><td><pre>                     typeFlag <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"207\"></td><td><pre>                  <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"208\"></td><td><pre>                  <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"209\"></td><td><pre>               <span class=\"token keyword\">case</span> <span class=\"token string\">\"string\"</span><span class=\"token operator\">:</span>  </pre></td></tr><tr><td data-num=\"210\"></td><td><pre>                  typeFlag <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"211\"></td><td><pre>                  <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>               <span class=\"token keyword\">case</span> <span class=\"token string\">\"symbol\"</span><span class=\"token operator\">:</span>  </pre></td></tr><tr><td data-num=\"212\"></td><td><pre>                  typeFlag <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"213\"></td><td><pre>                  <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>               <span class=\"token keyword\">case</span> <span class=\"token string\">\"function\"</span><span class=\"token operator\">:</span>  </pre></td></tr><tr><td data-num=\"214\"></td><td><pre>                  typeFlag <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"215\"></td><td><pre>                  <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"216\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint32</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> nanHead <span class=\"token operator\">|</span> typeFlag<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"217\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint32</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"218\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"219\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"220\"></td><td><pre>         <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">loadSlice</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">addr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"221\"></td><td><pre>            <span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token function\">getInt64</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"222\"></td><td><pre>            <span class=\"token keyword\">const</span> len <span class=\"token operator\">=</span> <span class=\"token function\">getInt64</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"223\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">,</span> len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"224\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"225\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"226\"></td><td><pre>         <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">loadSliceOfValues</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">addr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"227\"></td><td><pre>            <span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token function\">getInt64</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"228\"></td><td><pre>            <span class=\"token keyword\">const</span> len <span class=\"token operator\">=</span> <span class=\"token function\">getInt64</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"229\"></td><td><pre>            <span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span>len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"230\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"231\"></td><td><pre>               a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>array <span class=\"token operator\">+</span> i <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"232\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"233\"></td><td><pre>            <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"234\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"235\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"236\"></td><td><pre>         <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">loadString</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">addr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"237\"></td><td><pre>            <span class=\"token keyword\">const</span> saddr <span class=\"token operator\">=</span> <span class=\"token function\">getInt64</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"238\"></td><td><pre>            <span class=\"token keyword\">const</span> len <span class=\"token operator\">=</span> <span class=\"token function\">getInt64</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"239\"></td><td><pre>            <span class=\"token keyword\">return</span> decoder<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">DataView</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">,</span> saddr<span class=\"token punctuation\">,</span> len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"240\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"241\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"242\"></td><td><pre>         <span class=\"token keyword\">const</span> timeOrigin <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> performance<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"243\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>importObject <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"244\"></td><td><pre>            <span class=\"token literal-property property\">go</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"245\"></td><td><pre>               <span class=\"token comment\">// Go's SP does not change as long as no Go code is running. Some operations (e.g. calls, getters and setters)  </span></pre></td></tr><tr><td data-num=\"246\"></td><td><pre>               <span class=\"token comment\">// may synchronously trigger a Go event handler. This makes Go code get executed in the middle of the imported               // function. A goroutine can switch to a new stack if the current stack is too small (see morestack function).               // This changes the SP, thus we have to update the SP used by the imported function.  </span></pre></td></tr><tr><td data-num=\"247\"></td><td><pre>               <span class=\"token comment\">// func wasmExit(code int32)               \"runtime.wasmExit\": (sp) => &#123;  </span></pre></td></tr><tr><td data-num=\"248\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"249\"></td><td><pre>                  <span class=\"token keyword\">const</span> code <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">getInt32</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"250\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>exited <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"251\"></td><td><pre>                  <span class=\"token keyword\">delete</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"252\"></td><td><pre>                  <span class=\"token keyword\">delete</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_values<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"253\"></td><td><pre>                  <span class=\"token keyword\">delete</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_goRefCounts<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"254\"></td><td><pre>                  <span class=\"token keyword\">delete</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_ids<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"255\"></td><td><pre>                  <span class=\"token keyword\">delete</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_idPool<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"256\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"257\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"258\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"259\"></td><td><pre>               <span class=\"token comment\">// func wasmWrite(fd uintptr, p unsafe.Pointer, n int32)  </span></pre></td></tr><tr><td data-num=\"260\"></td><td><pre>               <span class=\"token string-property property\">\"runtime.wasmWrite\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"261\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"262\"></td><td><pre>                  <span class=\"token keyword\">const</span> fd <span class=\"token operator\">=</span> <span class=\"token function\">getInt64</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"263\"></td><td><pre>                  <span class=\"token keyword\">const</span> p <span class=\"token operator\">=</span> <span class=\"token function\">getInt64</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"264\"></td><td><pre>                  <span class=\"token keyword\">const</span> n <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">getInt32</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"265\"></td><td><pre>                  fs<span class=\"token punctuation\">.</span><span class=\"token function\">writeSync</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"266\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"267\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"268\"></td><td><pre>               <span class=\"token comment\">// func resetMemoryDataView()  </span></pre></td></tr><tr><td data-num=\"269\"></td><td><pre>               <span class=\"token string-property property\">\"runtime.resetMemoryDataView\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"270\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"271\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataView</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"272\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"273\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"274\"></td><td><pre>               <span class=\"token comment\">// func nanotime1() int64  </span></pre></td></tr><tr><td data-num=\"275\"></td><td><pre>               <span class=\"token string-property property\">\"runtime.nanotime1\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"276\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"277\"></td><td><pre>                  <span class=\"token function\">setInt64</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>timeOrigin <span class=\"token operator\">+</span> performance<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"278\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"279\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"280\"></td><td><pre>               <span class=\"token comment\">// func walltime() (sec int64, nsec int32)  </span></pre></td></tr><tr><td data-num=\"281\"></td><td><pre>               <span class=\"token string-property property\">\"runtime.walltime\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"282\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"283\"></td><td><pre>                  <span class=\"token keyword\">const</span> msec <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"284\"></td><td><pre>                  <span class=\"token function\">setInt64</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> msec <span class=\"token operator\">/</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"285\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setInt32</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>msec <span class=\"token operator\">%</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000000</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"286\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"287\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"288\"></td><td><pre>               <span class=\"token comment\">// func scheduleTimeoutEvent(delay int64) int32  </span></pre></td></tr><tr><td data-num=\"289\"></td><td><pre>               <span class=\"token string-property property\">\"runtime.scheduleTimeoutEvent\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"290\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"291\"></td><td><pre>                  <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_nextCallbackTimeoutID<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"292\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_nextCallbackTimeoutID<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"293\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scheduledTimeouts<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>  </pre></td></tr><tr><td data-num=\"294\"></td><td><pre>                     <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"295\"></td><td><pre>                        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_resume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"296\"></td><td><pre>                        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scheduledTimeouts<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"297\"></td><td><pre>                           <span class=\"token comment\">// for some reason Go failed to register the timeout event, log and try again  </span></pre></td></tr><tr><td data-num=\"298\"></td><td><pre>                           <span class=\"token comment\">// (temporary workaround for https://github.com/golang/go/issues/28975)                           console.warn(\"scheduleTimeoutEvent: missed timeout event\");  </span></pre></td></tr><tr><td data-num=\"299\"></td><td><pre>                           <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_resume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"300\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"301\"></td><td><pre>                     <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"302\"></td><td><pre>                     <span class=\"token function\">getInt64</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// setTimeout has been seen to fire up to 1 millisecond early  </span></pre></td></tr><tr><td data-num=\"303\"></td><td><pre>                  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"304\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setInt32</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"305\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"306\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"307\"></td><td><pre>               <span class=\"token comment\">// func clearTimeoutEvent(id int32)  </span></pre></td></tr><tr><td data-num=\"308\"></td><td><pre>               <span class=\"token string-property property\">\"runtime.clearTimeoutEvent\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"309\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"310\"></td><td><pre>                  <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">getInt32</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"311\"></td><td><pre>                  <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scheduledTimeouts<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"312\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scheduledTimeouts<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"313\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"314\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"315\"></td><td><pre>               <span class=\"token comment\">// func getRandomData(r []byte)  </span></pre></td></tr><tr><td data-num=\"316\"></td><td><pre>               <span class=\"token string-property property\">\"runtime.getRandomData\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"317\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"318\"></td><td><pre>                  crypto<span class=\"token punctuation\">.</span><span class=\"token function\">getRandomValues</span><span class=\"token punctuation\">(</span><span class=\"token function\">loadSlice</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"319\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"320\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"321\"></td><td><pre>               <span class=\"token comment\">// func finalizeRef(v ref)  </span></pre></td></tr><tr><td data-num=\"322\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.finalizeRef\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"323\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"324\"></td><td><pre>                  <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">getUint32</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"325\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_goRefCounts<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"326\"></td><td><pre>                  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_goRefCounts<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"327\"></td><td><pre>                     <span class=\"token keyword\">const</span> v <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_values<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"328\"></td><td><pre>                     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_values<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"329\"></td><td><pre>                     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_ids<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"330\"></td><td><pre>                     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_idPool<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"331\"></td><td><pre>                  <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"332\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"333\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"334\"></td><td><pre>               <span class=\"token comment\">// func stringVal(value string) ref  </span></pre></td></tr><tr><td data-num=\"335\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.stringVal\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"336\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"337\"></td><td><pre>                  <span class=\"token function\">storeValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token function\">loadString</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"338\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"339\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"340\"></td><td><pre>               <span class=\"token comment\">// func valueGet(v ref, p string) ref  </span></pre></td></tr><tr><td data-num=\"341\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.valueGet\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"342\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"343\"></td><td><pre>                  <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">loadString</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"344\"></td><td><pre>                  sp <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">getsp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>>></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// see comment above  </span></pre></td></tr><tr><td data-num=\"345\"></td><td><pre>                  <span class=\"token function\">storeValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"346\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"347\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"348\"></td><td><pre>               <span class=\"token comment\">// func valueSet(v ref, p string, x ref)  </span></pre></td></tr><tr><td data-num=\"349\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.valueSet\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"350\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"351\"></td><td><pre>                  Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">loadString</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"352\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"353\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"354\"></td><td><pre>               <span class=\"token comment\">// func valueDelete(v ref, p string)  </span></pre></td></tr><tr><td data-num=\"355\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.valueDelete\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"356\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"357\"></td><td><pre>                  Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">deleteProperty</span><span class=\"token punctuation\">(</span><span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">loadString</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"358\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"359\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"360\"></td><td><pre>               <span class=\"token comment\">// func valueIndex(v ref, i int) ref  </span></pre></td></tr><tr><td data-num=\"361\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.valueIndex\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"362\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"363\"></td><td><pre>                  <span class=\"token function\">storeValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getInt64</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"364\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"365\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"366\"></td><td><pre>               <span class=\"token comment\">// valueSetIndex(v ref, i int, x ref)  </span></pre></td></tr><tr><td data-num=\"367\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.valueSetIndex\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"368\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"369\"></td><td><pre>                  Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getInt64</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"370\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"371\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"372\"></td><td><pre>               <span class=\"token comment\">// func valueCall(v ref, m string, args []ref) (ref, bool)  </span></pre></td></tr><tr><td data-num=\"373\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.valueCall\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"374\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"375\"></td><td><pre>                  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"376\"></td><td><pre>                     <span class=\"token keyword\">const</span> v <span class=\"token operator\">=</span> <span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"377\"></td><td><pre>                     <span class=\"token keyword\">const</span> m <span class=\"token operator\">=</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> <span class=\"token function\">loadString</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"378\"></td><td><pre>                     <span class=\"token keyword\">const</span> args <span class=\"token operator\">=</span> <span class=\"token function\">loadSliceOfValues</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"379\"></td><td><pre>                     <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token function\">Reflect</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"380\"></td><td><pre>                     sp <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">getsp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>>></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// see comment above  </span></pre></td></tr><tr><td data-num=\"381\"></td><td><pre>                     <span class=\"token function\">storeValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"382\"></td><td><pre>                     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint8</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"383\"></td><td><pre>                  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"384\"></td><td><pre>                     sp <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">getsp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>>></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// see comment above  </span></pre></td></tr><tr><td data-num=\"385\"></td><td><pre>                     <span class=\"token function\">storeValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"386\"></td><td><pre>                     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint8</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"387\"></td><td><pre>                  <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"388\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"389\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"390\"></td><td><pre>               <span class=\"token comment\">// func valueInvoke(v ref, args []ref) (ref, bool)  </span></pre></td></tr><tr><td data-num=\"391\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.valueInvoke\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"392\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"393\"></td><td><pre>                  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"394\"></td><td><pre>                     <span class=\"token keyword\">const</span> v <span class=\"token operator\">=</span> <span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"395\"></td><td><pre>                     <span class=\"token keyword\">const</span> args <span class=\"token operator\">=</span> <span class=\"token function\">loadSliceOfValues</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"396\"></td><td><pre>                     <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token function\">Reflect</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"397\"></td><td><pre>                     sp <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">getsp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>>></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// see comment above  </span></pre></td></tr><tr><td data-num=\"398\"></td><td><pre>                     <span class=\"token function\">storeValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"399\"></td><td><pre>                     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint8</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"400\"></td><td><pre>                  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"401\"></td><td><pre>                     sp <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">getsp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>>></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// see comment above  </span></pre></td></tr><tr><td data-num=\"402\"></td><td><pre>                     <span class=\"token function\">storeValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"403\"></td><td><pre>                     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint8</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"404\"></td><td><pre>                  <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"405\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"406\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"407\"></td><td><pre>               <span class=\"token comment\">// func valueNew(v ref, args []ref) (ref, bool)  </span></pre></td></tr><tr><td data-num=\"408\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.valueNew\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"409\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"410\"></td><td><pre>                  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"411\"></td><td><pre>                     <span class=\"token keyword\">const</span> v <span class=\"token operator\">=</span> <span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"412\"></td><td><pre>                     <span class=\"token keyword\">const</span> args <span class=\"token operator\">=</span> <span class=\"token function\">loadSliceOfValues</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"413\"></td><td><pre>                     <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">construct</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"414\"></td><td><pre>                     sp <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">getsp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>>></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// see comment above  </span></pre></td></tr><tr><td data-num=\"415\"></td><td><pre>                     <span class=\"token function\">storeValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"416\"></td><td><pre>                     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint8</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"417\"></td><td><pre>                  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"418\"></td><td><pre>                     sp <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">getsp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>>></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// see comment above  </span></pre></td></tr><tr><td data-num=\"419\"></td><td><pre>                     <span class=\"token function\">storeValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"420\"></td><td><pre>                     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint8</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"421\"></td><td><pre>                  <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"422\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"423\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"424\"></td><td><pre>               <span class=\"token comment\">// func valueLength(v ref) int  </span></pre></td></tr><tr><td data-num=\"425\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.valueLength\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"426\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"427\"></td><td><pre>                  <span class=\"token function\">setInt64</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"428\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"429\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"430\"></td><td><pre>               <span class=\"token comment\">// valuePrepareString(v ref) (ref, int)  </span></pre></td></tr><tr><td data-num=\"431\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.valuePrepareString\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"432\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"433\"></td><td><pre>                  <span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> encoder<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"434\"></td><td><pre>                  <span class=\"token function\">storeValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"435\"></td><td><pre>                  <span class=\"token function\">setInt64</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> str<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"436\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"437\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"438\"></td><td><pre>               <span class=\"token comment\">// valueLoadString(v ref, b []byte)  </span></pre></td></tr><tr><td data-num=\"439\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.valueLoadString\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"440\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"441\"></td><td><pre>                  <span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"442\"></td><td><pre>                  <span class=\"token function\">loadSlice</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"443\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"444\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"445\"></td><td><pre>               <span class=\"token comment\">// func valueInstanceOf(v ref, t ref) bool  </span></pre></td></tr><tr><td data-num=\"446\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.valueInstanceOf\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"447\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"448\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint8</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"449\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"450\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"451\"></td><td><pre>               <span class=\"token comment\">// func copyBytesToGo(dst []byte, src ref) (int, bool)  </span></pre></td></tr><tr><td data-num=\"452\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.copyBytesToGo\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"453\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"454\"></td><td><pre>                  <span class=\"token keyword\">const</span> dst <span class=\"token operator\">=</span> <span class=\"token function\">loadSlice</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"455\"></td><td><pre>                  <span class=\"token keyword\">const</span> src <span class=\"token operator\">=</span> <span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"456\"></td><td><pre>                  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>src <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Uint8Array</span> <span class=\"token operator\">||</span> src <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Uint8ClampedArray</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"457\"></td><td><pre>                     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint8</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"458\"></td><td><pre>                     <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>                  <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"459\"></td><td><pre>                  <span class=\"token keyword\">const</span> toCopy <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span><span class=\"token function\">subarray</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> dst<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"460\"></td><td><pre>                  dst<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>toCopy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"461\"></td><td><pre>                  <span class=\"token function\">setInt64</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> toCopy<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"462\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint8</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"463\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"464\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"465\"></td><td><pre>               <span class=\"token comment\">// func copyBytesToJS(dst ref, src []byte) (int, bool)  </span></pre></td></tr><tr><td data-num=\"466\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.copyBytesToJS\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"467\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"468\"></td><td><pre>                  <span class=\"token keyword\">const</span> dst <span class=\"token operator\">=</span> <span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"469\"></td><td><pre>                  <span class=\"token keyword\">const</span> src <span class=\"token operator\">=</span> <span class=\"token function\">loadSlice</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"470\"></td><td><pre>                  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>dst <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Uint8Array</span> <span class=\"token operator\">||</span> dst <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Uint8ClampedArray</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"471\"></td><td><pre>                     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint8</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"472\"></td><td><pre>                     <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>                  <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"473\"></td><td><pre>                  <span class=\"token keyword\">const</span> toCopy <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span><span class=\"token function\">subarray</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> dst<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"474\"></td><td><pre>                  dst<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>toCopy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"475\"></td><td><pre>                  <span class=\"token function\">setInt64</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> toCopy<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"476\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint8</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"477\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"478\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"479\"></td><td><pre>               <span class=\"token string-property property\">\"debug\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"480\"></td><td><pre>                  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"481\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"482\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"483\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"484\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"485\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"486\"></td><td><pre>      <span class=\"token keyword\">async</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">instance</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"487\"></td><td><pre>         <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>instance <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">WebAssembly<span class=\"token punctuation\">.</span>Instance</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"488\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Go.run: WebAssembly.Instance expected\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"489\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"490\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst <span class=\"token operator\">=</span> instance<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"491\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataView</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"492\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_values <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token comment\">// JS values that Go currently has references to, indexed by reference id  </span></pre></td></tr><tr><td data-num=\"493\"></td><td><pre>            <span class=\"token number\">NaN</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"494\"></td><td><pre>            <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"495\"></td><td><pre>            <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>            <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>            <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>            global<span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"496\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>         <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"497\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_goRefCounts <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_values<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token number\">Infinity</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// number of references that Go has to a JS value, indexed by reference id  </span></pre></td></tr><tr><td data-num=\"498\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_ids <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span> <span class=\"token comment\">// mapping from JS values to reference ids  </span></pre></td></tr><tr><td data-num=\"499\"></td><td><pre>            <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"500\"></td><td><pre>            <span class=\"token punctuation\">[</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"501\"></td><td><pre>            <span class=\"token punctuation\">[</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"502\"></td><td><pre>            <span class=\"token punctuation\">[</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"503\"></td><td><pre>            <span class=\"token punctuation\">[</span>global<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"504\"></td><td><pre>            <span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"505\"></td><td><pre>         <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"506\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_idPool <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// unused ids that have been garbage collected  </span></pre></td></tr><tr><td data-num=\"507\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>exited <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// whether the Go program has exited  </span></pre></td></tr><tr><td data-num=\"508\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"509\"></td><td><pre>         <span class=\"token comment\">// Pass command line arguments and environment variables to WebAssembly by writing them to the linear memory.         let offset = 4096;  </span></pre></td></tr><tr><td data-num=\"510\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"511\"></td><td><pre>         <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">strPtr</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"512\"></td><td><pre>            <span class=\"token keyword\">const</span> ptr <span class=\"token operator\">=</span> offset<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"513\"></td><td><pre>            <span class=\"token keyword\">const</span> bytes <span class=\"token operator\">=</span> encoder<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>str <span class=\"token operator\">+</span> <span class=\"token string\">\"\\0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"514\"></td><td><pre>            <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">,</span> offset<span class=\"token punctuation\">,</span> bytes<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>bytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"515\"></td><td><pre>            offset <span class=\"token operator\">+=</span> bytes<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"516\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>offset <span class=\"token operator\">%</span> <span class=\"token number\">8</span> <span class=\"token operator\">!==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"517\"></td><td><pre>               offset <span class=\"token operator\">+=</span> <span class=\"token number\">8</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>offset <span class=\"token operator\">%</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"518\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"519\"></td><td><pre>            <span class=\"token keyword\">return</span> ptr<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"520\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"521\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"522\"></td><td><pre>         <span class=\"token keyword\">const</span> argc <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"523\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"524\"></td><td><pre>         <span class=\"token keyword\">const</span> argvPtrs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"525\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arg</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"526\"></td><td><pre>            argvPtrs<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token function\">strPtr</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"527\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"528\"></td><td><pre>         argvPtrs<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"529\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"530\"></td><td><pre>         <span class=\"token keyword\">const</span> keys <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"531\"></td><td><pre>         keys<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"532\"></td><td><pre>            argvPtrs<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token function\">strPtr</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>key<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"533\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"534\"></td><td><pre>         argvPtrs<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"535\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"536\"></td><td><pre>         <span class=\"token keyword\">const</span> argv <span class=\"token operator\">=</span> offset<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"537\"></td><td><pre>         argvPtrs<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ptr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"538\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint32</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">,</span> ptr<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"539\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint32</span><span class=\"token punctuation\">(</span>offset <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"540\"></td><td><pre>            offset <span class=\"token operator\">+=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"541\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"542\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"543\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span>argc<span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"544\"></td><td><pre>         <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>exited<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"545\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_resolveExitPromise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"546\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"547\"></td><td><pre>         <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_exitPromise<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"548\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"549\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"550\"></td><td><pre>      <span class=\"token function\">_resume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"551\"></td><td><pre>         <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>exited<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"552\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Go program has already exited\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"553\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"554\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">resume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"555\"></td><td><pre>         <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>exited<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"556\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_resolveExitPromise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"557\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"558\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"559\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"560\"></td><td><pre>      <span class=\"token function\">_makeFuncWrapper</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"561\"></td><td><pre>         <span class=\"token keyword\">const</span> go <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"562\"></td><td><pre>         <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"563\"></td><td><pre>            <span class=\"token keyword\">const</span> event <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> id<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">args</span><span class=\"token operator\">:</span> arguments <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"564\"></td><td><pre>            go<span class=\"token punctuation\">.</span>_pendingEvent <span class=\"token operator\">=</span> event<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"565\"></td><td><pre>            go<span class=\"token punctuation\">.</span><span class=\"token function\">_resume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"566\"></td><td><pre>            <span class=\"token keyword\">return</span> event<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"567\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"568\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"569\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"570\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"571\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>  </pre></td></tr><tr><td data-num=\"572\"></td><td><pre>      <span class=\"token keyword\">typeof</span> module <span class=\"token operator\">!==</span> <span class=\"token string\">\"undefined\"</span> <span class=\"token operator\">&amp;&amp;</span>  </pre></td></tr><tr><td data-num=\"573\"></td><td><pre>      global<span class=\"token punctuation\">.</span>require <span class=\"token operator\">&amp;&amp;</span>  </pre></td></tr><tr><td data-num=\"574\"></td><td><pre>      global<span class=\"token punctuation\">.</span>require<span class=\"token punctuation\">.</span>main <span class=\"token operator\">===</span> module <span class=\"token operator\">&amp;&amp;</span>  </pre></td></tr><tr><td data-num=\"575\"></td><td><pre>      global<span class=\"token punctuation\">.</span>process <span class=\"token operator\">&amp;&amp;</span>  </pre></td></tr><tr><td data-num=\"576\"></td><td><pre>      global<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">.</span>versions <span class=\"token operator\">&amp;&amp;</span>  </pre></td></tr><tr><td data-num=\"577\"></td><td><pre>      <span class=\"token operator\">!</span>global<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">.</span>versions<span class=\"token punctuation\">.</span>electron  </pre></td></tr><tr><td data-num=\"578\"></td><td><pre>   <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"579\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"580\"></td><td><pre>         console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"usage: go_js_wasm_exec [wasm binary] [arguments]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"581\"></td><td><pre>         process<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"582\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"583\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"584\"></td><td><pre>      <span class=\"token keyword\">const</span> go <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Go</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"585\"></td><td><pre>      go<span class=\"token punctuation\">.</span>argv <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"586\"></td><td><pre>      go<span class=\"token punctuation\">.</span>env <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token constant\">TMPDIR</span><span class=\"token operator\">:</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"os\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">tmpdir</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"587\"></td><td><pre>      go<span class=\"token punctuation\">.</span>exit <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"588\"></td><td><pre>      WebAssembly<span class=\"token punctuation\">.</span><span class=\"token function\">instantiate</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> go<span class=\"token punctuation\">.</span>importObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"589\"></td><td><pre>         process<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"exit\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">code</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// Node.js exits if no event handler is pending  </span></pre></td></tr><tr><td data-num=\"590\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>code <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>go<span class=\"token punctuation\">.</span>exited<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"591\"></td><td><pre>               <span class=\"token comment\">// deadlock, make Go print error and stack traces  </span></pre></td></tr><tr><td data-num=\"592\"></td><td><pre>               go<span class=\"token punctuation\">.</span>_pendingEvent <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"593\"></td><td><pre>               go<span class=\"token punctuation\">.</span><span class=\"token function\">_resume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"594\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"595\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"596\"></td><td><pre>         <span class=\"token keyword\">return</span> go<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"597\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"598\"></td><td><pre>         console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"599\"></td><td><pre>         process<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"600\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"601\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"602\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"603\"></td><td><pre></pre></td></tr><tr><td data-num=\"604\"></td><td><pre></pre></td></tr><tr><td data-num=\"605\"></td><td><pre><span class=\"token number\">2.</span> 在index<span class=\"token punctuation\">.</span>html中引入wasm_exec<span class=\"token punctuation\">.</span>js</pre></td></tr><tr><td data-num=\"606\"></td><td><pre><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>`js</pre></td></tr><tr><td data-num=\"607\"></td><td><pre><span class=\"token operator\">&lt;</span>head<span class=\"token operator\">></span>  </pre></td></tr><tr><td data-num=\"608\"></td><td><pre>  <span class=\"token operator\">&lt;</span>meta charset<span class=\"token operator\">=</span><span class=\"token string\">\"UTF-8\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>  </pre></td></tr><tr><td data-num=\"609\"></td><td><pre>  <span class=\"token operator\">&lt;</span>link rel<span class=\"token operator\">=</span><span class=\"token string\">\"icon\"</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"image/svg+xml\"</span> href<span class=\"token operator\">=</span><span class=\"token string\">\"/vite.svg\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>  </pre></td></tr><tr><td data-num=\"610\"></td><td><pre>  <span class=\"token operator\">&lt;</span>meta name<span class=\"token operator\">=</span><span class=\"token string\">\"viewport\"</span> content<span class=\"token operator\">=</span><span class=\"token string\">\"width=device-width, initial-scale=1.0\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>  </pre></td></tr><tr><td data-num=\"611\"></td><td><pre>    <span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"static/wasm_exec.js\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>  </pre></td></tr><tr><td data-num=\"612\"></td><td><pre>  <span class=\"token operator\">&lt;</span>title<span class=\"token operator\">></span>Vite <span class=\"token operator\">+</span> Vue <span class=\"token operator\">+</span> <span class=\"token constant\">TS</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>title<span class=\"token operator\">></span>  </pre></td></tr><tr><td data-num=\"613\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>head<span class=\"token operator\">></span></pre></td></tr></table></figure><h3 id=\"调用go代码\"><a class=\"markdownIt-Anchor\" href=\"#调用go代码\">#</a> 调用 go 代码</h3>\n<p>在 HelloWorld.vue 组件中调用 wasm 函数</p>\n<pre><code class=\"language-vue\">&lt;script setup lang=&quot;ts&quot;&gt;  \nimport &#123; ref,defineProps &#125; from 'vue'  \ndefineProps&lt;&#123; msg: string &#125;&gt;()  \n  \nconst run = ()=&gt;&#123;  \n  const go = new window.Go();  \n  WebAssembly.instantiateStreaming(fetch(&quot;../../static/main.wasm&quot;),go.importObject).  \n  then((result)=&gt;go.run(result.instance));  \n&#125;  \n  \n&lt;/script&gt;  \n  \n&lt;template&gt;  \n  &lt;h1&gt;&#123;&#123; msg &#125;&#125;&lt;/h1&gt;  \n  \n  &lt;div class=&quot;card-body&quot;&gt;  \n    &lt;p class=&quot;text-muted&quot;&gt;  \n      点击“运行”，在控制台输出日志 &lt;code&gt;Hello, WebAssembly!&lt;/code&gt;  \n    &lt;/p&gt;    &lt;div class=&quot;live-preview&quot;&gt;  \n      &lt;button          @click=&quot;run()&quot;  \n          class=&quot;btn btn-success&quot;  \n          id=&quot;runButton&quot;  \n      &gt;  \n        运行  \n      &lt;/button&gt;  \n    &lt;/div&gt;  &lt;/div&gt;  \n&lt;/template&gt;  \n  \n&lt;style scoped&gt;  \n.read-the-docs &#123;  \n  color: #888;  \n&#125;  \n&lt;/style&gt;\n\n</code></pre>\n<h1 id=\"问题\"><a class=\"markdownIt-Anchor\" href=\"#问题\">#</a> 问题</h1>\n<h2 id=\"是否支持跨域\"><a class=\"markdownIt-Anchor\" href=\"#是否支持跨域\">#</a> 是否支持跨域</h2>\n<p>不能</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   alert <span class=\"token operator\">:=</span> js<span class=\"token punctuation\">.</span><span class=\"token function\">Global</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"alert\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   alert<span class=\"token punctuation\">.</span><span class=\"token function\">Invoke</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   url <span class=\"token operator\">:=</span> <span class=\"token string\">\"https://www.baidu.com/\"</span> <span class=\"token comment\">// 要获取数据的 URL  </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   response<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"获取URL数据时出错：%s\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token keyword\">return</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token keyword\">defer</span> response<span class=\"token punctuation\">.</span>Body<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   body<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> ioutil<span class=\"token punctuation\">.</span><span class=\"token function\">ReadAll</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>Body<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"读取响应内容时出错：%s\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token keyword\">return</span>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>浏览器报了跨域错误</p>\n<h2 id=\"是否支持多协程\"><a class=\"markdownIt-Anchor\" href=\"#是否支持多协程\">#</a> 是否支持多协程</h2>\n<p><code>支持</code></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   alert <span class=\"token operator\">:=</span> js<span class=\"token punctuation\">.</span><span class=\"token function\">Global</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"alert\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   alert<span class=\"token punctuation\">.</span><span class=\"token function\">Invoke</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   sleep <span class=\"token operator\">:=</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>x <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> wg <span class=\"token operator\">*</span>sync<span class=\"token punctuation\">.</span>WaitGroup<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token keyword\">defer</span> wg<span class=\"token punctuation\">.</span><span class=\"token function\">Done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      time<span class=\"token punctuation\">.</span><span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>Second <span class=\"token operator\">*</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">Duration</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是coroutine:%d\\n\"</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token keyword\">var</span> wg sync<span class=\"token punctuation\">.</span>WaitGroup  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开启两个协程\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   wg<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token keyword\">go</span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>wg<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   wg<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   <span class=\"token keyword\">go</span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>wg<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   wg<span class=\"token punctuation\">.</span><span class=\"token function\">Wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"All workers done\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "前端",
                "vue",
                "go",
                "wasm"
            ]
        },
        {
            "id": "https://fanlu.top/2023/06/20/%E5%89%8D%E7%AB%AF/daisyUI%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/",
            "url": "https://fanlu.top/2023/06/20/%E5%89%8D%E7%AB%AF/daisyUI%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/",
            "title": "daisyUI使用体验",
            "date_published": "2023-06-20T15:28:33.000Z",
            "content_html": "<h2 id=\"tailwind介绍\"><a class=\"markdownIt-Anchor\" href=\"#tailwind介绍\">#</a> tailwind 介绍</h2>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudGFpbHdpbmRjc3MuY24vZG9jcy9jdXN0b21pemluZy1jb2xvcnMjLTg=\">https://www.tailwindcss.cn/docs/customizing-colors#-8</span></p>\n</blockquote>\n<p><em>以下介绍来自 chatGPT:</em><br>\nTailwind CSS 是一个现代化的 CSS 框架，它提供了一套可复用的构建块和实用工具，用于快速开发现代化的、自定义的用户界面。</p>\n<p>与其他 CSS 框架相比，Tailwind CSS 的一个主要区别是它并没有预定义的样式类。相反，它提供了一组原子级的 CSS 类，每个类都对应一个特定的样式属性。这些类的命名是基于其功能而不是视觉效果，例如 “text-red-500” 表示红色文本颜色，“bg-blue-200” 表示蓝色背景颜色，“p-4” 表示边距为 4 的元素等等。通过将这些类组合在一起，开发者可以轻松地构建自定义的样式。</p>\n<p>使用 Tailwind CSS，开发者可以通过组合这些原子类来创建出复杂的布局和设计，而不需要手动编写大量的 CSS。这使得开发过程更加快速和高效，并且可以在不同的项目中实现一致的设计风格。</p>\n<p>Tailwind CSS 还提供了一些有用的实用工具，如网格系统、响应式设计类、颜色调色板、阴影效果等。它还支持定制化配置，可以根据项目需求进行个性化设置，并且可以通过插件系统进行扩展。</p>\n<p>总的来说，Tailwind CSS 是一个强大的 CSS 框架，它通过提供原子级的类和实用工具，使得开发者可以更轻松、高效地构建自定义的用户界面。它的灵活性和可定制化的特点使其在现代 Web 开发中广受欢迎。</p>\n<p><em>个人使用体验</em>：<br>\n优点：</p>\n<ul>\n<li>节省时间，提升了开发速度</li>\n<li>丰富的预制样式，可以提供样式设计的思路<br>\n缺点：</li>\n<li>代码会比较混乱，一个元素的 class 可能会定义的特别长</li>\n<li>后期不好维护，每个元素都自定义了，后面要修改就比较麻烦 （当然也可以封装）</li>\n<li>可能与其他组件样式冲突</li>\n<li>导致元素的基础样式丢失，比如 h1 h2 等，不过可以使用 prose 插件解决 （具体见：<a href=\"https://fanlu.top/2023/06/12/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%A8%A1%E6%9D%BF%E5%B7%A5%E5%85%B7%E5%BC%80%E5%8F%91-01/%EF%BC%89\">https://fanlu.top/2023/06/12 / 微信公众号模板工具开发 - 01/）</a></li>\n</ul>\n<p>结论：小项目建议使用，大项目不建议</p>\n<h2 id=\"daisyui介绍\"><a class=\"markdownIt-Anchor\" href=\"#daisyui介绍\">#</a> daisyUI 介绍</h2>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kYWlzeXVpLmNvbS9kb2NzL2luc3RhbGwv\">https://daisyui.com/docs/install/</span></p>\n</blockquote>\n<p>这是一个基于 tailwindcss 的组件库，现在 tailwindcss 也有自己的组件库（<span class=\"exturl\" data-url=\"aHR0cHM6Ly90YWlsd2luZHVpLmNvbS9jb21wb25lbnRzJUVGJUJDJTg5JUVGJUJDJThDJUU0JUI4JThEJUU4JUJGJTg3JUU2JTk4JUFGJUU2JTk0JUI2JUU4JUI0JUI5JUU3JTlBJTg0JUUzJTgwJTgy\">https://tailwindui.com/components），不过是收费的。</span></p>\n<p>daisyui 是一个简单的组件库，这里的简单是指它的组件真的很简单，只有预设的样式，没有提供任何原生以外的组件功能。<br>\n想到用这个，主要是因为 element 的原生样式太不能满足需求了，修改也比较麻烦（其实现在看还好）。</p>\n<h2 id=\"简单使用\"><a class=\"markdownIt-Anchor\" href=\"#简单使用\">#</a> 简单使用</h2>\n<ol>\n<li>安装 daisyUI:</li>\n</ol>\n<pre><code class=\"language-undefined\">npm i -D daisyui\n</code></pre>\n<ol start=\"2\">\n<li>然后，在你的 <code>tailwind.config.js</code>  文件里追加 daisyUI 的设置:</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token comment\">//...</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"daisyui\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在组件中这样使用</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn btn-success btn-sm py-0 text-sm leading-3<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>copy<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>复制<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"与elementui的比较\"><a class=\"markdownIt-Anchor\" href=\"#与elementui的比较\">#</a> 与 elementui 的比较</h2>\n<h3 id=\"优势\"><a class=\"markdownIt-Anchor\" href=\"#优势\">#</a> 优势：</h3>\n<ul>\n<li>样式美观，自定义很方便</li>\n<li>功能好修改，更接近原生<br>\n劣势：</li>\n<li>功能不够丰富，大部分功能需要自己单独写</li>\n<li>组件目前还不如 element 丰富</li>\n</ul>\n<h2 id=\"体验总结\"><a class=\"markdownIt-Anchor\" href=\"#体验总结\">#</a> 体验总结</h2>\n<p>建议作为兴趣使用，如果想要快速出活，还是用其他的组件库比较好。</p>\n",
            "tags": [
                "前端",
                "UI"
            ]
        },
        {
            "id": "https://fanlu.top/2023/06/17/%E5%89%8D%E7%AB%AF/Web%E7%95%8C%E9%9D%A2%E8%AE%BE%E8%AE%A1%E5%87%86%E5%88%99%E2%80%94%E7%BF%BB%E8%AF%91/",
            "url": "https://fanlu.top/2023/06/17/%E5%89%8D%E7%AB%AF/Web%E7%95%8C%E9%9D%A2%E8%AE%BE%E8%AE%A1%E5%87%86%E5%88%99%E2%80%94%E7%BF%BB%E8%AF%91/",
            "title": "Web界面设计准则—翻译",
            "date_published": "2023-06-17T15:55:48.000Z",
            "content_html": "<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbnRlcmZhY2VzLnJhdW5vLm1lLw==\">https://interfaces.rauno.me/</span></p>\n<p>这个文档概述了构建良好的用户界面的一些细节，文档在持续更新中。本文借助 chatgpt 以及个人修改进行翻译，有些其实没接触过的，我也不懂啥意思，建议看原文。</p>\n<h2 id=\"交互\"><a class=\"markdownIt-Anchor\" href=\"#交互\">#</a> 交互</h2>\n<ul>\n<li>点击输入框就聚焦输入</li>\n<li>输入框应该被 form 元素包括，enter 件可以提交</li>\n<li>输入框应该包含 type 属性，例如 password、email</li>\n<li>大部分时间，输入框不应该使用拼写检查（spellcheck）以及自动填充（autocomplete）</li>\n<li>需要校验的时候，使用 required 来校验</li>\n<li>输入前缀和后缀装饰，比如图标、应该绝对定位，应该添加内边距，层级放在输入框上方，而不要放在旁边，点击也可以聚焦到输入框</li>\n<li>toggle 组件必须立即生效，不需要二次确认</li>\n<li>按钮应该在提交后失效，避免重复提交  （或者 loading）</li>\n<li>交互的组件应该设置 user-select 为 none</li>\n<li>装饰元素应该禁用指针事件，避免干扰</li>\n<li>垂直或者水平列表中的可交互元素之间不应存在无效区域，同时应该增加元素内边距增大可点击区域</li>\n</ul>\n<h2 id=\"排版\"><a class=\"markdownIt-Anchor\" href=\"#排版\">#</a> 排版</h2>\n<ul>\n<li>\n<ul>\n<li>字体应该应用  <code>-webkit-font-smoothing: antialiased</code>  以提高可读性</li>\n</ul>\n</li>\n<li>\n<p>字体应该应用  <code>text-rendering: optimizeLegibility</code>  以提高可读性</p>\n</li>\n<li>\n<p>字体应该根据内容、字母表或相关语言进行子集化</p>\n</li>\n<li>\n<p>在鼠标悬停或选中状态下不应改变字体粗细，以避免布局变化</p>\n</li>\n<li>\n<p>不应使用低于 400 的字体粗细</p>\n</li>\n<li>\n<p>中等大小的标题通常在 500-600 的字体粗细之间效果最好</p>\n</li>\n<li>\n<p>通过使用 CSS 的  <code>clamp()</code>  函数动态调整数值，例如  <code>clamp(48px, 5vw, 72px)</code> ，可应用于标题的字体大小<br>\n <code>clamp()</code>  CSS 函数将中间值限制在指定的最小值和最大值范围内。该函数接受三个参数：最小值、首选值和最大允许值。<br>\n换句话说， <code>clamp()</code>  函数确保结果值落在指定的范围内。如果首选值在最小值和最大值之间，则直接返回首选值。如果首选值小于最小值，则返回最小值。同样地，如果首选值大于最大值，则返回最大值。<br>\n以下是使用 <code>clamp()</code>  函数的语法：<br>\n <code>clamp(最小值, 首选值, 最大值)</code> <br>\n 例如， <code>clamp(10px, 5vw, 20px)</code>  将返回至少为 10 像素，但不超过 20 像素的值。如果首选值 <code>5vw</code>  在指定的范围内，将使用它作为结果值。<br>\n这个函数在创建响应式设计时非常有用，其中某个值应根据视口大小进行缩放，但仍有定义的限制。</p>\n</li>\n<li>\n<p>在可用时，应使用  <code>font-variant-numeric: tabular-nums</code>  应用表格数字，特别是在表格或不希望出现布局变化的情况下，例如计时器中</p>\n</li>\n<li>\n<p>使用  <code>-webkit-text-size-adjust: 100%</code>  可防止在 iOS 的横向模式下出现意外的文本调整大小</p>\n</li>\n</ul>\n<h2 id=\"motion动画\"><a class=\"markdownIt-Anchor\" href=\"#motion动画\">#</a> Motion (动画)</h2>\n<ul>\n<li>切换主题不应触发元素 transition 或者动画</li>\n<li>动画不应超过 200ms，否则会影响交互速度</li>\n<li>动画值应该和触发器大小成比例：\n<ul>\n<li>缩放动画不应从 0 到 1，而是从 0.8 开始渐变透明度或者缩放度</li>\n<li>按钮激活动画不应从 1 到 0.8，而是到 0.96 0.9 等等</li>\n</ul>\n</li>\n<li>频率较高的动作避免不必要的动画\n<ul>\n<li>例如右键菜单</li>\n<li>删除或者添加列表项</li>\n<li>一般的按钮</li>\n</ul>\n</li>\n<li>看不见的元素动画应该停止，以降低 cpu 和 gpu 的能耗</li>\n<li>使用 scroll-behavior:smooth 来作为业内导航的参数</li>\n</ul>\n<h2 id=\"触摸-移动设备\"><a class=\"markdownIt-Anchor\" href=\"#触摸-移动设备\">#</a> 触摸 （移动设备）</h2>\n<ul>\n<li>触摸时不应显示悬停状态，使用 <code>@media (hover: hover)</code>  来实现。</li>\n<li>输入框字体不小于 16px，防止 ios 焦点状态下缩放</li>\n<li>输入框不应自动获取焦点</li>\n<li>video，应使用  <code>muted</code>  和  <code>playsinline</code>  属性以在 iOS 上自动播放</li>\n<li>对于自定义组件实现了平移和缩放手势的情况，应禁用  <code>touch-action</code>  属性，以防止与缩放和滚动等本机行为的干扰</li>\n<li>使用  <code>-webkit-tap-highlight-color: rgba(0,0,0,0)</code>  可以禁用默认的 iOS 点击高亮效果，但始终应替代为适当的替代方案</li>\n</ul>\n<h2 id=\"优化\"><a class=\"markdownIt-Anchor\" href=\"#优化\">#</a> 优化</h2>\n<ul>\n<li>使用较大的  <code>blur()</code>  值来设置  <code>filter</code>  和  <code>backdrop-filter</code>  可能会导致性能下降</li>\n<li>矩形缩放和模糊处理会导致色带效应（banding），使用径向渐变比较好</li>\n<li>谨慎使用  <code>transform: translateZ(0)</code>  来启用 GPU 渲染，以提高性能，但仅适用于性能较差的动画</li>\n<li>对于性能较差的滚动动画，在动画的持续时间内切换  <code>will-change</code>  属性</li>\n<li>播放过多的视频可能会导致 iOS 设备性能下降，建议对屏幕外的视频进行暂停甚至卸载</li>\n<li>使用  <code>refs</code>  绕过 React 的渲染生命周期，直接将实时值提交给 DOM</li>\n<li>检测和适应用户设备的硬件和网络能力</li>\n</ul>\n<h2 id=\"友好设计\"><a class=\"markdownIt-Anchor\" href=\"#友好设计\">#</a> 友好设计</h2>\n<ul>\n<li>禁用的按钮不应有提示信息</li>\n<li>焦点环使用 box-shadow 而不是 outline</li>\n<li>列表可聚焦元素支持上下键切换</li>\n<li>列表可聚焦元素支持删除键删除</li>\n<li>下拉菜单触发应该是 onMouseDown 而不是 onClick 事件</li>\n<li>使用带有样式标签的 SVG 网站图标，根据 prefers-color-scheme 遵循系统主题</li>\n<li>仅包含图标的交互元素应该定义一个明确的  <code>aria-label</code>   （这样会支持屏幕阅读工具阅读）</li>\n<li>悬浮触发的 tip 不应包含交互内容</li>\n<li>图片使用 img 渲染，方便复制</li>\n<li>插图应该有 aria-label</li>\n<li>渐变文本在  <code>::selection</code>  状态下应取消渐变效果</li>\n<li>当使用嵌套菜单时，使用 &quot;prediction cone” 以防止指针在移动过程中意外关闭菜单</li>\n</ul>\n<h2 id=\"设计\"><a class=\"markdownIt-Anchor\" href=\"#设计\">#</a> 设计</h2>\n<ul>\n<li>提交后数据更新；但服务器报错后进行回滚和提示</li>\n<li>身份验证应该在服务器完成，避免 url 变化</li>\n<li>使用  <code>::selection</code>  样式化文档选中状态</li>\n<li>显示反馈：\n<ul>\n<li>复制成功时，显示一个内联的标记，而不是一个通知</li>\n<li>输入错误时高亮显示相关的输入框</li>\n</ul>\n</li>\n<li>空状态应提示创建新项，并可选择使用模板</li>\n</ul>\n",
            "tags": [
                "前端",
                "产品经理"
            ]
        },
        {
            "id": "https://fanlu.top/2023/06/17/%E5%89%8D%E7%AB%AF/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%A8%A1%E6%9D%BF%E5%B7%A5%E5%85%B7%E5%BC%80%E5%8F%91-02%EF%BC%88end%EF%BC%89/",
            "url": "https://fanlu.top/2023/06/17/%E5%89%8D%E7%AB%AF/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%A8%A1%E6%9D%BF%E5%B7%A5%E5%85%B7%E5%BC%80%E5%8F%91-02%EF%BC%88end%EF%BC%89/",
            "title": "微信公众号模板工具开发-02（end）",
            "date_published": "2023-06-17T13:41:45.000Z",
            "content_html": "<h2 id=\"代码高亮\"><a class=\"markdownIt-Anchor\" href=\"#代码高亮\">#</a> 代码高亮</h2>\n<p>使用 prism.js 来实现代码高亮。<br>\n每次渲染完 md 文档过后，调用 Prism.hightAll ()</p>\n<h4 id=\"安装\"><a class=\"markdownIt-Anchor\" href=\"#安装\">#</a> 安装</h4>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> prismjs@1.29.0 @types/prismjs@1.26.0</pre></td></tr></table></figure><h4 id=\"配置\"><a class=\"markdownIt-Anchor\" href=\"#配置\">#</a> 配置</h4>\n<figure class=\"highlight ts\"><figcaption data-lang=\"TypeScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// nuxt.config.ts</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>vite<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">prismjs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token comment\">// 添加支持的高亮的语言，如果需要支持全部的话改成这样:  languages: \"all\"  </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      languages<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'cpp'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token string\">'javascript'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token string\">'bash'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token string\">'dart'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token string\">'sql'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token string\">'css'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token string\">'html'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token string\">'java'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token string\">'json'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token string\">'sass'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token string\">'scss'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token string\">'log'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token string\">'swift'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token string\">'md'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token string\">'nginx'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token string\">'yaml'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token string\">'xml'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token string\">'shell'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token string\">'ts'</span>  </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token comment\">// 配置 prism 插件 toolbar 是后面两个插件依赖的插件.  </span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token comment\">//show-language: 显示语言名。  </span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token comment\">//copy-to-clipboard: 添加复制代码功能。  </span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'line-numbers'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token comment\">// 主题名称，支持的主题可以在 node_moduels 中安装此库的目录下寻找。  </span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      theme<span class=\"token operator\">:</span> <span class=\"token string\">\"okaidia\"</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      css<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>  </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><h4 id=\"使用\"><a class=\"markdownIt-Anchor\" href=\"#使用\">#</a> 使用</h4>\n<figure class=\"highlight ts\"><figcaption data-lang=\"TypeScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> Prism <span class=\"token keyword\">from</span> <span class=\"token string\">'prismjs'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">...</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 每次渲染完之后调用这个函数，便会自动构建代码样式</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Prism<span class=\"token punctuation\">.</span><span class=\"token function\">highlightAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">...</span></pre></td></tr></table></figure><h2 id=\"引用归纳\"><a class=\"markdownIt-Anchor\" href=\"#引用归纳\">#</a> 引用归纳</h2>\n<p>将文章中插入的链接，以引用文献的样子放在文章最后。 这个想法来自于阮一峰的周刊。<br>\n前端由于浏览器跨域的限制，是无法根据 url 去获取到网站标题的，（不知道 wasm 是否可以）。所以需要一个后端的简单接口，使用 go 或者 python 都可以，我用的 gin 写了个接口</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">GetWebsiteTitle</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">*</span>gin<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   url <span class=\"token operator\">:=</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">Query</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"url\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token keyword\">if</span> url <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      c<span class=\"token punctuation\">.</span><span class=\"token function\">JSON</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span>StatusBadRequest<span class=\"token punctuation\">,</span> APIResponse<span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>         ErrorCode<span class=\"token punctuation\">:</span>    http<span class=\"token punctuation\">.</span>StatusBadRequest<span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>         ErrorMessage<span class=\"token punctuation\">:</span> <span class=\"token string\">\"URL parameter is missing\"</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>         Result<span class=\"token punctuation\">:</span>       <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token keyword\">return</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token comment\">// 使用 Colly 爬取网页标题  </span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   collector <span class=\"token operator\">:=</span> colly<span class=\"token punctuation\">.</span><span class=\"token function\">NewCollector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   collector<span class=\"token punctuation\">.</span><span class=\"token function\">SetRequestTimeout</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">*</span> time<span class=\"token punctuation\">.</span>Second<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token keyword\">var</span> title <span class=\"token builtin\">string</span>  </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   collector<span class=\"token punctuation\">.</span><span class=\"token function\">OnHTML</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"title\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">*</span>colly<span class=\"token punctuation\">.</span>HTMLElement<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      title <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>Text  </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   err <span class=\"token operator\">:=</span> collector<span class=\"token punctuation\">.</span><span class=\"token function\">Visit</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>   <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      c<span class=\"token punctuation\">.</span><span class=\"token function\">JSON</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span>StatusOK<span class=\"token punctuation\">,</span> APIResponse<span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>         ErrorCode<span class=\"token punctuation\">:</span>    http<span class=\"token punctuation\">.</span>StatusInternalServerError<span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>         ErrorMessage<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Failed to fetch website data\"</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>         Result<span class=\"token punctuation\">:</span>       <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token keyword\">return</span>  </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>   c<span class=\"token punctuation\">.</span><span class=\"token function\">JSON</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span>StatusOK<span class=\"token punctuation\">,</span> APIResponse<span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      ErrorCode<span class=\"token punctuation\">:</span>    http<span class=\"token punctuation\">.</span>StatusOK<span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      ErrorMessage<span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      Result<span class=\"token punctuation\">:</span>       title<span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"36\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>然后在 nuxt 中请求数据方法是 useFetch ，获取所有 url 的标题</p>\n<figure class=\"highlight ts\"><figcaption data-lang=\"TypeScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>useFetch<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> data<span class=\"token punctuation\">,</span> pending<span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">,</span> refresh <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">useFetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://localhost:7777/md/get_website_title\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   query<span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>     url<span class=\"token operator\">:</span>links<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>href  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"问题\"><a class=\"markdownIt-Anchor\" href=\"#问题\">#</a> 问题</h2>\n<ol>\n<li>微信样式问题<br>\n发现显示的内容粘贴到微信之后，还能保持该有的样式，发表出去之后，样式反而丢了，很蛋疼</li>\n<li>引用列表显示的还不是很完美，需要再搞搞</li>\n</ol>\n",
            "tags": [
                "前端",
                "nuxt",
                "axiss"
            ]
        },
        {
            "id": "https://fanlu.top/2023/06/12/%E5%89%8D%E7%AB%AF/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%A8%A1%E6%9D%BF%E5%B7%A5%E5%85%B7%E5%BC%80%E5%8F%91-01/",
            "url": "https://fanlu.top/2023/06/12/%E5%89%8D%E7%AB%AF/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%A8%A1%E6%9D%BF%E5%B7%A5%E5%85%B7%E5%BC%80%E5%8F%91-01/",
            "title": "微信公众号模板工具开发-01",
            "date_published": "2023-06-12T15:53:49.000Z",
            "content_html": "<blockquote>\n<p>在 nuxt 项目中实现一个 markdown 文本的渲染工作，可以用于微信公众号粘贴</p>\n</blockquote>\n<p>公众号的排版时比较难搞的一件事，但是可以复制样式。因此很多人会采用在模板网站上调好文章的格式，然后复制粘贴到微信编辑器。<br>\n现在开源的几个我觉得样式比较一般，所以想做一个自己的，支持多主题切换的公众号排版工具。</p>\n<p>正好在自己服务器搭了个 nuxt 服务，就作为一个模块写到里面吧。</p>\n<h2 id=\"markdown转换\"><a class=\"markdownIt-Anchor\" href=\"#markdown转换\">#</a> markdown 转换</h2>\n<p>markdown 原始的文本是无法被渲染的好看的，在浏览器中，使用工具按照规则将 markdown 转换为 html 标签，是更好的渲染方法。</p>\n<ul>\n<li>普通文本 =》p 标签；</li>\n<li>一级标题 =》h2 标签，其他标题同理；</li>\n<li>网址链接 =》a 标签</li>\n<li>代码 =》pre 标签</li>\n<li>无序列表 =》ul&gt;li 标签</li>\n<li>有序列表 =》ol&gt;li 标签</li>\n<li>图片 =》img 标签</li>\n</ul>\n<p>在这个项目中，我选择<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21hcmtlZGpzL21hcmtlZA==\"> marked</span>, 作为 markdown 转换为网页标签的转换器。<br>\n使用很简单方便：</p>\n<ol>\n<li>安装<br>\n npm install -g marked</li>\n<li>使用 (我用的 nuxt3)</li>\n</ol>\n<figure class=\"highlight ts\"><figcaption data-lang=\"TypeScript\"><span>s</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 引入 其中 rawText 是原始的 md 文本，mdText 是转换后的 html 文本</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>marked<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"marked\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>mdText<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token function\">marked</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>rawText<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><pre><code class=\"language-vue\">/*使用v_html绑定转换后的md文本*/\n&lt;div v-html=&quot;mdText&quot; id=&quot;preview&quot; class=&quot;prose markdown&quot; :class=&quot;classList&quot;  \n     :style=&quot;&#123;fontSize:fontSize+'px'&#125;&quot;&gt;&lt;/div&gt;\n</code></pre>\n<h2 id=\"taiwindcss-渲染问题\"><a class=\"markdownIt-Anchor\" href=\"#taiwindcss-渲染问题\">#</a> taiwindcss 渲染问题</h2>\n<p>由于项目中引入了<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudGFpbHdpbmRjc3MuY24vZG9jcy9pbnN0YWxsYXRpb24=\"> tailwindcss</span>，这是一个以类来定义样式的库，使用起来非常方便好用，同时我还用了<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kYWlzeXVpLmNvbS8=\"> daisyui</span>, 这是一个基于 taiwindcss 的样式库，使用体验，放到下一篇文章说吧。<br>\ntailwindcss 中包含对很多基本 html 标签的样式定义，比如 h1、a、等等，都会变成普通的文本格式，这样一来，转换后的 markdown 文本就看起来一点样式就没有了。<br>\n<strong>好在</strong> tailwindcss 的设计者考虑到了这个问题，有些地方或者元素我们不希望 tailwind 的样式来影响，那么可以使用<span class=\"exturl\" data-url=\"aHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy90eXBvZ3JhcGh5LXBsdWdpbg==\"> @tailwindcss/typography</span> 来为指定的元素取消 tailwind 样式。</p>\n<p>使用起来也很简单：</p>\n<ol>\n<li>首先安装 @tailwindcss/typography 库</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-D</span> @tailwindcss/typography</pre></td></tr></table></figure><ol start=\"2\">\n<li>在 tailwind.config.js 中配置</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token literal-property property\">theme</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// ...</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@tailwindcss/typography'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// ...</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>在想要的元素上给定一个 class  prose</li>\n</ol>\n<pre><code class=\"language-vue\">&lt;div v-html=&quot;mdText&quot; id=&quot;preview&quot; class=&quot;prose markdown&quot; :class=&quot;classList&quot;  \n     :style=&quot;&#123;fontSize:fontSize+'px'&#125;&quot;&gt;&lt;/div&gt;\n</code></pre>\n<p>这样就 ok 了，原始的 html 样式就回来了。</p>\n<h2 id=\"渲染样式配置\"><a class=\"markdownIt-Anchor\" href=\"#渲染样式配置\">#</a> 渲染样式配置</h2>\n<p>作为配色障碍选手、设计小白，从零搭建一个好看的 markdown 主题不太现实，所以我参考（抄袭）了<span class=\"exturl\" data-url=\"aHR0cHM6Ly90eXBvcmEuaW8v\"> typora</span> 的一些开源主题。</p>\n<h3 id=\"样式切换\"><a class=\"markdownIt-Anchor\" href=\"#样式切换\">#</a> 样式切换</h3>\n<p>项目中使用 scss 作为 css 预处理语言。根据 typora 找来的主题，首先定义自己的一个类，比如 orangeheart 这个主题，它的原始 css 在这个地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2V2Z28yMDE3L3R5cG9yYS10aGVtZS1vcmFuZ2UtaGVhcnQvYmxvYi9tYXN0ZXIvb3JhbmdlaGVhcnQuY3Nz\">https://github.com/evgo2017/typora-theme-orange-heart/blob/master/orangeheart.css</span></p>\n<p>复制到自己的项目中，并且去掉没有必要的名字或者参数：</p>\n<figure class=\"highlight scss\"><figcaption data-lang=\"Sass (Scss)\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">.orangeheart</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> black<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0 10px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span> 1.6<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token property\">word-spacing</span><span class=\"token punctuation\">:</span> 0px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token property\">letter-spacing</span><span class=\"token punctuation\">:</span> 0px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token property\">word-break</span><span class=\"token punctuation\">:</span> break-word<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token property\">word-wrap</span><span class=\"token punctuation\">:</span> break-word<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> left<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> Optima-Regular<span class=\"token punctuation\">,</span> Optima<span class=\"token punctuation\">,</span> PingFangSC-light<span class=\"token punctuation\">,</span> PingFangTC-light<span class=\"token punctuation\">,</span> <span class=\"token string\">'PingFang SC'</span><span class=\"token punctuation\">,</span> Cambria<span class=\"token punctuation\">,</span> Cochin<span class=\"token punctuation\">,</span> Georgia<span class=\"token punctuation\">,</span> Times<span class=\"token punctuation\">,</span> <span class=\"token string\">'Times New Roman'</span><span class=\"token punctuation\">,</span> serif<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token comment\">/* 段落 */</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre> <span class=\"token selector\">+ p,</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> blockquote p </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token property\">padding-top</span><span class=\"token punctuation\">:</span> .5rem<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token property\">padding-bottom</span><span class=\"token punctuation\">:</span> .5rem<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span> 1.5rem<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> black<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre> <span class=\"token selector\">div[mdtype=toc] </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token selector\">h1 h2 h3 h4 h5 h6 </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 1.2em 0 1em<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> black<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token selector\">h1 </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1.5rem<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  <span class=\"token selector\">h2 </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1.3rem<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token property\">border-bottom</span><span class=\"token punctuation\">:</span> 2px solid <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>239<span class=\"token punctuation\">,</span> 112<span class=\"token punctuation\">,</span> 96<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  <span class=\"token selector\">h2 span </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> inline-block<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>239<span class=\"token punctuation\">,</span> 112<span class=\"token punctuation\">,</span> 96<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #ffffff<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 3px 10px 1px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token property\">border-top-right-radius</span><span class=\"token punctuation\">:</span> 3px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token property\">border-top-left-radius</span><span class=\"token punctuation\">:</span> 3px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token property\">margin-right</span><span class=\"token punctuation\">:</span> 3px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>  <span class=\"token selector\">h2:after </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> inline-block<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token property\">vertical-align</span><span class=\"token punctuation\">:</span> bottom<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token property\">border-bottom</span><span class=\"token punctuation\">:</span> 1.25rem solid #efebe9<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token property\">border-right</span><span class=\"token punctuation\">:</span> 1.25rem solid transparent<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>  <span class=\"token selector\">h3 </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1.3rem<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>  <span class=\"token selector\">h4 </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1.2rem<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>  <span class=\"token selector\">h5 </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1.1rem<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>  <span class=\"token selector\">h6 </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>  <span class=\"token comment\">/* 列表 */</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>  <span class=\"token selector\">ul,</pre></td></tr><tr><td data-num=\"78\"></td><td><pre>  ol </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> 8px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> 8px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token property\">padding-left</span><span class=\"token punctuation\">:</span> 25px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> black<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>  <span class=\"token selector\">ul </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token property\">list-style-type</span><span class=\"token punctuation\">:</span> disc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>  <span class=\"token selector\">ul ul </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token property\">list-style-type</span><span class=\"token punctuation\">:</span> square<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>  <span class=\"token selector\">ol </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token property\">list-style-type</span><span class=\"token punctuation\">:</span> decimal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>  <span class=\"token selector\">li section </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> 5px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> 5px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span> 1.7rem<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> left<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>1<span class=\"token punctuation\">,</span>1<span class=\"token punctuation\">,</span>1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 只要是纯黑色微信编辑器就会把 color 这个属性吞掉。。。*/</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 500<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>  <span class=\"token comment\">/* 引用 */</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>  <span class=\"token selector\">blockquote </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> .9em<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    <span class=\"token property\">border-left</span><span class=\"token punctuation\">:</span> 3px solid <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>239<span class=\"token punctuation\">,</span> 112<span class=\"token punctuation\">,</span> 96<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #6a737d<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 10px 10px 10px 20px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>    <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #fff9f9<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>  <span class=\"token comment\">/* 链接 */</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>  <span class=\"token selector\">a </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>    <span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    <span class=\"token property\">word-wrap</span><span class=\"token punctuation\">:</span> break-word<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>    <span class=\"token property\">border-bottom</span><span class=\"token punctuation\">:</span> 1px solid #1e6bb8<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>239<span class=\"token punctuation\">,</span> 112<span class=\"token punctuation\">,</span> 96<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>    <span class=\"token property\">border-bottom</span><span class=\"token punctuation\">:</span> 1px solid <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>239<span class=\"token punctuation\">,</span> 112<span class=\"token punctuation\">,</span> 96<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>  <span class=\"token comment\">/* 行内代码 */</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>  <span class=\"token selector\">p code,</pre></td></tr><tr><td data-num=\"127\"></td><td><pre>  li code </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> .9rem<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>    <span class=\"token property\">word-wrap</span><span class=\"token punctuation\">:</span> break-word<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 2px 4px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>    <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 4px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>    <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0 2px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span>  <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>239<span class=\"token punctuation\">,</span> 112<span class=\"token punctuation\">,</span> 96<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>27<span class=\"token punctuation\">,</span>31<span class=\"token punctuation\">,</span>35<span class=\"token punctuation\">,</span>.05<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> Operator Mono<span class=\"token punctuation\">,</span> Consolas<span class=\"token punctuation\">,</span> Monaco<span class=\"token punctuation\">,</span> Menlo<span class=\"token punctuation\">,</span> monospace<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>    <span class=\"token property\">word-break</span><span class=\"token punctuation\">:</span> break-all<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>  <span class=\"token comment\">/* 图片 */</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>  <span class=\"token selector\">img </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>    <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0 auto<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>    <span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>  <span class=\"token selector\">span img </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> inline-block<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>    <span class=\"token property\">border-right</span><span class=\"token punctuation\">:</span> 0px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>    <span class=\"token property\">border-left</span><span class=\"token punctuation\">:</span> 0px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>  <span class=\"token comment\">/* 表格 */</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>  <span class=\"token selector\">table </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> table<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>    <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> left<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>  <span class=\"token selector\">tbody </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>  <span class=\"token selector\">table tr </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>    <span class=\"token property\">border-top</span><span class=\"token punctuation\">:</span> 1px solid #ccc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> white<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>  table <span class=\"token property\">tr</span><span class=\"token punctuation\">:</span><span class=\"token function\">nth-child</span><span class=\"token punctuation\">(</span>2n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #F8F8F8<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>  <span class=\"token selector\">table tr th,</pre></td></tr><tr><td data-num=\"169\"></td><td><pre>  table tr td </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid #ccc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 5px 10px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>    <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> left<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>  <span class=\"token selector\">table tr th </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #f0f0f0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>  <span class=\"token comment\">/* 行内代码 */</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>  <span class=\"token selector\">span code, li code </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>239<span class=\"token punctuation\">,</span> 112<span class=\"token punctuation\">,</span> 96<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>  <span class=\"token comment\">/* 脚注上标 */</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>  <span class=\"token selector\">.md-footnote </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>239<span class=\"token punctuation\">,</span> 112<span class=\"token punctuation\">,</span> 96<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>  <span class=\"token selector\">.md-footnote > .md-text:before </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>    <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'['</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>  <span class=\"token selector\">.md-footnote > .md-text:after </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre>    <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">']'</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>  <span class=\"token comment\">/* 脚注 */</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>  <span class=\"token selector\">.md-def-name </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre>    <span class=\"token property\">padding-right</span><span class=\"token punctuation\">:</span> 1.8ch<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>  <span class=\"token selector\">.md-def-name:before </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre>    <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'['</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #000<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>  <span class=\"token selector\">.md-def-name:after </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #000<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre></pre></td></tr><tr><td data-num=\"209\"></td><td><pre>  <span class=\"token comment\">/* 代码块主题 */</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre>  <span class=\"token selector\">.md-fences:before </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre>    <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre>    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre>    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre>    <span class=\"token property\">background-size</span><span class=\"token punctuation\">:</span> 40px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"215\"></td><td><pre>    <span class=\"token property\">background-repeat</span><span class=\"token punctuation\">:</span> no-repeat<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"216\"></td><td><pre>    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #282c34<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"217\"></td><td><pre>    <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> -7px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"218\"></td><td><pre>    <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 5px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"219\"></td><td><pre>    <span class=\"token property\">background-position</span><span class=\"token punctuation\">:</span> 10px 10px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"220\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"221\"></td><td><pre></pre></td></tr><tr><td data-num=\"222\"></td><td><pre>  <span class=\"token comment\">/* CodeMirror 相关内容 */</span></pre></td></tr><tr><td data-num=\"223\"></td><td><pre>  <span class=\"token selector\">.CodeMirror-wrap .CodeMirror-scroll </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"224\"></td><td><pre>    <span class=\"token property\">overflow-x</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"225\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"226\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner.CodeMirror </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"227\"></td><td><pre>    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> .5rem<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"228\"></td><td><pre>    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #292d3e<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"229\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #a6accd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"230\"></td><td><pre>    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> Consolas<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"231\"></td><td><pre>    <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 4px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"232\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"233\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-keyword </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"234\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #c792ea <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"235\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"236\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-operator </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"237\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #89ddff <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"238\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"239\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-variable-2 </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"240\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #eeffff <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"241\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"242\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-variable-3,</pre></td></tr><tr><td data-num=\"243\"></td><td><pre>  .cm-s-inner .cm-type </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"244\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #f07178 <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"245\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"246\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-builtin </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"247\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #ffcb6b <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"248\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"249\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-atom </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"250\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #f78c6c <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"251\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"252\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-number </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"253\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #ff5370 <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"254\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"255\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-def </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"256\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #82aaff <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"257\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"258\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-string </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"259\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #c3e88d <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"260\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"261\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-string-2 </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"262\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #f07178 <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"263\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"264\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-comment </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"265\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #676e95 <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"266\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"267\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-variable </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"268\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #f07178 <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"269\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"270\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-tag </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"271\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #ff5370 <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"272\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"273\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-meta </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"274\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #ffcb6b <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"275\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"276\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-attribute </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"277\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #c792ea <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"278\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"279\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-property </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"280\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #c792ea <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"281\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"282\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-qualifier </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"283\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #decb6b <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"284\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"285\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-variable-3,</pre></td></tr><tr><td data-num=\"286\"></td><td><pre>  .cm-s-inner .cm-type </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"287\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #decb6b <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"288\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"289\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .cm-error </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"290\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>255<span class=\"token punctuation\">,</span> 255<span class=\"token punctuation\">,</span> 255<span class=\"token punctuation\">,</span> 1<span class=\"token punctuation\">)</span> <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"291\"></td><td><pre>    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #ff5370 <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"292\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"293\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .CodeMirror-matchingbracket </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"294\"></td><td><pre>    <span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> underline<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"295\"></td><td><pre>    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> white <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"296\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"297\"></td><td><pre>  <span class=\"token selector\">.CodeMirror div.CodeMirror-cursor </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"298\"></td><td><pre>    <span class=\"token property\">border-left</span><span class=\"token punctuation\">:</span> 1px solid <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>239<span class=\"token punctuation\">,</span> 112<span class=\"token punctuation\">,</span> 96<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"299\"></td><td><pre>    <span class=\"token property\">z-index</span><span class=\"token punctuation\">:</span> 3<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"300\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"301\"></td><td><pre></pre></td></tr><tr><td data-num=\"302\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner div.CodeMirror-selected </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"303\"></td><td><pre>    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>167<span class=\"token punctuation\">,</span> 178<span class=\"token punctuation\">,</span> 189<span class=\"token punctuation\">,</span> 0.2<span class=\"token punctuation\">)</span> <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"304\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"305\"></td><td><pre></pre></td></tr><tr><td data-num=\"306\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner.CodeMirror-focused div.CodeMirror-selected </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"307\"></td><td><pre>    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>167<span class=\"token punctuation\">,</span> 178<span class=\"token punctuation\">,</span> 189<span class=\"token punctuation\">,</span> 0.2<span class=\"token punctuation\">)</span> <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"308\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"309\"></td><td><pre></pre></td></tr><tr><td data-num=\"310\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .CodeMirror-selected,</pre></td></tr><tr><td data-num=\"311\"></td><td><pre>  .cm-s-inner .CodeMirror-selectedtext </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"312\"></td><td><pre>    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>167<span class=\"token punctuation\">,</span> 178<span class=\"token punctuation\">,</span> 189<span class=\"token punctuation\">,</span> 0.0<span class=\"token punctuation\">)</span> <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"313\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"314\"></td><td><pre></pre></td></tr><tr><td data-num=\"315\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .CodeMirror-line::-moz-selection,</pre></td></tr><tr><td data-num=\"316\"></td><td><pre>  .cm-s-inner .CodeMirror-line > span::-moz-selection,</pre></td></tr><tr><td data-num=\"317\"></td><td><pre>  .cm-s-inner .CodeMirror-line > span > span::-moz-selection </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"318\"></td><td><pre>    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>167<span class=\"token punctuation\">,</span> 178<span class=\"token punctuation\">,</span> 189<span class=\"token punctuation\">,</span> 0.2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"319\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"320\"></td><td><pre></pre></td></tr><tr><td data-num=\"321\"></td><td><pre>  <span class=\"token selector\">.cm-s-inner .CodeMirror-line::selection,</pre></td></tr><tr><td data-num=\"322\"></td><td><pre>  .cm-s-inner .CodeMirror-line > span::selection,</pre></td></tr><tr><td data-num=\"323\"></td><td><pre>  .cm-s-inner .CodeMirror-line > span > span::selection </span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"324\"></td><td><pre>    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>167<span class=\"token punctuation\">,</span> 178<span class=\"token punctuation\">,</span> 189<span class=\"token punctuation\">,</span> 0.2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"325\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"326\"></td><td><pre></pre></td></tr><tr><td data-num=\"327\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这里定义了类名为 orangeheart，然后再 nuxt （nuxt.config.ts）中需要引入定义的样式；</p>\n<figure class=\"highlight ts\"><figcaption data-lang=\"TypeScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">defineNuxtConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token operator\">...</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     css<span class=\"token operator\">:</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token string\">'@/assets/css/main.css'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token string\">'@/assets/css/font.css'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token string\">'@/assets/css/wechat_theme/index.scss'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token operator\">...</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>然后回到 md 的容器，添加 class： orangeheart  一切 ok 啦，样式出现啦，当然了，觉得不好看，可以自己再调整；</p>\n<p>接下来，再从 typora <code>偷</code> 几个主题，分别给不同的 class 名，将 class 动态绑定到元素上，这里就不再罗嗦了，相信用过 vue 的都知道咋搞了。</p>\n<h3 id=\"字体切换\"><a class=\"markdownIt-Anchor\" href=\"#字体切换\">#</a> 字体切换</h3>\n<p>从<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuMTAwZm9udC5jb20v\"> 100font</span> 找了几个免费的字体库，将里面的 ttf 文件放到我们的项目中，定义字体样式类：</p>\n<figure class=\"highlight scss\"><figcaption data-lang=\"Sass (Scss)\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">.deyihei</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'deyihei'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> normal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token url\">url</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../../font/deyihei.ttf'</span><span class=\"token punctuation\">)</span> <span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'truetype'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> deyihei <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token selector\">.sanjipomo</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'sanjipomo'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> normal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token url\">url</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../../font/三极泼墨体.ttf'</span><span class=\"token punctuation\">)</span> <span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'truetype'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> sanjipomo <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token selector\">.zibangwankuti</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'zibangwankuti'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> normal<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token url\">url</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../../font/字帮玩酷体.ttf'</span><span class=\"token punctuation\">)</span> <span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'truetype'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> zibangwankuti <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><code>注意</code> ：</p>\n<ul>\n<li>这里使用了！import 提高字体的优先级，否则可能因为已有的 font-family 而不生效。</li>\n</ul>\n<p>定义了三个字体类之后，还是可以动态绑定的方式给到 md 容器，这里也省略吧，别忘了默认字体。</p>\n<h3 id=\"字体大小切换\"><a class=\"markdownIt-Anchor\" href=\"#字体大小切换\">#</a> 字体大小切换</h3>\n<p>这个就更简单了，只是一个动态绑定的 style，就不赘述了。</p>\n<p>未完待续…</p>\n",
            "tags": [
                "前端",
                "nuxt",
                "axiss"
            ]
        },
        {
            "id": "https://fanlu.top/2023/05/16/%E5%89%8D%E7%AB%AF/vben-admin%E6%8D%A2%E8%82%A4%E5%AE%9E%E7%8E%B0/",
            "url": "https://fanlu.top/2023/05/16/%E5%89%8D%E7%AB%AF/vben-admin%E6%8D%A2%E8%82%A4%E5%AE%9E%E7%8E%B0/",
            "title": "vben-admin换肤实现",
            "date_published": "2023-05-16T00:19:08.000Z",
            "content_html": "<p>最近在 github 上看到了一个后台管理的前端项目，使用了 vue3+ts+vite+ant-vue 的技术，看起来很不错，功能特别丰富，clone 下来发现代码也写的特别好，比我现在的小白代码根本不在同一个等级，因此想要学习一下。 个人觉得从一个功能抽丝剥茧来学习一个功能的写法可能会对自己的技术提高有帮助。</p>\n<p>项目中的侧边栏提供了超多的主题选项，可以丰富的变换主题。因此本文想分析一下这个换肤是如何实现的。</p>\n<p><img data-src=\"https://secure2.wostatic.cn/static/wGUf6UvBJUZVXfAPhrzaF/image.png?auth_key=1684196309-2jkBMzvREcZ21xSJjxnEvU-0-4173f6dd779469091bae7835b4c93aa7\" alt=\"\"></p>\n<h2 id=\"黑色亮色主题切换\"><a class=\"markdownIt-Anchor\" href=\"#黑色亮色主题切换\">#</a> 黑色 / 亮色主题切换</h2>\n<p>主题切换组件 AppDarkModeToggle.vue</p>\n<ul>\n<li>定义点击事件 toggleDarkMode\n<ol>\n<li>\n<p>调用设置黑色主题函数 setDarkMode</p>\n<p>修改 pinia 状态中的 dark 模式，并将变量存储到 localStorage 中</p>\n</li>\n<li>\n<p>调用 updateDarkTheme</p>\n<ul>\n<li>获取 htmlRoot dom 节点，即本项目应用的根节点</li>\n<li>判断根节点是否包含 dark class 定义</li>\n<li>如果是 dark\n<ul>\n<li>判断是否为生产模式，并加载 dark 主题 css（由 vite-plugin-theme 支持）</li>\n<li>将根节点的 data-teme 设置为 dark</li>\n<li>并添加 class 为 dark</li>\n</ul>\n</li>\n<li>如果不是 dark\n<ul>\n<li>将根节点 data-theme 设置为 light</li>\n<li>并且移除 dark class</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n</li>\n</ul>\n<pre><code class=\"language-Python\">这里修改data-theme为dark，利用了less中条件判断语句\n例如：\n\n  html[data-theme='dark'] &#123;\n    .@&#123;prefix-cls&#125; &#123;\n      border: 1px solid rgb(196 188 188);\n    &#125;\n  &#125;\n\nps：less还支持动态变量名，6666\n</code></pre>\n<pre><code>3. 调用updateHeaderBgColor修改header的背景色\n    - 判断是否为dark模式，获取到颜色，如果不是暗色，那就获取当前设置的颜色\n</code></pre>\n<p>color = appStore.getHeaderSetting.bgColor;<br>\n- 将获取到的颜色设置 css 变量  setCssVar</p>\n<pre><code class=\"language-JavaScript\">export function setCssVar(prop: string, val: any, dom = docEle) &#123;\n  console.log(prop,val)\n  dom.style.setProperty(prop, val);\n&#125;\n</code></pre>\n<pre><code>    - 计算得到hover颜色（亮度提高6），同样设置css变量\n\n        这里用到了自定义的颜色函数，我觉得很有用\n</code></pre>\n<pre><code class=\"language-TypeScript\">/**\n * 判断是否 十六进制颜色值.\n * 输入形式可为 #fff000 #f00\n *\n * @param   String  color   十六进制颜色值\n * @return  Boolean\n */\nexport function isHexColor(color: string) &#123;\n  const reg = /^#([0-9a-fA-F]&#123;3&#125;|[0-9a-fA-f]&#123;6&#125;)$/;\n  return reg.test(color);\n&#125;\n\n/**\n * RGB 颜色值转换为 十六进制颜色值.\n * r, g, 和 b 需要在 [0, 255] 范围内\n *\n * @return  String          类似#ff00ff\n * @param r\n * @param g\n * @param b\n */\nexport function rgbToHex(r: number, g: number, b: number) &#123;\n  // tslint:disable-next-line:no-bitwise\n  const hex = ((r &lt;&lt; 16) | (g &lt;&lt; 8) | b).toString(16);\n  return '#' + new Array(Math.abs(hex.length - 7)).join('0') + hex;\n&#125;\n\n/**\n * Transform a HEX color to its RGB representation\n * @param &#123;string&#125; hex The color to transform\n * @returns The RGB representation of the passed color\n */\nexport function hexToRGB(hex: string) &#123;\n  let sHex = hex.toLowerCase();\n  if (isHexColor(hex)) &#123;\n    if (sHex.length === 4) &#123;\n      let sColorNew = '#';\n      for (let i = 1; i &lt; 4; i += 1) &#123;\n        sColorNew += sHex.slice(i, i + 1).concat(sHex.slice(i, i + 1));\n      &#125;\n      sHex = sColorNew;\n    &#125;\n    const sColorChange: number[] = [];\n    for (let i = 1; i &lt; 7; i += 2) &#123;\n      sColorChange.push(parseInt('0x' + sHex.slice(i, i + 2)));\n    &#125;\n    return 'RGB(' + sColorChange.join(',') + ')';\n  &#125;\n  return sHex;\n&#125;\n\nexport function colorIsDark(color: string) &#123;\n  if (!isHexColor(color)) return;\n  const [r, g, b] = hexToRGB(color)\n    .replace(/(?:\\(|\\)|rgb|RGB)*/g, '')\n    .split(',')\n    .map((item) =&gt; Number(item));\n  return r * 0.299 + g * 0.578 + b * 0.114 &lt; 192;\n&#125;\n\n/**\n * Darkens a HEX color given the passed percentage\n * @param &#123;string&#125; color The color to process\n * @param &#123;number&#125; amount The amount to change the color by\n * @returns &#123;string&#125; The HEX representation of the processed color\n */\nexport function darken(color: string, amount: number) &#123;\n  color = color.indexOf('#') &gt;= 0 ? color.substring(1, color.length) : color;\n  amount = Math.trunc((255 * amount) / 100);\n  return `#$&#123;subtractLight(color.substring(0, 2), amount)&#125;$&#123;subtractLight(\n    color.substring(2, 4),\n    amount,\n  )&#125;$&#123;subtractLight(color.substring(4, 6), amount)&#125;`;\n&#125;\n\n/**\n * Lightens a 6 char HEX color according to the passed percentage\n * @param &#123;string&#125; color The color to change\n * @param &#123;number&#125; amount The amount to change the color by\n * @returns &#123;string&#125; The processed color represented as HEX\n */\nexport function lighten(color: string, amount: number) &#123;\n  color = color.indexOf('#') &gt;= 0 ? color.substring(1, color.length) : color;\n  amount = Math.trunc((255 * amount) / 100);\n  return `#$&#123;addLight(color.substring(0, 2), amount)&#125;$&#123;addLight(\n    color.substring(2, 4),\n    amount,\n  )&#125;$&#123;addLight(color.substring(4, 6), amount)&#125;`;\n&#125;\n\n/* Suma el porcentaje indicado a un color (RR, GG o BB) hexadecimal para aclararlo */\n/**\n * Sums the passed percentage to the R, G or B of a HEX color\n * @param &#123;string&#125; color The color to change\n * @param &#123;number&#125; amount The amount to change the color by\n * @returns &#123;string&#125; The processed part of the color\n */\nfunction addLight(color: string, amount: number) &#123;\n  const cc = parseInt(color, 16) + amount;\n  const c = cc &gt; 255 ? 255 : cc;\n  return c.toString(16).length &gt; 1 ? c.toString(16) : `0$&#123;c.toString(16)&#125;`;\n&#125;\n\n/**\n * Calculates luminance of an rgb color\n * @param &#123;number&#125; r red\n * @param &#123;number&#125; g green\n * @param &#123;number&#125; b blue\n */\nfunction luminanace(r: number, g: number, b: number) &#123;\n  const a = [r, g, b].map((v) =&gt; &#123;\n    v /= 255;\n    return v &lt;= 0.03928 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\n  &#125;);\n  return a[0] * 0.2126 + a[1] * 0.7152 + a[2] * 0.0722;\n&#125;\n\n/**\n * Calculates contrast between two rgb colors\n * @param &#123;string&#125; rgb1 rgb color 1\n * @param &#123;string&#125; rgb2 rgb color 2\n */\nfunction contrast(rgb1: string[], rgb2: number[]) &#123;\n  return (\n    (luminanace(~~rgb1[0], ~~rgb1[1], ~~rgb1[2]) + 0.05) /\n    (luminanace(rgb2[0], rgb2[1], rgb2[2]) + 0.05)\n  );\n&#125;\n\n/**\n * Determines what the best text color is (black or white) based con the contrast with the background\n * @param hexColor - Last selected color by the user\n */\nexport function calculateBestTextColor(hexColor: string) &#123;\n  const rgbColor = hexToRGB(hexColor.substring(1));\n  const contrastWithBlack = contrast(rgbColor.split(','), [0, 0, 0]);\n\n  return contrastWithBlack &gt;= 12 ? '#000000' : '#FFFFFF';\n&#125;\n\n/**\n * Subtracts the indicated percentage to the R, G or B of a HEX color\n * @param &#123;string&#125; color The color to change\n * @param &#123;number&#125; amount The amount to change the color by\n * @returns &#123;string&#125; The processed part of the color\n */\nfunction subtractLight(color: string, amount: number) &#123;\n  const cc = parseInt(color, 16) - amount;\n  const c = cc &lt; 0 ? 0 : cc;\n  return c.toString(16).length &gt; 1 ? c.toString(16) : `0$&#123;c.toString(16)&#125;`;\n&#125;\n\n</code></pre>\n<pre><code>    - updateSidebarBgColor  修改侧边栏颜色 原理同上\n</code></pre>\n<p>以上大概有几个关键点：</p>\n<ol>\n<li>充分利用 less 的用法\n<ul>\n<li>条件语句</li>\n<li>动态前缀变量名</li>\n</ul>\n</li>\n<li>利用 js 来修改原生 css 变量的颜色，同时计算悬浮颜色</li>\n<li>项目中大部分样式类名以前缀方式定义，主 less 中定义了一个 vben 为 namespace，在 less 中作为全局变量；而 designSetting 中定义了 prefixCls 在 ts 中作为全局变量。 他们存在这对应关系，因此需要同时修改才能起作用。</li>\n</ol>\n<h2 id=\"导航栏模式切换\"><a class=\"markdownIt-Anchor\" href=\"#导航栏模式切换\">#</a> 导航栏模式切换</h2>\n<blockquote>\n<p>导航栏模式分为了四种：</p>\n</blockquote>\n<p><img data-src=\"https://secure2.wostatic.cn/static/sPjnd9xQ7suquNPauh5Qqw/image.png?auth_key=1684196309-2o96KrtYmowc5t254R8edZ-0-bbe91f85e3201ce1060d94391f94427b\" alt=\"\"></p>\n<ol>\n<li>左边可折叠菜单，右边上部面包屑，下部内容</li>\n<li>上下布局，上部面包屑，下面左边菜单右边内容</li>\n<li>上下布局，上面菜单，下面内容</li>\n<li>左右布局，左边菜单点击展开子目录，右上方面包屑，下方内容</li>\n</ol>\n<p>右边的样式选项都是通过自定义的 Picker 组件来实现的，导航栏模式选择的是 TypePicker 组件，传入的方法是 baseHandler:</p>\n<pre><code class=\"language-Vue\"> &lt;TypePicker\n    menuTypeList=&#123;menuTypeList&#125;\n    handler=&#123;(item: typeof menuTypeList[0]) =&gt; &#123;\n      baseHandler(HandlerEnum.CHANGE_LAYOUT, &#123;\n        mode: item.mode,\n        type: item.type,\n        split: unref(getIsHorizontal) ? false : undefined,\n      &#125;);\n    &#125;&#125;\n    def=&#123;unref(getMenuType)&#125;\n  /&gt;\n</code></pre>\n<p>其中 menuTypeList 表示上方提到的四种模式，其定义如下：</p>\n<pre><code class=\"language-TypeScript\">export const menuTypeList = [\n  &#123;\n    title: t('layout.setting.menuTypeSidebar'),\n    mode: MenuModeEnum.INLINE,\n    type: MenuTypeEnum.SIDEBAR,\n  &#125;,\n  &#123;\n    title: t('layout.setting.menuTypeMix'),\n    mode: MenuModeEnum.INLINE,\n    type: MenuTypeEnum.MIX,\n  &#125;,\n\n  &#123;\n    title: t('layout.setting.menuTypeTopMenu'),\n    mode: MenuModeEnum.HORIZONTAL,\n    type: MenuTypeEnum.TOP_MENU,\n  &#125;,\n  &#123;\n    title: t('layout.setting.menuTypeMixSidebar'),\n    mode: MenuModeEnum.INLINE,\n    type: MenuTypeEnum.MIX_SIDEBAR,\n  &#125;,\n];\n</code></pre>\n<blockquote>\n<p>ps: 由样式定义来看，less 支持不同状态下，class 后面拼接字符串的样式，比如 &amp;–active</p>\n</blockquote>\n<p>调用 handler 函数：</p>\n<ol>\n<li>获取 appStore 配置信息</li>\n<li>根据传来的 mode 和 type 生成新的 menuSetting</li>\n<li>将新的配置更新到 pinia 全局配置中</li>\n<li>更新来的配置几乎每一个属性都封装为一个 computed</li>\n</ol>\n<pre><code class=\"language-TypeScript\">export interface MenuSetting &#123;\n  bgColor: string;\n  fixed: boolean;\n  collapsed: boolean;\n  siderHidden: boolean;\n  canDrag: boolean;\n  show: boolean;\n  hidden: boolean;\n  split: boolean;\n  menuWidth: number;\n  mode: MenuModeEnum;\n  type: MenuTypeEnum;\n  theme: ThemeEnum;\n  topMenuAlign: 'start' | 'center' | 'end';\n  trigger: TriggerEnum;\n  accordion: boolean;\n  closeMixSidebarOnChange: boolean;\n  collapsedShowTitle: boolean;\n  mixSideTrigger: MixSidebarTriggerEnum;\n  mixSideFixed: boolean;\n&#125;\n\n</code></pre>\n<p>全都定义在 useMenuSetting.ts 中，这是一个<strong>自定义 hook</strong></p>\n<h2 id=\"系统主题切换\"><a class=\"markdownIt-Anchor\" href=\"#系统主题切换\">#</a> 系统主题切换</h2>\n<p>自定义组件 ThemeColorPicker 实现，包含三个 prop</p>\n<ol>\n<li>颜色列表</li>\n<li>默认颜色 通过 getThemeColor 计算属性获取（真实来源自 pinia 中存储的 themeColor）** 默认值都配置在 src/projectSetting.ts 下面 **</li>\n<li>event，表示事件 ID</li>\n</ol>\n<p>通过点击事件，调用 baseHandle 修改全局配置；</p>\n<p>调用 generateColors 方法生成一组颜色，这组颜色的计算可以参考：</p>\n<pre><code class=\"language-TypeScript\">export function generateColors(&#123;\n  color = primaryColor,\n  mixLighten,\n  mixDarken,\n  tinycolor,\n&#125;: GenerateColorsParams) &#123;\n  const arr = new Array(19).fill(0);\n  const lightens = arr.map((_t, i) =&gt; &#123;\n    return mixLighten(color, i / 5);\n  &#125;);\n\n  const darkens = arr.map((_t, i) =&gt; &#123;\n    return mixDarken(color, i / 5);\n  &#125;);\n\n  const alphaColors = arr.map((_t, i) =&gt; &#123;\n    return tinycolor(color)\n      .setAlpha(i / 20)\n      .toRgbString();\n  &#125;);\n\n  const shortAlphaColors = alphaColors.map((item) =&gt; item.replace(/\\s/g, '').replace(/0\\./g, '.'));\n\n  const tinycolorLightens = arr\n    .map((_t, i) =&gt; &#123;\n      return tinycolor(color)\n        .lighten(i * 5)\n        .toHexString();\n    &#125;)\n    .filter((item) =&gt; item !== '#ffffff');\n\n  const tinycolorDarkens = arr\n    .map((_t, i) =&gt; &#123;\n      return tinycolor(color)\n        .darken(i * 5)\n        .toHexString();\n    &#125;)\n    .filter((item) =&gt; item !== '#000000');\n  return [\n    ...lightens,\n    ...darkens,\n    ...alphaColors,\n    ...shortAlphaColors,\n    ...tinycolorDarkens,\n    ...tinycolorLightens,\n  ].filter((item) =&gt; !item.includes('-'));\n&#125;\n</code></pre>\n<p>然后利用 vite-plugin-theme 方法替换样式变量</p>\n<h2 id=\"顶栏主题\"><a class=\"markdownIt-Anchor\" href=\"#顶栏主题\">#</a> 顶栏主题</h2>\n<ul>\n<li>\n<p>自定义组件 ThemeColorPicker</p>\n</li>\n<li>\n<p>调用 updateHeaderBgColor 方法</p>\n<p>首先判断是否为夜间模式，夜间模式不生效；</p>\n<p>然后修改 css 变量–header-bg-color</p>\n<p>修改悬浮颜色： const hoverColor = lighten (color!, 6); 修改 css 变量</p>\n<p>修改 headerSetting： 判断选择的颜色是否属于暗色，然后结合当前是否为暗色模式，判断设置是否生效</p>\n</li>\n</ul>\n<h2 id=\"菜单主题\"><a class=\"markdownIt-Anchor\" href=\"#菜单主题\">#</a> 菜单主题</h2>\n<p>同顶栏主题</p>\n<h2 id=\"最后\"><a class=\"markdownIt-Anchor\" href=\"#最后\">#</a> 最后</h2>\n<blockquote>\n<p>vben 这个项目比较大，功能可以说是非常丰富，也可以说时非常冗杂，想要啃下来非常困难。 看到一个博客专门分析 vben 的可以参考：</p>\n</blockquote>\n",
            "tags": [
                "前端搬砖指南"
            ]
        }
    ]
}