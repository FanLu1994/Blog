{
    "version": "https://jsonfeed.org/version/1",
    "title": "何妨吟啸且徐行 • All posts by \"测试开发\" category",
    "description": "",
    "home_page_url": "https://fanlu.top",
    "items": [
        {
            "id": "https://fanlu.top/2023/10/24/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/Fastbot-Android/",
            "url": "https://fanlu.top/2023/10/24/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/Fastbot-Android/",
            "title": "Fastbot_Android",
            "date_published": "2023-10-24T00:50:37.000Z",
            "content_html": "<p>字节的一个安卓 monkey 测试工具</p>\n<p>参考 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTA2OTgxMDcvYXJ0aWNsZS9kZXRhaWxzLzEyNzM0NzcwNA==\">https://blog.csdn.net/u010698107/article/details/127347704</span> 进行操作<br>\n参考： <span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC81MTc3OTIxMTc=\">https://zhuanlan.zhihu.com/p/517792117</span></p>\n<h2 id=\"首先提取apk中的文本\"><a class=\"markdownIt-Anchor\" href=\"#首先提取apk中的文本\">#</a> 首先提取 apk 中的文本</h2>\n<p>这个可以改善模型的运作</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>aapt2 dump strings dfcf_0005564.apk <span class=\"token operator\">></span> max.valid.strings</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>adb push max.valid.strings /sdcard</pre></td></tr></table></figure><h3 id=\"测试一下豌豆荚app\"><a class=\"markdownIt-Anchor\" href=\"#测试一下豌豆荚app\">#</a> 测试一下豌豆荚 app</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>adb <span class=\"token parameter variable\">-s</span> 设备号 shell <span class=\"token assign-left variable\">CLASSPATH</span><span class=\"token operator\">=</span>/sdcard/monkeyq.jar:/sdcard/framework.jar:/sdcard/fastbot-thirdpart.jar <span class=\"token builtin class-name\">exec</span> app_process /system/bin com.android.commands.monkey.Monkey <span class=\"token parameter variable\">-p</span> com.wandoujia.phoenix2 <span class=\"token parameter variable\">--agent</span> reuseq --running-minutes <span class=\"token number\">2</span> <span class=\"token parameter variable\">--throttle</span> <span class=\"token number\">10</span> <span class=\"token parameter variable\">-v</span> <span class=\"token parameter variable\">-v</span></pre></td></tr></table></figure><p>覆盖率：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:44:19.113<span class=\"token punctuation\">]</span> Explored app activities:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:44:19.113<span class=\"token punctuation\">]</span>    <span class=\"token number\">1</span> com.pp.assistant.activity.AppDetailActivity</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:44:19.114<span class=\"token punctuation\">]</span>    <span class=\"token number\">2</span> com.pp.assistant.activity.BrowserActivity</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:44:19.114<span class=\"token punctuation\">]</span>    <span class=\"token number\">3</span> com.pp.assistant.activity.CommentReplyListActivity</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:44:19.114<span class=\"token punctuation\">]</span>    <span class=\"token number\">4</span> com.pp.assistant.activity.CommonWebActivity</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:44:19.114<span class=\"token punctuation\">]</span>    <span class=\"token number\">5</span> com.pp.assistant.activity.FullScreenImageActivity</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:44:19.114<span class=\"token punctuation\">]</span>    <span class=\"token number\">6</span> com.pp.assistant.activity.PPDefaultFragmentActivity</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:44:19.114<span class=\"token punctuation\">]</span>    <span class=\"token number\">7</span> com.pp.assistant.activity.PPMainActivity</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:44:19.114<span class=\"token punctuation\">]</span>    <span class=\"token number\">8</span> com.pp.assistant.activity.PPSearchActivity</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:44:19.115<span class=\"token punctuation\">]</span>    <span class=\"token number\">9</span> com.pp.assistant.activity.ReportWebActivity</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:44:19.115<span class=\"token punctuation\">]</span>   <span class=\"token number\">10</span> com.pp.assistant.activity.SearchResultActivity</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:44:19.115<span class=\"token punctuation\">]</span>   <span class=\"token number\">11</span> com.pp.assistant.activity.SettingActivity</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:44:19.115<span class=\"token punctuation\">]</span>   <span class=\"token number\">12</span> com.sina.weibo.sdk.web.WebActivity</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:44:19.115<span class=\"token punctuation\">]</span>   <span class=\"token number\">13</span> com.wandoujia.account.activities.PhoenixAccountActivity</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:44:19.115<span class=\"token punctuation\">]</span> Activity of Coverage: <span class=\"token number\">11.403508</span>%</pre></td></tr></table></figure><h2 id=\"测试一下无期迷途\"><a class=\"markdownIt-Anchor\" href=\"#测试一下无期迷途\">#</a> 测试一下无期迷途</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>adb <span class=\"token parameter variable\">-s</span> 设备号 shell <span class=\"token assign-left variable\">CLASSPATH</span><span class=\"token operator\">=</span>/sdcard/monkeyq.jar:/sdcard/framework.jar:/sdcard/fastbot-thirdpart.jar <span class=\"token builtin class-name\">exec</span> app_process /system/bin com.android.commands.monkey.Monkey <span class=\"token parameter variable\">-p</span> com.zy.wqmt.cn <span class=\"token parameter variable\">--agent</span> reuseq --running-minutes <span class=\"token number\">2</span> <span class=\"token parameter variable\">--throttle</span> <span class=\"token number\">10</span> <span class=\"token parameter variable\">-v</span> <span class=\"token parameter variable\">-v</span></pre></td></tr></table></figure><p>测试结果：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.642<span class=\"token punctuation\">]</span> Total app activities:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.643<span class=\"token punctuation\">]</span>    <span class=\"token number\">1</span> com.papegames.pcsdktp.RegisterAccountActivity</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.643<span class=\"token punctuation\">]</span>    <span class=\"token number\">2</span> com.tencent.midas.wx.APMidasWXPayActivity</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.643<span class=\"token punctuation\">]</span>    <span class=\"token number\">3</span> com.tencent.connect.common.AssistActivity</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.643<span class=\"token punctuation\">]</span>    <span class=\"token number\">4</span> com.tencent.tauth.AuthActivity</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.644<span class=\"token punctuation\">]</span>    <span class=\"token number\">5</span> com.mobile.auth.gatewayauth.activity.AuthWebVeiwActivity</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.644<span class=\"token punctuation\">]</span>    <span class=\"token number\">6</span> com.xiaomi.mipush.sdk.NotificationClickedActivity</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.645<span class=\"token punctuation\">]</span>    <span class=\"token number\">7</span> com.papegames.gamelib.ui.webview.NativeWebviewActivity</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.645<span class=\"token punctuation\">]</span>    <span class=\"token number\">8</span> com.sina.weibo.sdk.web.WebActivity</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.645<span class=\"token punctuation\">]</span>    <span class=\"token number\">9</span> com.alipay.sdk.app.H5PayActivity</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.645<span class=\"token punctuation\">]</span>   <span class=\"token number\">10</span> com.papegames.gamelib.ui.webview.WebviewActivity</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.646<span class=\"token punctuation\">]</span>   <span class=\"token number\">11</span> com.papegames.log.widget.LogcatActivity</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.646<span class=\"token punctuation\">]</span>   <span class=\"token number\">12</span> com.tencent.midas.jsbridge.APWebJSBridgeActivity</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.646<span class=\"token punctuation\">]</span>   <span class=\"token number\">13</span> com.papegames.gamelib.utils.logcat.AppInfoActivity</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.646<span class=\"token punctuation\">]</span>   <span class=\"token number\">14</span> com.papegames.gamelib.utils.logcat.DeutolActivity</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.646<span class=\"token punctuation\">]</span>   <span class=\"token number\">15</span> com.papegames.gamelib.utils.logcat.LogcatViewerActivity</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.647<span class=\"token punctuation\">]</span>   <span class=\"token number\">16</span> com.alipay.sdk.app.H5OpenAuthActivity</pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.647<span class=\"token punctuation\">]</span>   <span class=\"token number\">17</span> com.alipay.sdk.app.AlipayResultActivity</pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.647<span class=\"token punctuation\">]</span>   <span class=\"token number\">18</span> com.papegames.gamelib_unity.BaseUnityImplActivity</pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.647<span class=\"token punctuation\">]</span>   <span class=\"token number\">19</span> com.huawei.hms.activity.EnableServiceActivity</pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.647<span class=\"token punctuation\">]</span>   <span class=\"token number\">20</span> com.cmic.sso.sdk.activity.LoginAuthActivity</pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.648<span class=\"token punctuation\">]</span>   <span class=\"token number\">21</span> com.sina.weibo.sdk.share.ShareTransActivity</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.648<span class=\"token punctuation\">]</span>   <span class=\"token number\">22</span> com.tencent.midas.proxyactivity.APMidasPayProxyActivity</pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.648<span class=\"token punctuation\">]</span>   <span class=\"token number\">23</span> com.tencent.connect.webview.JumpShareActivity</pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.648<span class=\"token punctuation\">]</span>   <span class=\"token number\">24</span> com.tencent.midas.qq.APMidasQQWalletActivity</pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.648<span class=\"token punctuation\">]</span>   <span class=\"token number\">25</span> com.zy.wqmt.cn.wxapi.WXPayEntryActivity</pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.649<span class=\"token punctuation\">]</span>   <span class=\"token number\">26</span> com.huawei.hms.support.api.push.TransActivity</pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.649<span class=\"token punctuation\">]</span>   <span class=\"token number\">27</span> com.tencent.connect.webview.BrowserActivity</pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.649<span class=\"token punctuation\">]</span>   <span class=\"token number\">28</span> com.alipay.sdk.app.APayEntranceActivity</pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.649<span class=\"token punctuation\">]</span>   <span class=\"token number\">29</span> com.onevcat.uniwebview.UniWebViewFileChooserActivity</pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.649<span class=\"token punctuation\">]</span>   <span class=\"token number\">30</span> com.tencent.connect.avatar.ImageActivity</pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.649<span class=\"token punctuation\">]</span>   <span class=\"token number\">31</span> com.aliyun.ams.emas.push.NotificationActivity</pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.649<span class=\"token punctuation\">]</span>   <span class=\"token number\">32</span> com.huawei.hms.activity.BridgeActivity</pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.649<span class=\"token punctuation\">]</span>   <span class=\"token number\">33</span> com.papegames.pcsdktp.ForgetPasswordActivity</pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.650<span class=\"token punctuation\">]</span>   <span class=\"token number\">34</span> com.alipay.sdk.app.PayResultActivity</pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.650<span class=\"token punctuation\">]</span>   <span class=\"token number\">35</span> com.alipay.sdk.app.H5AuthActivity</pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.651<span class=\"token punctuation\">]</span>   <span class=\"token number\">36</span> com.mobile.auth.gatewayauth.LoginAuthActivity</pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.651<span class=\"token punctuation\">]</span> Explored app activities:</pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.651<span class=\"token punctuation\">]</span>    <span class=\"token number\">1</span> com.papegames.gamelib_unity.BaseUnityImplActivity</pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">[</span>Fastbot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2023</span>-10-23 08:49:52.651<span class=\"token punctuation\">]</span> Activity of Coverage: <span class=\"token number\">2.777778</span>%</pre></td></tr></table></figure><p>因为覆盖率是针对 activity 的，游戏中一般只有一个 activity。可以看出对游戏的支持比较差。</p>\n<h2 id=\"支持自定义操作序列\"><a class=\"markdownIt-Anchor\" href=\"#支持自定义操作序列\">#</a> 支持自定义操作序列</h2>\n<p>例如新建 max.xpath.actions</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>```bash</pre></td></tr><tr><td data-num=\"2\"></td><td><pre># 谷歌电话示例</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>[</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>&#123;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    \"prob\":1,</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    \"activity\":\"com.google.android.dialer.extensions.GoogleDialtactsActivity\",</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    \"times\":1,</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    \"actions\":[</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        &#123;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            \"xpath\":\"//*[@resource-id='com.google.android.dialer:id/dialpad_fab']\",</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            \"action\":\"CLICK\",</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            \"throttle\":2000</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        &#125;,</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        &#123;</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            \"xpath\":\"//*[@resource-id='com.google.android.dialer:id/search_edit_text']\",</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            \"action\":\"CLICK\",</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            \"text\":\"搜索联系人和地点\",</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            \"clearTest\":false,</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            \"throttle\":2000</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        &#125;</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    ]</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>]</pre></td></tr></table></figure><p>其中</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>prob：发生概率，<span class=\"token string\">\"prob\"</span>：1,代表发⽣概率为100%</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>activity：所属场景（当前页面所属的Activity）</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>times：重复次数，默认为1即可</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>actions：具体步骤的执行类型</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>throttle：action间隔事件（ms）</pre></td></tr></table></figure><p>action 类型包括</p>\n<figure class=\"highlight objectivec\"><figcaption data-lang=\"Objective-C\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>CLICK：点击，如果想要输入内容，则在action下补充text，如果有text属性则执行文本输入</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>LONG_CLICK：长按</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>BACK：返回</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>SCROLL_TOP_DOWN：从上向下滚动</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>SCROLL_BOTTOM_UP：从下向上滑动</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>SCROLL_LEFT_RIGHT：从左向右滑动</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>SCROLL_RIGHT_LEFT：从右向左滑动</pre></td></tr></table></figure><p>然后将文件推送到 /sdcard 里面</p>\n<h2 id=\"控制要测试的activity\"><a class=\"markdownIt-Anchor\" href=\"#控制要测试的activity\">#</a> 控制要测试的 activity</h2>\n<p>将要测试的 activity 写入 awl.strings 文件，并推送到 /sdcard<br>\n 运行时添加参数 <code>--act-whitelist-file /sdcard/awl.strings</code></p>\n<p>同样可以写一个黑名单<br>\n <code>--act-blacklist-file /sdcard/abl.strings</code></p>\n<h2 id=\"其他功能\"><a class=\"markdownIt-Anchor\" href=\"#其他功能\">#</a> 其他功能</h2>\n<ul>\n<li>屏蔽控件或者区域</li>\n<li>树剪枝屏蔽</li>\n<li>反混淆</li>\n<li>高速截图并打印 xml 结构</li>\n<li>权限自动授予</li>\n</ul>\n<p>参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC8xZDhkYTJmNzhiZGQ=\">https://www.jianshu.com/p/1d8da2f78bdd</span></p>\n<h2 id=\"原理\"><a class=\"markdownIt-Anchor\" href=\"#原理\">#</a> 原理</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC83MjgwNDM1MTQyMjQ0NjE0MjAy\">https://juejin.cn/post/7280435142244614202</span><br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2J5dGVkYW5jZS9GYXN0Ym90X0FuZHJvaWQvYmxvYi9tYWluL2Zhc3Rib3RfY29kZV9hbmFseXNpcy5tZA==\">https://github.com/bytedance/Fastbot_Android/blob/main/fastbot_code_analysis.md</span></p>\n",
            "tags": [
                "工具",
                "自动化测试"
            ]
        },
        {
            "id": "https://fanlu.top/2023/10/18/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/ghz-grpc%E5%8E%8B%E6%B5%8B%E5%B7%A5%E5%85%B7/",
            "url": "https://fanlu.top/2023/10/18/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/ghz-grpc%E5%8E%8B%E6%B5%8B%E5%B7%A5%E5%85%B7/",
            "title": "ghz-grpc压测工具",
            "date_published": "2023-10-18T13:59:42.000Z",
            "content_html": "<h1 id=\"介绍\"><a class=\"markdownIt-Anchor\" href=\"#介绍\">#</a> 介绍</h1>\n<h2 id=\"配置\"><a class=\"markdownIt-Anchor\" href=\"#配置\">#</a> 配置</h2>\n<ul>\n<li>支持配置文件、命令行配置</li>\n<li>可以指定 proto 源文件或者使用 protoc 生成的 protoset 描述文件</li>\n<li>支持指定协议名</li>\n<li>支持导入原始路径列表</li>\n<li>可以指定秘钥信息</li>\n<li>可以指定 tls 服务器名称</li>\n<li>可以跳过 tls</li>\n<li>是否异步请求，不等待上一个请求完成</li>\n<li>支持设置 rps</li>\n<li>支持指定加载进度\n<ul>\n<li>即可以逐步提高 rps 到预设值</li>\n</ul>\n</li>\n<li>可以指定并发工作器数量</li>\n<li>可以指定并发工作器添加策略\n<ul>\n<li>即逐步增加工作线程</li>\n</ul>\n</li>\n<li>指定请求总数</li>\n<li>指定超时时间，默认 20，不限制则设为 0</li>\n<li>指定持续时间</li>\n<li>指定停止策略：关闭、等待请求返回、忽略则忽略正在运行的请求</li>\n<li>指定请求体，以 json 格式</li>\n<li>指定请求体，以文件形式</li>\n<li>制定请求体，以二进制形式或者二进制文件</li>\n<li>指定元数据 ，json 字符串或者文件</li>\n<li>流式接口的传输测试</li>\n<li>…</li>\n<li>指定连接数，默认一个连接</li>\n<li>指定初始连接超时时间</li>\n<li>可以使用的 cpu 内核数</li>\n<li>指定客户端负载策略</li>\n</ul>\n<h2 id=\"输出\"><a class=\"markdownIt-Anchor\" href=\"#输出\">#</a> 输出</h2>\n<ul>\n<li>summary</li>\n<li>csv 格式</li>\n<li>html 格式</li>\n<li>json 格式</li>\n<li>prometheus 格式</li>\n<li>influxDB 格式</li>\n</ul>\n<h2 id=\"实践\"><a class=\"markdownIt-Anchor\" href=\"#实践\">#</a> 实践</h2>\n<h3 id=\"一个grpc服务demo\"><a class=\"markdownIt-Anchor\" href=\"#一个grpc服务demo\">#</a> 一个 grpc 服务 demo</h3>\n<h4 id=\"pb编写\"><a class=\"markdownIt-Anchor\" href=\"#pb编写\">#</a> pb 编写</h4>\n<pre><code class=\"language-proto\">syntax = &quot;proto3&quot;;  \npackage pb;  \n  \noption go_package=&quot;./;pb&quot;;  \n  \nmessage HelloRequest&#123;  \n  string name = 1;  \n  int32 id = 2;  \n&#125;  \n  \nmessage HelloReply&#123;  \n  string name = 1;  \n  string message = 2;  \n&#125;  \n  \n  \nservice HelloService&#123;  \n  rpc Hello(HelloRequest) returns (HelloReply);  \n&#125;\n</code></pre>\n<h4 id=\"生成go文件和服务端代码\"><a class=\"markdownIt-Anchor\" href=\"#生成go文件和服务端代码\">#</a> 生成 go 文件和服务端代码</h4>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>protoc <span class=\"token parameter variable\">--go_out</span><span class=\"token operator\">=</span>. <span class=\"token parameter variable\">--go_opt</span><span class=\"token operator\">=</span>paths<span class=\"token operator\">=</span>source_relative --go-grpc_out<span class=\"token operator\">=</span>. --go-grpc_opt<span class=\"token operator\">=</span>paths<span class=\"token operator\">=</span>source_relative *.proto</pre></td></tr></table></figure><h4 id=\"写一个服务\"><a class=\"markdownIt-Anchor\" href=\"#写一个服务\">#</a> 写一个服务</h4>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token string\">\"context\"</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token string\">\"fmt\"</span>    <span class=\"token string\">\"google.golang.org/grpc\"</span>    <span class=\"token string\">\"grpc_demo/pb\"</span>    <span class=\"token string\">\"log\"</span>    <span class=\"token string\">\"net\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">(</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    port <span class=\"token operator\">=</span> <span class=\"token string\">\":50051\"</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">type</span> myServer <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    pb<span class=\"token punctuation\">.</span>UnimplementedHelloServiceServer  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">*</span>myServer<span class=\"token punctuation\">)</span> <span class=\"token function\">Hello</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> req <span class=\"token operator\">*</span>pb<span class=\"token punctuation\">.</span>HelloRequest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pb<span class=\"token punctuation\">.</span>HelloReply<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello receice message:\"</span><span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    rep <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>pb<span class=\"token punctuation\">.</span>HelloReply<span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>       Name<span class=\"token punctuation\">:</span>    req<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>       Message<span class=\"token punctuation\">:</span> <span class=\"token string\">\"你好呀\"</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">return</span> rep<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>  </pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    lis<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> net<span class=\"token punctuation\">.</span><span class=\"token function\">Listen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tcp\"</span><span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>       log<span class=\"token punctuation\">.</span><span class=\"token function\">Fatalf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed to listen: %v\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token comment\">// 创建一个 gRPC 服务端实例  </span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    s <span class=\"token operator\">:=</span> grpc<span class=\"token punctuation\">.</span><span class=\"token function\">NewServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\">// 注册  </span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    pb<span class=\"token punctuation\">.</span><span class=\"token function\">RegisterHelloServiceServer</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>myServer<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">Serve</span><span class=\"token punctuation\">(</span>lis<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"38\"></td><td><pre>       log<span class=\"token punctuation\">.</span><span class=\"token function\">Fatalf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed to serve: %v\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"压测实践\"><a class=\"markdownIt-Anchor\" href=\"#压测实践\">#</a> 压测实践</h3>\n<p>其中参数解释</p>\n<ul>\n<li>proto 指定原型</li>\n<li>rps 指定目标 rps 值</li>\n<li>total 指定目标请求数</li>\n<li>call 指定要压的方法名</li>\n<li>data 指定请求体数据 json 格式，也可以是数组，那么会轮流请求给定的请求体</li>\n<li>skipTLS insecure 说明使用明文压测</li>\n<li>最后是服务地址</li>\n</ul>\n<p>结果可以看到</p>\n<ul>\n<li>总结：总请求数、总消耗时间、最慢请求、最快请求、平均时间、QPS</li>\n<li>响应时间直方图</li>\n<li>百分比延迟分布</li>\n<li>响应码分布</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ghz <span class=\"token parameter variable\">--proto</span><span class=\"token operator\">=</span>hello.proto <span class=\"token parameter variable\">--rps</span><span class=\"token operator\">=</span><span class=\"token number\">100</span> <span class=\"token parameter variable\">--total</span><span class=\"token operator\">=</span><span class=\"token number\">100</span> <span class=\"token parameter variable\">--call</span> pb.HelloService.Hello <span class=\"token parameter variable\">--data</span><span class=\"token operator\">=</span><span class=\"token string\">'&#123;\"name\": \"xiamu\",       \"id\": 1&#125;'</span> <span class=\"token parameter variable\">--skipTLS</span> <span class=\"token parameter variable\">--insecure</span>  <span class=\"token number\">192.168</span>.31.129:50051</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Summary:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  Count:\t<span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  Total:\t<span class=\"token number\">1.06</span> s</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  Slowest:\t<span class=\"token number\">497.68</span> ms</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  Fastest:\t<span class=\"token number\">4.33</span> ms</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  Average:\t<span class=\"token number\">189.71</span> ms</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  Requests/sec:\t<span class=\"token number\">94.43</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Response <span class=\"token function\">time</span> histogram:</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token number\">4.334</span>   <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>  <span class=\"token operator\">|</span>∎∎</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token number\">53.669</span>  <span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token number\">103.004</span> <span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token number\">152.339</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token number\">201.674</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token number\">251.008</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token number\">300.343</span> <span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token number\">349.678</span> <span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span>  <span class=\"token operator\">|</span>∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token number\">399.013</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>  <span class=\"token operator\">|</span>∎∎∎∎∎∎∎∎∎∎∎</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token number\">448.348</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>  <span class=\"token operator\">|</span>∎∎∎∎∎∎∎∎∎∎∎</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token number\">497.683</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>  <span class=\"token operator\">|</span>∎∎∎∎∎∎∎∎∎∎∎</pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>Latency distribution:</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token number\">10</span> % <span class=\"token keyword\">in</span> <span class=\"token number\">36.96</span> ms</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token number\">25</span> % <span class=\"token keyword\">in</span> <span class=\"token number\">67.50</span> ms</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token number\">50</span> % <span class=\"token keyword\">in</span> <span class=\"token number\">166.24</span> ms</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token number\">75</span> % <span class=\"token keyword\">in</span> <span class=\"token number\">286.13</span> ms</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token number\">90</span> % <span class=\"token keyword\">in</span> <span class=\"token number\">397.86</span> ms</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token number\">95</span> % <span class=\"token keyword\">in</span> <span class=\"token number\">448.03</span> ms</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token number\">99</span> % <span class=\"token keyword\">in</span> <span class=\"token number\">487.83</span> ms</pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>Status code distribution:</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token punctuation\">[</span>OK<span class=\"token punctuation\">]</span>   <span class=\"token number\">100</span> responses</pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>~/code/ghz_test ❯</pre></td></tr></table></figure><h2 id=\"原理\"><a class=\"markdownIt-Anchor\" href=\"#原理\">#</a> 原理</h2>\n<p>本质上还是 go 协程来实现的。<br>\n各个模块区分的很清晰：</p>\n<ul>\n<li>请求模块</li>\n<li>数据处理模块</li>\n<li>日志模块</li>\n<li>统计模块</li>\n<li>输出模块</li>\n<li>连接管理模块</li>\n</ul>\n<p>如果用来做自己的压测工具，并且接入 prometheus 监控应该不需要花太大功夫。<br>\n此外如果将其改造为 http 的压测，应该也非难事。</p>\n<h2 id=\"未来\"><a class=\"markdownIt-Anchor\" href=\"#未来\">#</a> 未来</h2>\n<p>代码里面还包含一个 ghz 命令，不过还在开发中，可以期待一下。</p>\n",
            "tags": [
                "工具",
                "网络"
            ]
        },
        {
            "id": "https://fanlu.top/2023/08/27/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/grpcurl/",
            "url": "https://fanlu.top/2023/08/27/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/grpcurl/",
            "title": "grpcurl",
            "date_published": "2023-08-27T05:41:39.000Z",
            "content_html": "<h2 id=\"curl\"><a class=\"markdownIt-Anchor\" href=\"#curl\">#</a> cURL</h2>\n<p>curl 是一个常见的命令行工具，用来请求 web 服务器接口，c 就是 client 的意思。<br>\ncurl 支持的协议很多</p>\n<ul>\n<li>http</li>\n<li>https</li>\n<li>FTP</li>\n<li>SCP</li>\n<li>SMTP</li>\n<li>Websockect</li>\n</ul>\n<p>其使用方法可以参考这里： <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVhbnlpZmVuZy5jb20vYmxvZy8yMDE5LzA5L2N1cmwtcmVmZXJlbmNlLmh0bWw=\">https://www.ruanyifeng.com/blog/2019/09/curl-reference.html</span></p>\n<p>但是 grpc 是不支持的.</p>\n<h2 id=\"grpcurl\"><a class=\"markdownIt-Anchor\" href=\"#grpcurl\">#</a> grpcurl</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2Z1bGxzdG9yeWRldi9ncnBjdXJs\">grpcurl</span> 就是用来支持 grpc 的一个工具。<br>\n支持功能包括：</p>\n<ul>\n<li>调用 RPC 接口，支持携带参数</li>\n<li>可以根据 proto 列出来所有的服务</li>\n<li>可以通过反射生成服务的描述</li>\n</ul>\n<h2 id=\"试用\"><a class=\"markdownIt-Anchor\" href=\"#试用\">#</a> 试用</h2>\n<h3 id=\"环境搭建\"><a class=\"markdownIt-Anchor\" href=\"#环境搭建\">#</a> 环境搭建</h3>\n<ul>\n<li>安装 go</li>\n<li>安装 grpcurl</li>\n<li>proto 生成相关（非必须）<br>\n这里就不赘述了。</li>\n</ul>\n<h3 id=\"启动grpc服务\"><a class=\"markdownIt-Anchor\" href=\"#启动grpc服务\">#</a> 启动 grpc 服务</h3>\n<p>首先本地起一个 grpc 服务，这里可以简单使用官方提供的模板。</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> clone <span class=\"token parameter variable\">-b</span> v1.57.0 <span class=\"token parameter variable\">--depth</span> <span class=\"token number\">1</span> https://github.com/grpc/grpc-go</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> grpc-go/examples/helloworld</pre></td></tr></table></figure><p>修改服务，因为 grpcurl 需要服务器支持反射</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 修改 grpc-go/examples/helloworld/greeter_server/main.go</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>s <span class=\"token operator\">:=</span> grpc<span class=\"token punctuation\">.</span><span class=\"token function\">NewServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>reflection<span class=\"token punctuation\">.</span><span class=\"token function\">Register</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 添加这一行</span></pre></td></tr></table></figure><p>然后启动服务</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>go run main.go</pre></td></tr></table></figure><h3 id=\"使用grpcurl\"><a class=\"markdownIt-Anchor\" href=\"#使用grpcurl\">#</a> 使用 grpcurl</h3>\n<h4 id=\"列举服务\"><a class=\"markdownIt-Anchor\" href=\"#列举服务\">#</a> 列举服务</h4>\n<p>因为本地不是 tls 服务，需要加 - plaintext</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">(</span>base<span class=\"token punctuation\">)</span> PS C:<span class=\"token punctuation\">\\</span>Users<span class=\"token punctuation\">\\</span>fanlu<span class=\"token operator\">></span> grpcurl <span class=\"token parameter variable\">-plaintext</span> localhost:50051 list</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>grpc.reflection.v1.ServerReflection</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>grpc.reflection.v1alpha.ServerReflection</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>helloworld.Greeter</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>// 指定service</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">(</span>base<span class=\"token punctuation\">)</span> PS C:<span class=\"token punctuation\">\\</span>Users<span class=\"token punctuation\">\\</span>fanlu<span class=\"token operator\">></span> grpcurl <span class=\"token parameter variable\">-plaintext</span> localhost:50051 list helloworld.Greeter</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>helloworld.Greeter.SayHello</pre></td></tr></table></figure><h4 id=\"描述协议\"><a class=\"markdownIt-Anchor\" href=\"#描述协议\">#</a> 描述协议</h4>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">(</span>base<span class=\"token punctuation\">)</span> PS C:<span class=\"token punctuation\">\\</span>Users<span class=\"token punctuation\">\\</span>fanlu<span class=\"token operator\">></span> grpcurl <span class=\"token parameter variable\">-plaintext</span> localhost:50051 describe helloworld.Greeter.SayHello</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>helloworld.Greeter.SayHello is a method:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>rpc SayHello <span class=\"token punctuation\">(</span> .helloworld.HelloRequest <span class=\"token punctuation\">)</span> returns <span class=\"token punctuation\">(</span> .helloworld.HelloReply <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"调用协议\"><a class=\"markdownIt-Anchor\" href=\"#调用协议\">#</a> 调用协议</h4>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">(</span>base<span class=\"token punctuation\">)</span> PS C:<span class=\"token punctuation\">\\</span>Users<span class=\"token punctuation\">\\</span>fanlu<span class=\"token operator\">></span> grpcurl <span class=\"token parameter variable\">-plaintext</span> localhost:50051 helloworld.Greeter.SayHello</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token string\">\"message\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"Hello \"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"注意要区分大小写\"><a class=\"markdownIt-Anchor\" href=\"#注意要区分大小写\">#</a> 注意：要区分大小写！</h2>\n<p>更复杂的用法还没用过。</p>\n",
            "tags": [
                "工具",
                "网络"
            ]
        },
        {
            "id": "https://fanlu.top/2023/07/14/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/SoloX%E4%B9%8B%E6%8A%A5%E5%91%8A%E5%AF%BC%E5%87%BA/",
            "url": "https://fanlu.top/2023/07/14/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/SoloX%E4%B9%8B%E6%8A%A5%E5%91%8A%E5%AF%BC%E5%87%BA/",
            "title": "SoloX之报告导出",
            "date_published": "2023-07-14T00:41:05.000Z",
            "content_html": "<h2 id=\"excel\"><a class=\"markdownIt-Anchor\" href=\"#excel\">#</a> excel</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token decorator annotation punctuation\">@api<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/apm/export/report'</span><span class=\"token punctuation\">,</span> methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'post'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'get'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">exportReport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    platform <span class=\"token operator\">=</span> method<span class=\"token punctuation\">.</span>_request<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token string\">'platform'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    scene <span class=\"token operator\">=</span> method<span class=\"token punctuation\">.</span>_request<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token string\">'scene'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        path <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>export_excel<span class=\"token punctuation\">(</span>platform<span class=\"token operator\">=</span>platform<span class=\"token punctuation\">,</span> scene<span class=\"token operator\">=</span>scene<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        result <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'status'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'msg'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'success'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'path'</span><span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        traceback<span class=\"token punctuation\">.</span>print_exc<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        result <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'status'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'msg'</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span>    </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> result</pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">export_excel</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> platform<span class=\"token punctuation\">,</span> scene<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">'Exporting excel ...'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    android_log_file_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'cpu_app'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'cpu_sys'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'mem_total'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'mem_native'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'mem_dalvik'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                             <span class=\"token string\">'battery_level'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'battery_tem'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'upflow'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'downflow'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'fps'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    ios_log_file_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'cpu_app'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'cpu_sys'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'mem_total'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'battery_tem'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'battery_current'</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                         <span class=\"token string\">'battery_voltage'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'battery_power'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'upflow'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'downflow'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'fps'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'gpu'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    log_file_list <span class=\"token operator\">=</span> android_log_file_list <span class=\"token keyword\">if</span> platform <span class=\"token operator\">==</span> <span class=\"token string\">'Android'</span> <span class=\"token keyword\">else</span> ios_log_file_list</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    wb <span class=\"token operator\">=</span> xlwt<span class=\"token punctuation\">.</span>Workbook<span class=\"token punctuation\">(</span>encoding <span class=\"token operator\">=</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    k <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">for</span> name <span class=\"token keyword\">in</span> log_file_list<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        ws1 <span class=\"token operator\">=</span> wb<span class=\"token punctuation\">.</span>add_sheet<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        ws1<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Time'</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        ws1<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Value'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        row <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token comment\">#start row</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        col <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token comment\">#start col</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">if</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>scene<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.log'</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>scene<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.log'</span></span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">for</span> lines <span class=\"token keyword\">in</span> f<span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                target <span class=\"token operator\">=</span> lines<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'='</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                k <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                    ws1<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> col <span class=\"token punctuation\">,</span>target<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                    col <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                row <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                col <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    xls_path <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">,</span> scene<span class=\"token punctuation\">,</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>scene<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.xls'</span></span><span class=\"token punctuation\">)</span>            </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    wb<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span>xls_path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">'Exporting excel success : &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>xls_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">return</span> xls_path</pre></td></tr></table></figure><h2 id=\"图片\"><a class=\"markdownIt-Anchor\" href=\"#图片\">#</a> 图片</h2>\n<p>通过 html2canvas 实现</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">screenshot</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">classname<span class=\"token punctuation\">,</span>downloadname</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">let</span> container <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByClassName</span><span class=\"token punctuation\">(</span>classname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//page-wrapper</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">html2canvas</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">canvas</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">let</span> imgData <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">toDataURL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">let</span> link <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        link<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> imgData<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        link<span class=\"token punctuation\">.</span>download <span class=\"token operator\">=</span> downloadname<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">let</span> flag <span class=\"token operator\">=</span> link<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"html\"><a class=\"markdownIt-Anchor\" href=\"#html\">#</a> html</h2>\n<p>通过模板渲染成一个 html 文件，然后导出</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">make_android_html</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> scene<span class=\"token punctuation\">,</span> summary <span class=\"token punctuation\">:</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">'Generating HTML ...'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    STATICPATH <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>dirname<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>realpath<span class=\"token punctuation\">(</span>__file__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    file_loader <span class=\"token operator\">=</span> FileSystemLoader<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>STATICPATH<span class=\"token punctuation\">,</span> <span class=\"token string\">'report_template'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    env <span class=\"token operator\">=</span> Environment<span class=\"token punctuation\">(</span>loader<span class=\"token operator\">=</span>file_loader<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    template <span class=\"token operator\">=</span> env<span class=\"token punctuation\">.</span>get_template<span class=\"token punctuation\">(</span><span class=\"token string\">'android.html'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">,</span> scene<span class=\"token punctuation\">,</span> <span class=\"token string\">'report.html'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'w+'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> fout<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        html_content <span class=\"token operator\">=</span> template<span class=\"token punctuation\">.</span>render<span class=\"token punctuation\">(</span>cpu_app<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'cpu_app'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>cpu_sys<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'cpu_sys'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                                       mem_total<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'mem_total'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>mem_native<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'mem_native'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                                       mem_dalvik<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'mem_dalvik'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>fps<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'fps'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                                       jank<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'jank'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>level<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'level'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                                       tem<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'tem'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>net_send<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'net_send'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                                       net_recv<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'net_recv'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>cpu_charts<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'cpu_charts'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                                       mem_charts<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'mem_charts'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>net_charts<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'net_charts'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                                       battery_charts<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'battery_charts'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>fps_charts<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'fps_charts'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                                       jank_charts<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'jank_charts'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        fout<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>html_content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    html_path <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">,</span> scene<span class=\"token punctuation\">,</span> <span class=\"token string\">'report.html'</span><span class=\"token punctuation\">)</span>    </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">'Generating HTML success : &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>html_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">return</span> html_path</pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">make_ios_html</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> scene<span class=\"token punctuation\">,</span> summary <span class=\"token punctuation\">:</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">'Generating HTML ...'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    STATICPATH <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>dirname<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>realpath<span class=\"token punctuation\">(</span>__file__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    file_loader <span class=\"token operator\">=</span> FileSystemLoader<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>STATICPATH<span class=\"token punctuation\">,</span> <span class=\"token string\">'report_template'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    env <span class=\"token operator\">=</span> Environment<span class=\"token punctuation\">(</span>loader<span class=\"token operator\">=</span>file_loader<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    template <span class=\"token operator\">=</span> env<span class=\"token punctuation\">.</span>get_template<span class=\"token punctuation\">(</span><span class=\"token string\">'ios.html'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">,</span> scene<span class=\"token punctuation\">,</span> <span class=\"token string\">'report.html'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'w+'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> fout<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        html_content <span class=\"token operator\">=</span> template<span class=\"token punctuation\">.</span>render<span class=\"token punctuation\">(</span>cpu_app<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'cpu_app'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>cpu_sys<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'cpu_sys'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>gpu<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'gpu'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                                       mem_total<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'mem_total'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>fps<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'fps'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                                       tem<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'tem'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>current<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'current'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                                       voltage<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'voltage'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>power<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'power'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                                       net_send<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'net_send'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>net_recv<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'net_recv'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                                       cpu_charts<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'cpu_charts'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>mem_charts<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'mem_charts'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                                       net_charts<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'net_charts'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>battery_charts<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'battery_charts'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                                       fps_charts<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'fps_charts'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>gpu_charts<span class=\"token operator\">=</span>summary<span class=\"token punctuation\">[</span><span class=\"token string\">'gpu_charts'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>            </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        fout<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>html_content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    html_path <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">,</span> scene<span class=\"token punctuation\">,</span> <span class=\"token string\">'report.html'</span><span class=\"token punctuation\">)</span>    </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">'Generating HTML success : &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>html_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">return</span> html_path</pre></td></tr></table></figure>",
            "tags": [
                "工具",
                "测试开发",
                "性能"
            ]
        },
        {
            "id": "https://fanlu.top/2023/07/14/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/SoloX%E4%B9%8B%E5%AE%89%E5%8D%93logcat/",
            "url": "https://fanlu.top/2023/07/14/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/SoloX%E4%B9%8B%E5%AE%89%E5%8D%93logcat/",
            "title": "SoloX之安卓logcat",
            "date_published": "2023-07-14T00:40:25.000Z",
            "content_html": "<p>安卓 logcat 通过一个 websocket 来进行传输；</p>\n<p>websocket 基于 socketio 实现</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token decorator annotation punctuation\">@socketio<span class=\"token punctuation\">.</span>on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'connect'</span><span class=\"token punctuation\">,</span> namespace<span class=\"token operator\">=</span><span class=\"token string\">'/logcat'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    socketio<span class=\"token punctuation\">.</span>emit<span class=\"token punctuation\">(</span><span class=\"token string\">'start connect'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'data'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Connected'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> namespace<span class=\"token operator\">=</span><span class=\"token string\">'/logcat'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    logDir <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>getcwd<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'adblog'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span>logDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        os<span class=\"token punctuation\">.</span>mkdir<span class=\"token punctuation\">(</span>logDir<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">global</span> thread</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    thread <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">with</span> thread_lock<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">if</span> thread<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            thread <span class=\"token operator\">=</span> socketio<span class=\"token punctuation\">.</span>start_background_task<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>backgroundThread<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>通过 adb 命令拿到 logcat 日志，输出到本地文件中，然后再从文件中读取日志，通过 websocket 传输</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">backgroundThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">global</span> thread</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\"># logger.info('Initializing adb environment ...')</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\"># os.system('adb kill-server')</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\"># os.system('adb start-server')</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        current_time <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">\"%Y%m%d%H\"</span><span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">.</span>localtime<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        logPath <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>getcwd<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'adblog'</span><span class=\"token punctuation\">,</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>current_time<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.log'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        logcat <span class=\"token operator\">=</span> subprocess<span class=\"token punctuation\">.</span>Popen<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'adb logcat *:E > </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>logPath<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">,</span> stdout<span class=\"token operator\">=</span>subprocess<span class=\"token punctuation\">.</span>PIPE<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                                  shell<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>logPath<span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">while</span> thread<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                socketio<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> f<span class=\"token punctuation\">.</span>readlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                    socketio<span class=\"token punctuation\">.</span>emit<span class=\"token punctuation\">(</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'data'</span><span class=\"token punctuation\">:</span> line<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> namespace<span class=\"token operator\">=</span><span class=\"token string\">'/logcat'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">if</span> logcat<span class=\"token punctuation\">.</span>poll<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            thread <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">except</span> Exception<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">pass</span></pre></td></tr></table></figure>",
            "tags": [
                "工具",
                "测试开发",
                "性能"
            ]
        },
        {
            "id": "https://fanlu.top/2023/07/14/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/SoloX%E4%B9%8B%E5%BA%94%E7%94%A8%E5%AE%89%E8%A3%85/",
            "url": "https://fanlu.top/2023/07/14/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/SoloX%E4%B9%8B%E5%BA%94%E7%94%A8%E5%AE%89%E8%A3%85/",
            "title": "SoloX之应用安装",
            "date_published": "2023-07-14T00:39:43.000Z",
            "content_html": "<h2 id=\"安卓\"><a class=\"markdownIt-Anchor\" href=\"#安卓\">#</a> 安卓</h2>\n<ol>\n<li>首先保存上传的 apk 到临时目录</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>file_path <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>currentPath<span class=\"token punctuation\">,</span> <span class=\"token string\">'&#123;&#125;.apk'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>unixtime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> install<span class=\"token punctuation\">.</span>uploadFile<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">,</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    install_status <span class=\"token operator\">=</span> install<span class=\"token punctuation\">.</span>installAPK<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>然后安装</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">installAPK</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    result <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell_noDevice<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span><span class=\"token string\">'install -r &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> result <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        os<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> result</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> result</pre></td></tr></table></figure><h2 id=\"ios\"><a class=\"markdownIt-Anchor\" href=\"#ios\">#</a> IOS</h2>\n<ol>\n<li>首先保存 ipa 包到临时目录</li>\n<li>然后安装 （基于 tidevice）</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">installIPA</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    result <span class=\"token operator\">=</span> Devices<span class=\"token punctuation\">.</span>execCmd<span class=\"token punctuation\">(</span><span class=\"token string\">'tidevice install &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> result <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        os<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> result</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> result</pre></td></tr></table></figure>",
            "tags": [
                "工具",
                "测试开发",
                "性能"
            ]
        },
        {
            "id": "https://fanlu.top/2023/07/14/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/SoloX%E4%B9%8B%E5%BA%94%E7%94%A8%E7%BD%91%E7%BB%9C%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86/",
            "url": "https://fanlu.top/2023/07/14/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/SoloX%E4%B9%8B%E5%BA%94%E7%94%A8%E7%BD%91%E7%BB%9C%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86/",
            "title": "SoloX之应用网络数据采集",
            "date_published": "2023-07-14T00:39:07.000Z",
            "content_html": "<h2 id=\"安卓\"><a class=\"markdownIt-Anchor\" href=\"#安卓\">#</a> 安卓</h2>\n<p>基于 linux 的原理，通过 <code>cat /proc/进程id/net/dev</code>  拿到网卡数据；</p>\n<p>间隔一秒 分别拿到两次发送数据量、接受数据量 （ <code>sendNum_pre</code>   <code> recNum_pre</code> ）</p>\n<p>然后计算数据差，得到网速</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getAndroidNet</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> wifi<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"Get Android send/recv data, unit:KB wlan0/rmnet0\"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    net <span class=\"token operator\">=</span> <span class=\"token string\">'wlan0'</span> <span class=\"token keyword\">if</span> wifi <span class=\"token keyword\">else</span> <span class=\"token string\">'rmnet0'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    cmd <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'cat /proc/</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>pid<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/net/dev |</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>d<span class=\"token punctuation\">.</span>filterType<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>net<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    output_pre <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span>cmd<span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>deviceId<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    m_pre <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">r'&#123;&#125;:\\s*(\\d+)\\s*\\d+\\s*\\d+\\s*\\d+\\s*\\d+\\s*\\d+\\s*\\d+\\s*\\d+\\s*(\\d+)'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>net<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> output_pre<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    sendNum_pre <span class=\"token operator\">=</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>m_pre<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    recNum_pre <span class=\"token operator\">=</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>m_pre<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    output_final <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span>cmd<span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>deviceId<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    m_final <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">r'&#123;&#125;:\\s*(\\d+)\\s*\\d+\\s*\\d+\\s*\\d+\\s*\\d+\\s*\\d+\\s*\\d+\\s*\\d+\\s*(\\d+)'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>net<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> output_final<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    sendNum_final <span class=\"token operator\">=</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>m_final<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    recNum_final <span class=\"token operator\">=</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>m_final<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    sendNum <span class=\"token operator\">=</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>sendNum_final <span class=\"token operator\">-</span> sendNum_pre<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    recNum <span class=\"token operator\">=</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>recNum_final <span class=\"token operator\">-</span> recNum_pre<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">return</span> sendNum<span class=\"token punctuation\">,</span> recNum</pre></td></tr></table></figure><h2 id=\"ios\"><a class=\"markdownIt-Anchor\" href=\"#ios\">#</a> IOS</h2>\n<p>间隔 3 秒拿到数据，基于 instrument</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getPerformance</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> perfTpe<span class=\"token punctuation\">:</span> DataType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span> perfTpe <span class=\"token operator\">==</span> DataType<span class=\"token punctuation\">.</span>NETWORK<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        perf <span class=\"token operator\">=</span> Performance<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>deviceId<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>perfTpe<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        perf<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>pkgName<span class=\"token punctuation\">,</span> callback<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>callback<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        perf<span class=\"token punctuation\">.</span>stop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        perf_value <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>downflow<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>upflow</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        perf <span class=\"token operator\">=</span> iosP<span class=\"token punctuation\">.</span>Performance<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>deviceId<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>perfTpe<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        perf_value <span class=\"token operator\">=</span> perf<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>pkgName<span class=\"token punctuation\">,</span> callback<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>callback<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> perf_value</pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">iter_network_flow</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">:</span> BaseDevice<span class=\"token punctuation\">,</span> rp<span class=\"token punctuation\">:</span> RunningProcess<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> Iterator<span class=\"token punctuation\">[</span>Any<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    n <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">with</span> d<span class=\"token punctuation\">.</span>connect_instruments<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> ts<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">for</span> nstat <span class=\"token keyword\">in</span> ts<span class=\"token punctuation\">.</span>iter_network<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token comment\"># if n &lt; 2:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token comment\">#     n += 1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token comment\">#     continue</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">yield</span> DataType<span class=\"token punctuation\">.</span>NETWORK<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token string\">\"timestamp\"</span><span class=\"token punctuation\">:</span> gen_stimestamp<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token string\">\"downFlow\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>nstat<span class=\"token punctuation\">[</span><span class=\"token string\">'rx.bytes'</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">or</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token string\">\"upFlow\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>nstat<span class=\"token punctuation\">[</span><span class=\"token string\">'tx.bytes'</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">or</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "工具",
                "测试开发",
                "性能"
            ]
        },
        {
            "id": "https://fanlu.top/2023/07/14/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/SoloX%E4%B9%8B%E5%BA%94%E7%94%A8%E5%90%AF%E5%8A%A8%E6%97%B6%E9%97%B4/",
            "url": "https://fanlu.top/2023/07/14/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/SoloX%E4%B9%8B%E5%BA%94%E7%94%A8%E5%90%AF%E5%8A%A8%E6%97%B6%E9%97%B4/",
            "title": "SoloX之应用启动时间",
            "date_published": "2023-07-14T00:37:42.000Z",
            "content_html": "<h2 id=\"安卓\"><a class=\"markdownIt-Anchor\" href=\"#安卓\">#</a> 安卓</h2>\n<p>adb 命令获取到 activity 启动时间</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getStartupTimeByAndroid</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> activity<span class=\"token punctuation\">,</span> deviceId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    result <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span><span class=\"token string\">'am start -W &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>activity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>deviceId<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">return</span> result</pre></td></tr></table></figure><h2 id=\"ios\"><a class=\"markdownIt-Anchor\" href=\"#ios\">#</a> IOS</h2>\n<p>基于 pydevice 获取</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getStartupTimeByiOS</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> pkgname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">import</span> ios_device</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">except</span> ImportError<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        logger<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span><span class=\"token string\">'py-ios-devices not found, please run [pip install py-ios-devices]'</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    result <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>execCmd<span class=\"token punctuation\">(</span><span class=\"token string\">'pyidevice instruments app_lifecycle -b &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>pkgname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>       </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> result</pre></td></tr></table></figure>",
            "tags": [
                "工具",
                "测试开发",
                "性能"
            ]
        },
        {
            "id": "https://fanlu.top/2023/07/14/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/SoloX%E4%B9%8BGPU%E6%80%A7%E8%83%BD%E9%87%87%E9%9B%86/",
            "url": "https://fanlu.top/2023/07/14/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/SoloX%E4%B9%8BGPU%E6%80%A7%E8%83%BD%E9%87%87%E9%9B%86/",
            "title": "SoloX之GPU性能采集",
            "date_published": "2023-07-14T00:36:15.000Z",
            "content_html": "<h2 id=\"安卓\"><a class=\"markdownIt-Anchor\" href=\"#安卓\">#</a> 安卓</h2>\n<p>目前不支持，其实是可以拿到的。</p>\n<h2 id=\"ios\"><a class=\"markdownIt-Anchor\" href=\"#ios\">#</a> ios</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">GPU</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> pkgName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        self<span class=\"token punctuation\">.</span>pkgName <span class=\"token operator\">=</span> pkgName</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">getGPU</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> noLog<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        apm <span class=\"token operator\">=</span> iosAPM<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>pkgName<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        gpu <span class=\"token operator\">=</span> apm<span class=\"token punctuation\">.</span>getPerformance<span class=\"token punctuation\">(</span>apm<span class=\"token punctuation\">.</span>gpu<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">if</span> noLog <span class=\"token keyword\">is</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            apm_time <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">'%H:%M:%S.%f'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            f<span class=\"token punctuation\">.</span>add_log<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">,</span><span class=\"token string\">'gpu.log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> apm_time<span class=\"token punctuation\">,</span> gpu<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">return</span> gpu</pre></td></tr></table></figure>",
            "tags": [
                "工具",
                "测试开发",
                "性能"
            ]
        },
        {
            "id": "https://fanlu.top/2023/07/14/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/SoloX%E4%B9%8B%E7%94%B5%E6%B1%A0%E6%80%A7%E8%83%BD%E9%87%87%E9%9B%86/",
            "url": "https://fanlu.top/2023/07/14/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/SoloX%E4%B9%8B%E7%94%B5%E6%B1%A0%E6%80%A7%E8%83%BD%E9%87%87%E9%9B%86/",
            "title": "SoloX之电池性能采集",
            "date_published": "2023-07-14T00:35:36.000Z",
            "content_html": "<h2 id=\"安卓\"><a class=\"markdownIt-Anchor\" href=\"#安卓\">#</a> 安卓</h2>\n<h3 id=\"获取安卓电量以及温度\"><a class=\"markdownIt-Anchor\" href=\"#获取安卓电量以及温度\">#</a> 获取安卓电量以及温度</h3>\n<ul>\n<li>首先切换到非充电模式   <code>dumpsys battery set status 1</code></li>\n<li>然后获取电量信息以及温度  <code>dumpsys battery</code></li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getAndroidBattery</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> noLog<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"Get android battery info, unit:%\"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\"># Switch mobile phone battery to non-charging state</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    cmd <span class=\"token operator\">=</span> <span class=\"token string\">'dumpsys battery set status 1'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span>cmd<span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>deviceId<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\"># Get phone battery info</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    cmd <span class=\"token operator\">=</span> <span class=\"token string\">'dumpsys battery'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    output <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span>cmd<span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>deviceId<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    level <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">u'level:\\s?(\\d+)'</span><span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    temperature <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">u'temperature:\\s?(\\d+)'</span><span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">if</span> noLog <span class=\"token keyword\">is</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>         apm_time <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">'%H:%M:%S.%f'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>         f<span class=\"token punctuation\">.</span>add_log<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">,</span><span class=\"token string\">'battery_level.log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> apm_time<span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>         f<span class=\"token punctuation\">.</span>add_log<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">,</span><span class=\"token string\">'battery_tem.log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> apm_time<span class=\"token punctuation\">,</span> temperature<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">return</span> level<span class=\"token punctuation\">,</span> temperature</pre></td></tr></table></figure><p>命令行会输出：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">(</span>base<span class=\"token punctuation\">)</span> PS C:<span class=\"token punctuation\">\\</span>Users<span class=\"token punctuation\">\\</span>fanlu<span class=\"token operator\">></span> adb shell dumpsys battery</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>* daemon not running<span class=\"token punctuation\">;</span> starting now at tcp:5037</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>* daemon started successfully</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Current Battery Service state:</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  AC powered: <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  USB powered: <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  Wireless powered: <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  Max charging current: <span class=\"token number\">150000</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  Max charging voltage: <span class=\"token number\">5000000</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  Charge counter: <span class=\"token number\">3904000</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  status: <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  health: <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  present: <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  level: <span class=\"token number\">96</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  scale: <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  voltage: <span class=\"token number\">4380</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  temperature: <span class=\"token number\">277</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  technology: Li-poly</pre></td></tr></table></figure><h2 id=\"ios\"><a class=\"markdownIt-Anchor\" href=\"#ios\">#</a> IOS</h2>\n<p>ios 直接使用 tidevice 的接口获取数据</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getiOSBattery</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> noLog<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"Get ios battery info, unit:%\"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    d  <span class=\"token operator\">=</span> tidevice<span class=\"token punctuation\">.</span>Device<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    ioDict <span class=\"token operator\">=</span>  d<span class=\"token punctuation\">.</span>get_io_power<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    tem <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span>_setValue<span class=\"token punctuation\">(</span>ioDict<span class=\"token punctuation\">[</span><span class=\"token string\">'Diagnostics'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'IORegistry'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Temperature'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    current <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span>_setValue<span class=\"token punctuation\">(</span><span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>ioDict<span class=\"token punctuation\">[</span><span class=\"token string\">'Diagnostics'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'IORegistry'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'InstantAmperage'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    voltage <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span>_setValue<span class=\"token punctuation\">(</span>ioDict<span class=\"token punctuation\">[</span><span class=\"token string\">'Diagnostics'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'IORegistry'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Voltage'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    power <span class=\"token operator\">=</span> current <span class=\"token operator\">*</span> voltage <span class=\"token operator\">/</span> <span class=\"token number\">1000</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span> noLog <span class=\"token keyword\">is</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        apm_time <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">'%H:%M:%S.%f'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        f<span class=\"token punctuation\">.</span>add_log<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">,</span><span class=\"token string\">'battery_tem.log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> apm_time<span class=\"token punctuation\">,</span> tem<span class=\"token punctuation\">)</span> <span class=\"token comment\"># unknown</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        f<span class=\"token punctuation\">.</span>add_log<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">,</span><span class=\"token string\">'battery_current.log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> apm_time<span class=\"token punctuation\">,</span> current<span class=\"token punctuation\">)</span> <span class=\"token comment\">#mA</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        f<span class=\"token punctuation\">.</span>add_log<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">,</span><span class=\"token string\">'battery_voltage.log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> apm_time<span class=\"token punctuation\">,</span> voltage<span class=\"token punctuation\">)</span> <span class=\"token comment\">#mV</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        f<span class=\"token punctuation\">.</span>add_log<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">,</span><span class=\"token string\">'battery_power.log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> apm_time<span class=\"token punctuation\">,</span> power<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">return</span> tem<span class=\"token punctuation\">,</span> current<span class=\"token punctuation\">,</span> voltage<span class=\"token punctuation\">,</span> power</pre></td></tr></table></figure>",
            "tags": [
                "工具",
                "测试开发",
                "性能"
            ]
        },
        {
            "id": "https://fanlu.top/2023/07/06/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/SoloX%E4%B9%8B%E5%86%85%E5%AD%98%E6%80%A7%E8%83%BD%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86/",
            "url": "https://fanlu.top/2023/07/06/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/SoloX%E4%B9%8B%E5%86%85%E5%AD%98%E6%80%A7%E8%83%BD%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86/",
            "title": "SoloX之内存性能数据采集",
            "date_published": "2023-07-06T12:57:47.000Z",
            "content_html": "<h2 id=\"安卓\"><a class=\"markdownIt-Anchor\" href=\"#安卓\">#</a> 安卓</h2>\n<h3 id=\"获取内存信息\"><a class=\"markdownIt-Anchor\" href=\"#获取内存信息\">#</a> 获取内存信息</h3>\n<p>给定进程的 PID，返回总内存、本地堆内存、dalvik 堆内存  并转换为 MB 单位</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getAndroidMem</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"Get the Android memory ,unit:MB\"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    cmd <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'dumpsys meminfo </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>pid<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    output <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span>cmd<span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>deviceId<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    m_total <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">r'TOTAL\\s*(\\d+)'</span><span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    m_native <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">r'Native Heap\\s*(\\d+)'</span><span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    m_dalvik <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">r'Dalvik Heap\\s*(\\d+)'</span><span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    totalPass <span class=\"token operator\">=</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>m_total<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    nativePass <span class=\"token operator\">=</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>m_native<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    dalvikPass <span class=\"token operator\">=</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>m_dalvik<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> totalPass<span class=\"token punctuation\">,</span> nativePass<span class=\"token punctuation\">,</span> dalvikPass</pre></td></tr></table></figure><h2 id=\"ios\"><a class=\"markdownIt-Anchor\" href=\"#ios\">#</a> IOS</h2>\n<p>同样通过 instruments 协议获取；不过只能获取到总内存</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getiOSMem</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"Get the iOS memory\"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    apm <span class=\"token operator\">=</span> iosAPM<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>pkgName<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    totalPass <span class=\"token operator\">=</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>apm<span class=\"token punctuation\">.</span>getPerformance<span class=\"token punctuation\">(</span>apm<span class=\"token punctuation\">.</span>memory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    nativePass <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    dalvikPass <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> totalPass<span class=\"token punctuation\">,</span> nativePass<span class=\"token punctuation\">,</span> dalvikPass</pre></td></tr></table></figure>",
            "tags": [
                "工具",
                "测试开发",
                "性能"
            ]
        },
        {
            "id": "https://fanlu.top/2023/07/06/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/SoloX%E4%B9%8BCPU%E6%80%A7%E8%83%BD%E9%87%87%E9%9B%86/",
            "url": "https://fanlu.top/2023/07/06/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/SoloX%E4%B9%8BCPU%E6%80%A7%E8%83%BD%E9%87%87%E9%9B%86/",
            "title": "SoloX之CPU性能采集",
            "date_published": "2023-07-06T12:57:07.000Z",
            "content_html": "<h2 id=\"安卓\"><a class=\"markdownIt-Anchor\" href=\"#安卓\">#</a> 安卓</h2>\n<h3 id=\"获取进程cpu使用时间\"><a class=\"markdownIt-Anchor\" href=\"#获取进程cpu使用时间\">#</a> 获取进程 cpu 使用时间</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getprocessCpuStat</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"get the cpu usage of a process at a certain time\"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    cmd <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'cat /proc/</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>pid<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/stat'</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    result <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span>cmd<span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>deviceId<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    r <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\\s+\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    toks <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    processCpu <span class=\"token operator\">=</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>toks<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>toks<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>toks<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>toks<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> processCpu</pre></td></tr></table></figure><h3 id=\"获取总cpu使用时间\"><a class=\"markdownIt-Anchor\" href=\"#获取总cpu使用时间\">#</a> 获取总 cpu 使用时间</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getTotalCpuStat</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"get the total cpu usage at a certain time\"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    cmd <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'cat /proc/stat |</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>d<span class=\"token punctuation\">.</span>filterType<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> ^cpu'</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    result <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span>cmd<span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>deviceId<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    r <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'(?&lt;!cpu)\\d+'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    toks <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    totalCpu <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        totalCpu <span class=\"token operator\">+=</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>toks<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>totalCpu<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"获取cpu核数\"><a class=\"markdownIt-Anchor\" href=\"#获取cpu核数\">#</a> 获取 CPU 核数</h3>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getCpuCores</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"get Android cpu cores\"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    cmd <span class=\"token operator\">=</span> <span class=\"token string\">'cat /sys/devices/system/cpu/online'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    result <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span>cmd<span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>deviceId<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        nums <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        nums <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">return</span> nums</pre></td></tr></table></figure><h3 id=\"获取系统cpu使用时间\"><a class=\"markdownIt-Anchor\" href=\"#获取系统cpu使用时间\">#</a> 获取系统 CPU 使用时间</h3>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getSysCpuStat</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"get the total cpu usage at a certain time\"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    cmd <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'cat /proc/stat |</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>d<span class=\"token punctuation\">.</span>filterType<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> ^cpu'</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    result <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span>cmd<span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>deviceId<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    r <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'(?&lt;!cpu)\\d+'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    toks <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    ileCpu <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>toks<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    sysCpu <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getTotalCpuStat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> ileCpu</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">return</span> sysCpu</pre></td></tr></table></figure><h3 id=\"采集结果\"><a class=\"markdownIt-Anchor\" href=\"#采集结果\">#</a> 采集结果</h3>\n<blockquote>\n<p>间隔 0.5s 连续获取两次采集结果，然后计算得到 cpu 使用率  <span class=\"exturl\" data-url=\"aHR0cHM6Ly95ZXN0ZXJtb3Jyb3cuZ2l0aHViLmlvLzIwMjEvMDMvMTcvQ1BVJUU0JUJEJUJGJUU3JTk0JUE4JUU3JThFJTg3Lw==\">https://yestermorrow.github.io/2021/03/17/CPU 使用率 /</span></p>\n</blockquote>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getAndroidCpuRate</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> noLog<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"get the Android cpu rate of a process\"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    processCpuTime_1 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getprocessCpuStat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    totalCpuTime_1 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getTotalCpuStat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    sysCpuTime_1 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getSysCpuStat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    processCpuTime_2 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getprocessCpuStat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    totalCpuTime_2 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getTotalCpuStat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    sysCpuTime_2 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getSysCpuStat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    appCpuRate <span class=\"token operator\">=</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>processCpuTime_2 <span class=\"token operator\">-</span> processCpuTime_1<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>totalCpuTime_2 <span class=\"token operator\">-</span> totalCpuTime_1<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    sysCpuRate <span class=\"token operator\">=</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>sysCpuTime_2 <span class=\"token operator\">-</span> sysCpuTime_1<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>totalCpuTime_2 <span class=\"token operator\">-</span> totalCpuTime_1<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">if</span> noLog <span class=\"token keyword\">is</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        apm_time <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">'%H:%M:%S.%f'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        f<span class=\"token punctuation\">.</span>add_log<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">,</span><span class=\"token string\">'cpu_app.log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> apm_time<span class=\"token punctuation\">,</span> appCpuRate<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        f<span class=\"token punctuation\">.</span>add_log<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">,</span><span class=\"token string\">'cpu_sys.log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> apm_time<span class=\"token punctuation\">,</span> sysCpuRate<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">return</span> appCpuRate<span class=\"token punctuation\">,</span> sysCpuRate</pre></td></tr></table></figure><h2 id=\"ios\"><a class=\"markdownIt-Anchor\" href=\"#ios\">#</a> IOS</h2>\n<blockquote>\n<p>ios 基于 pydevice 和 instrument 协议解析</p>\n</blockquote>\n<p>采集数据来自于 tidevice_instruments.py  iter_cpu_memory 方法</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">iter_cpu_memory</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> Iterator<span class=\"token punctuation\">[</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    Close connection after iterator stop</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    Iterator content eg:</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        [&#123;'CPUCount': 2,</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        'EnabledCPUs': 2,</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        'EndMachAbsTime': 2158497307470,</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        'PerCPUUsage': [&#123;'CPU_NiceLoad': 0.0,</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                        'CPU_SystemLoad': -1.0,</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                        'CPU_TotalLoad': 13.0,</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                        'CPU_UserLoad': -1.0&#125;,</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                        &#123;'CPU_NiceLoad': 0.0,</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                        'CPU_SystemLoad': -1.0,</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                        'CPU_TotalLoad': 31.0,</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                        'CPU_UserLoad': -1.0&#125;],</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        'StartMachAbsTime': 2158473307786,</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        'SystemCPUUsage': &#123;'CPU_NiceLoad': 0.0,</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                            'CPU_SystemLoad': -1.0,</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                            'CPU_TotalLoad': 44.0,</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                            'CPU_UserLoad': -1.0&#125;,</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        'Type': 33&#125;,</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        &#123;'EndMachAbsTime': 2158515468993,</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        \"cpuUsage\", \"ctxSwitch\", \"intWakeups\", \"physFootprint\",</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            \"memResidentSize\", \"memAnon\", \"pid\"</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        'Processes': &#123;0: [0.20891292720792148, # cpuUsage</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                            335770139, # contextSwitch</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                            120505483, # interruptWakeups</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                            7913472,   # physical Footprint</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                            869646336, # memory RSS</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                            232210432, # memory Anon?</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                            0],        # pid</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                        1: [0.0005502246751775457,</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                            691065,</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                            6038,</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                            12353840,</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                            4177920,</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                            12255232,</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                            1]</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                        &#125;</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        &#125;]</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    config <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token string\">\"bm\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token string\">\"cpuUsage\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token string\">\"procAttrs\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            <span class=\"token string\">\"memVirtualSize\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cpuUsage\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ctxSwitch\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"intWakeups\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token string\">\"physFootprint\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"memResidentSize\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"memAnon\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"pid\"</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token string\">\"sampleInterval\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1000000000</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 1e9 ns == 1s</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token string\">\"sysAttrs\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token string\">\"vmExtPageCount\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"vmFreeCount\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"vmPurgeableCount\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            <span class=\"token string\">\"vmSpeculativeCount\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"physMemSize\"</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token string\">\"ur\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1000</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    channel_id <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>make_channel<span class=\"token punctuation\">(</span>InstrumentsService<span class=\"token punctuation\">.</span>Sysmontap<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    self<span class=\"token punctuation\">.</span>call_message<span class=\"token punctuation\">(</span>channel_id<span class=\"token punctuation\">,</span> <span class=\"token string\">\"setConfig:\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>config<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    self<span class=\"token punctuation\">.</span>call_message<span class=\"token punctuation\">(</span>channel_id<span class=\"token punctuation\">,</span> <span class=\"token string\">\"start\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token comment\"># channel = self.make_channel(</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token comment\">#     \"com.apple.instruments.server.services.processcontrol\")</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token comment\"># aux = AUXMessageBuffer()</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token comment\"># aux.append_obj(1)  # TODO: pid</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token comment\"># payload = DTXPayload.build(\"startObservingPid:\", aux)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token comment\"># self.send_dtx_message(channel, payload)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    notification_channel_id <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> channel_id</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token keyword\">for</span> m <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>iter_message<span class=\"token punctuation\">(</span>Event<span class=\"token punctuation\">.</span>NOTIFICATION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            <span class=\"token keyword\">if</span> m<span class=\"token punctuation\">.</span>flags <span class=\"token operator\">==</span> <span class=\"token number\">0x01</span> <span class=\"token keyword\">and</span> m<span class=\"token punctuation\">.</span>channel_id <span class=\"token operator\">==</span> notification_channel_id<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>                <span class=\"token keyword\">yield</span> m<span class=\"token punctuation\">.</span>result</pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token keyword\">except</span> GeneratorExit<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        self<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 停止 connection，防止消息不停的发过来，暂时不会别的方法</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token comment\"># print(\"Stop channel\")</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        <span class=\"token comment\">## The following code is not working</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token comment\"># self.call_message(channel_id, \"stopSampling\")</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        <span class=\"token comment\"># aux = AUXMessageBuffer()</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        <span class=\"token comment\"># aux.append_obj(channel_id)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        <span class=\"token comment\"># self.send_dtx_message(channel_id, DTXPayload.build('_channelCanceled:', aux))</span></pre></td></tr></table></figure><ul>\n<li>该方法与 instrument 建立通信 发送协议请求，获取数据<br>\n其数据结果包含了</li>\n<li>cpu 数量</li>\n<li>启动的 cpu</li>\n<li>单个 cpu 使用率</li>\n<li>…</li>\n</ul>\n",
            "tags": [
                "工具",
                "测试开发",
                "性能"
            ]
        },
        {
            "id": "https://fanlu.top/2023/07/01/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/solox%E4%B9%8Bfps%E6%80%A7%E8%83%BD%E9%87%87%E9%9B%86/",
            "url": "https://fanlu.top/2023/07/01/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/solox%E4%B9%8Bfps%E6%80%A7%E8%83%BD%E9%87%87%E9%9B%86/",
            "title": "solox之fps性能采集",
            "date_published": "2023-07-01T14:14:39.000Z",
            "content_html": "<h2 id=\"安卓\"><a class=\"markdownIt-Anchor\" href=\"#安卓\">#</a> 安卓</h2>\n<p>通过 fpsMonitor 类获取到 fps 计算器；</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getAndroidFps</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> noLog<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"get Android Fps, unit:HZ\"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    monitors <span class=\"token operator\">=</span> FPSMonitor<span class=\"token punctuation\">(</span>device_id<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>deviceId<span class=\"token punctuation\">,</span> package_name<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>pkgName<span class=\"token punctuation\">,</span> frequency<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                          surfaceview<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>surfaceview<span class=\"token punctuation\">,</span> start_time<span class=\"token operator\">=</span>TimeUtils<span class=\"token punctuation\">.</span>getCurrentTimeUnderline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    monitors<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    fps<span class=\"token punctuation\">,</span> jank <span class=\"token operator\">=</span> monitors<span class=\"token punctuation\">.</span>stop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span> noLog <span class=\"token keyword\">is</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        apm_time <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">'%H:%M:%S.%f'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        f<span class=\"token punctuation\">.</span>add_log<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">,</span><span class=\"token string\">'fps.log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> apm_time<span class=\"token punctuation\">,</span> fps<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        f<span class=\"token punctuation\">.</span>add_log<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">,</span><span class=\"token string\">'jank.log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> apm_time<span class=\"token punctuation\">,</span> jank<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> fps<span class=\"token punctuation\">,</span> jank</pre></td></tr></table></figure><p>在 FPSMonitor 中使用 SurfaceStatsCollector 来采集 FPS 数据</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">FPSMonitor</span><span class=\"token punctuation\">(</span>Monitor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> device_id<span class=\"token punctuation\">,</span> package_name<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> frequency<span class=\"token operator\">=</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> timeout<span class=\"token operator\">=</span><span class=\"token number\">24</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> fps_queue<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                 jank_threshold<span class=\"token operator\">=</span><span class=\"token number\">166</span><span class=\"token punctuation\">,</span> use_legacy<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> surfaceview<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> start_time<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        self<span class=\"token punctuation\">.</span>start_time <span class=\"token operator\">=</span> start_time</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        self<span class=\"token punctuation\">.</span>use_legacy <span class=\"token operator\">=</span> use_legacy</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        self<span class=\"token punctuation\">.</span>frequency <span class=\"token operator\">=</span> frequency  <span class=\"token comment\"># 取样频率</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        self<span class=\"token punctuation\">.</span>jank_threshold <span class=\"token operator\">=</span> jank_threshold</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        self<span class=\"token punctuation\">.</span>device <span class=\"token operator\">=</span> device_id</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        self<span class=\"token punctuation\">.</span>timeout <span class=\"token operator\">=</span> timeout</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        self<span class=\"token punctuation\">.</span>surfaceview <span class=\"token operator\">=</span> surfaceview</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> package_name<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            package_name <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">.</span>adb<span class=\"token punctuation\">.</span>get_foreground_process<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        self<span class=\"token punctuation\">.</span>package <span class=\"token operator\">=</span> package_name</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        self<span class=\"token punctuation\">.</span>fpscollector <span class=\"token operator\">=</span> SurfaceStatsCollector<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>frequency<span class=\"token punctuation\">,</span> package_name<span class=\"token punctuation\">,</span> fps_queue<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                                                  self<span class=\"token punctuation\">.</span>jank_threshold<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>surfaceview<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>use_legacy<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>SurfaceStatsCollector 涵盖的功能有：</p>\n<h4 id=\"获取surface的activity名字\"><a class=\"markdownIt-Anchor\" href=\"#获取surface的activity名字\">#</a> 获取 surface 的 activity 名字</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_surfaceview_activity</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    activity_name <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    activity_line <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        dumpsys_result <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span><span class=\"token string\">'dumpsys SurfaceFlinger --list | &#123;&#125; &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span>filterType<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>package_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        dumpsys_result_list <span class=\"token operator\">=</span> dumpsys_result<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>    </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> dumpsys_result_list<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">if</span> line<span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span><span class=\"token string\">'SurfaceView'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> line<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>package_name<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                activity_line <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">if</span> activity_line<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">if</span> activity_line<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>      </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                activity_name <span class=\"token operator\">=</span> activity_line<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                activity_name <span class=\"token operator\">=</span> activity_line<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'SurfaceView'</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'['</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">']'</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>    </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            activity_name <span class=\"token operator\">=</span> dumpsys_result_list<span class=\"token punctuation\">[</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>dumpsys_result_list<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> activity_name<span class=\"token punctuation\">.</span>__contains__<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>package_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                logger<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span><span class=\"token string\">'get activity name failed, Please provide SurfaceFlinger --list information to the author'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">'dumpsys SurfaceFlinger --list info: &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>dumpsys_result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">except</span> Exception<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        traceback<span class=\"token punctuation\">.</span>print_exc<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        logger<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span><span class=\"token string\">'get activity name failed, Please provide SurfaceFlinger --list information to the author'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">'dumpsys SurfaceFlinger --list info: &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>dumpsys_result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">return</span> activity_name</pre></td></tr></table></figure><h4 id=\"获取聚焦的activity名字\"><a class=\"markdownIt-Anchor\" href=\"#获取聚焦的activity名字\">#</a> 获取聚焦的 activity 名字</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_focus_activity</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    activity_name <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    activity_line <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    dumpsys_result <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span><span class=\"token string\">'dumpsys window windows'</span><span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    dumpsys_result_list <span class=\"token operator\">=</span> dumpsys_result<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> dumpsys_result_list<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">if</span> line<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'mCurrentFocus'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            activity_line <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span> activity_line<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        activity_line_split <span class=\"token operator\">=</span> activity_line<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> activity_name</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>activity_line_split<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">if</span> activity_line_split<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'u0'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            activity_name <span class=\"token operator\">=</span> activity_line_split<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>rstrip<span class=\"token punctuation\">(</span><span class=\"token string\">'&#125;'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            activity_name <span class=\"token operator\">=</span> activity_line_split<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> activity_name<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        activity_name <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>get_surfaceview_activity<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>        </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">return</span> activity_name</pre></td></tr></table></figure><h4 id=\"获取前台进程名字\"><a class=\"markdownIt-Anchor\" href=\"#获取前台进程名字\">#</a> 获取前台进程名字</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_foreground_process</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    focus_activity <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>get_focus_activity<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> focus_activity<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">return</span> focus_activity<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span></pre></td></tr></table></figure><h4 id=\"获取sdk版本\"><a class=\"markdownIt-Anchor\" href=\"#获取sdk版本\">#</a> 获取 sdk 版本</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_sdk_version</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    sdk_version <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span><span class=\"token string\">'getprop ro.build.version.sdk'</span><span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">return</span> sdk_version</pre></td></tr></table></figure><h4 id=\"版本兼容\"><a class=\"markdownIt-Anchor\" href=\"#版本兼容\">#</a> 版本兼容</h4>\n<p>为了兼容不同版本的安卓系统，做了两套方法，在启动时进行区分：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> start_time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> self<span class=\"token punctuation\">.</span>use_legacy_method<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            self<span class=\"token punctuation\">.</span>focus_window <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>get_focus_activity<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>focus_window<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'$'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                self<span class=\"token punctuation\">.</span>focus_window <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>focus_window<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'$'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'\\$'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">except</span> Exception<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            logger<span class=\"token punctuation\">.</span>warning<span class=\"token punctuation\">(</span><span class=\"token string\">u'Unable to dynamically obtain the current activity name, using page_ Flip statistics full screen frame rate'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            self<span class=\"token punctuation\">.</span>use_legacy_method <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            self<span class=\"token punctuation\">.</span>surface_before <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_get_surface_stats_legacy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        logger<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">(</span><span class=\"token string\">\"dumpsys SurfaceFlinger --latency-clear is none\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        self<span class=\"token punctuation\">.</span>use_legacy_method <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        self<span class=\"token punctuation\">.</span>surface_before <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_get_surface_stats_legacy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    self<span class=\"token punctuation\">.</span>collector_thread <span class=\"token operator\">=</span> threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>_collector_thread<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    self<span class=\"token punctuation\">.</span>collector_thread<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    self<span class=\"token punctuation\">.</span>calculator_thread <span class=\"token operator\">=</span> threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>_calculator_thread<span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>start_time<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    self<span class=\"token punctuation\">.</span>calculator_thread<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>这里分别启动了采集线程和计算线程。</p>\n<h4 id=\"旧版本方法\"><a class=\"markdownIt-Anchor\" href=\"#旧版本方法\">#</a> 旧版本方法</h4>\n<blockquote>\n<p>获取当前的 surface 索引和时间戳</p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">_get_surface_stats_legacy</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"Legacy method (before JellyBean), returns the current Surface index</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>         and timestamp.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    Calculate FPS by measuring the difference of Surface index returned by</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    SurfaceFlinger in a period of time.</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    Returns:</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        Dict of &#123;page_flip_count (or 0 if there was an error), timestamp&#125;.</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    cur_surface <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    timestamp <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    ret <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span><span class=\"token string\">\"service call SurfaceFlinger 1013\"</span><span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> ret<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">match</span> <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'^Result: Parcel\\((\\w+)'</span><span class=\"token punctuation\">,</span> ret<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">match</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        cur_surface <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">match</span><span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'page_flip_count'</span><span class=\"token punctuation\">:</span> cur_surface<span class=\"token punctuation\">,</span> <span class=\"token string\">'timestamp'</span><span class=\"token punctuation\">:</span> timestamp<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span></pre></td></tr></table></figure><h4 id=\"新版本方法\"><a class=\"markdownIt-Anchor\" href=\"#新版本方法\">#</a> 新版本方法</h4>\n<h5 id=\"首先获取到帧数据列表\"><a class=\"markdownIt-Anchor\" href=\"#首先获取到帧数据列表\">#</a> 首先获取到帧数据列表</h5>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">_get_surfaceflinger_frame_data</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"Returns collected SurfaceFlinger frame timing data.</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    return:(16.6,[[t1,t2,t3],[t4,t5,t6]])</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    Returns:</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        A tuple containing:</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        - The display's nominal refresh period in seconds.</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        - A list of timestamps signifying frame presentation times in seconds.</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        The return value may be (None, None) if there was no data collected (for</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        example, if the app was closed before the collector thread has finished).</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\"># shell dumpsys SurfaceFlinger --latency &lt;window name></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\"># prints some information about the last 128 frames displayed in</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\"># that window.</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\"># The data returned looks like this:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\"># 16954612</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\"># 7657467895508     7657482691352     7657493499756</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\"># 7657484466553     7657499645964     7657511077881</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\"># 7657500793457     7657516600576     7657527404785</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\"># (...)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\"># The first line is the refresh period (here 16.95 ms), it is followed</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token comment\"># by 128 lines w/ 3 timestamps in nanosecond each:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\"># A) when the app started to draw</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token comment\"># B) the vsync immediately preceding SF submitting the frame to the h/w</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\"># C) timestamp immediately after SF submitted that frame to the h/w</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token comment\"># The difference between the 1st and 3rd timestamp is the frame-latency.</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token comment\"># An interesting data is when the frame latency crosses a refresh period</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token comment\"># boundary, this can be calculated this way:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token comment\"># ceil((C - A) / refresh-period)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token comment\"># (each time the number above changes, we have a \"jank\").</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\"># If this happens a lot during an animation, the animation appears</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token comment\"># janky, even if it runs at 60 fps in average.</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token comment\"># Google Pixel 2 android8.0 dumpsys SurfaceFlinger --latency 结果</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token comment\"># 16666666</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token comment\"># 0       0       0</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token comment\"># 0       0       0</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token comment\"># 0       0       0</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token comment\"># 0       0       0</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token comment\"># 但华为 荣耀 9 android8.0 dumpsys SurfaceFlinger --latency 结果是正常的 但数据更新很慢  也不能用来计算 fps</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token comment\"># 16666666</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token comment\"># 9223372036854775807     3618832932780   9223372036854775807</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token comment\"># 9223372036854775807     3618849592155   9223372036854775807</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token comment\"># 9223372036854775807     3618866251530   9223372036854775807</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    refresh_period <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    timestamps <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    nanoseconds_per_second <span class=\"token operator\">=</span> <span class=\"token number\">1e9</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    pending_fence_timestamp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">63</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>surfaceview <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        results <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            cmd<span class=\"token operator\">=</span><span class=\"token string\">'dumpsys SurfaceFlinger --latency %s'</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>focus_window<span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        results <span class=\"token operator\">=</span> results<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\r\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>splitlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        refresh_period <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> nanoseconds_per_second</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        results <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span><span class=\"token string\">'dumpsys gfxinfo %s framestats'</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>package_name<span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        results <span class=\"token operator\">=</span> results<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\r\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>splitlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        isHaveFoundWindow <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        PROFILEDATA_line <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        activity <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>focus_window</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>focus_window<span class=\"token punctuation\">.</span>__contains__<span class=\"token punctuation\">(</span><span class=\"token string\">'#'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            activity <span class=\"token operator\">=</span> activity<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'#'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> results<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> isHaveFoundWindow<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token string\">\"Window\"</span> <span class=\"token keyword\">in</span> line <span class=\"token keyword\">and</span> activity <span class=\"token keyword\">in</span> line<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>                    isHaveFoundWindow <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> isHaveFoundWindow<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>                <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token string\">\"PROFILEDATA\"</span> <span class=\"token keyword\">in</span> line<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>                PROFILEDATA_line <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>            fields <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>            fields <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>            <span class=\"token keyword\">if</span> fields <span class=\"token keyword\">and</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">==</span> fields<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>                timestamp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>fields<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>fields<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>fields<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>                <span class=\"token keyword\">if</span> timestamp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> pending_fence_timestamp<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>                    <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>                timestamp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>_timestamp <span class=\"token operator\">/</span> nanoseconds_per_second <span class=\"token keyword\">for</span> _timestamp <span class=\"token keyword\">in</span> timestamp<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>                timestamps<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>timestamp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> PROFILEDATA_line<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>                <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        self<span class=\"token punctuation\">.</span>focus_window <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>get_surfaceview_activity<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        results <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>            cmd<span class=\"token operator\">=</span><span class=\"token string\">'dumpsys SurfaceFlinger --latency %s'</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>focus_window<span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        results <span class=\"token operator\">=</span> results<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\r\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>splitlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> results<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>isdigit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>            refresh_period <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> nanoseconds_per_second</pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>            logger<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>        <span class=\"token comment\"># If a fence associated with a frame is still pending when we query the</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>        <span class=\"token comment\"># latency data, SurfaceFlinger gives the frame a timestamp of INT64_MAX.</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>        <span class=\"token comment\"># Since we only care about completed frames, we will ignore any timestamps</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        <span class=\"token comment\"># with this value.</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>        <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> results<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>            fields <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>fields<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>                <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>            timestamp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>fields<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>fields<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>fields<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>            <span class=\"token keyword\">if</span> timestamp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> pending_fence_timestamp<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>                <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>            timestamp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>_timestamp <span class=\"token operator\">/</span> nanoseconds_per_second <span class=\"token keyword\">for</span> _timestamp <span class=\"token keyword\">in</span> timestamp<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>            timestamps<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>timestamp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>refresh_period<span class=\"token punctuation\">,</span> timestamps<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>然后将数据插入到队列中</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>refresh_period<span class=\"token punctuation\">,</span> new_timestamps <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_get_surfaceflinger_frame_data<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> refresh_period <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span> <span class=\"token keyword\">or</span> new_timestamps <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    self<span class=\"token punctuation\">.</span>focus_window <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>get_focus_activity<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    logger<span class=\"token punctuation\">.</span>warning<span class=\"token punctuation\">(</span><span class=\"token string\">\"refresh_period is None or timestamps is None\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>timestamps <span class=\"token operator\">+=</span> <span class=\"token punctuation\">[</span>timestamp <span class=\"token keyword\">for</span> timestamp <span class=\"token keyword\">in</span> new_timestamps</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>               <span class=\"token keyword\">if</span> timestamp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> self<span class=\"token punctuation\">.</span>last_timestamp<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>timestamps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    first_timestamp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>last_timestamp<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> is_first<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        timestamps <span class=\"token operator\">=</span> first_timestamp <span class=\"token operator\">+</span> timestamps</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    self<span class=\"token punctuation\">.</span>last_timestamp <span class=\"token operator\">=</span> timestamps<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    is_first <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    is_first <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    cur_focus_window <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>get_focus_activity<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>focus_window <span class=\"token operator\">!=</span> cur_focus_window<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        self<span class=\"token punctuation\">.</span>focus_window <span class=\"token operator\">=</span> cur_focus_window</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>self<span class=\"token punctuation\">.</span>data_queue<span class=\"token punctuation\">.</span>put<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>refresh_period<span class=\"token punctuation\">,</span> timestamps<span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>time_consume <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> before</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>delta_inter <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>frequency <span class=\"token operator\">-</span> time_consume</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">if</span> delta_inter <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span>delta_inter<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"计算线程计算fps和jank\"><a class=\"markdownIt-Anchor\" href=\"#计算线程计算fps和jank\">#</a> 计算线程计算 fps 和 jank</h4>\n<h5 id=\"旧版本方法-2\"><a class=\"markdownIt-Anchor\" href=\"#旧版本方法-2\">#</a> 旧版本方法</h5>\n<p>不知道为什么 fps 设置最高就是 60</p>\n<p>通过一段时间内的帧总数除以时间差获取到 fps</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>td <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token string\">'timestamp'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> self<span class=\"token punctuation\">.</span>surface_before<span class=\"token punctuation\">[</span><span class=\"token string\">'timestamp'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>seconds <span class=\"token operator\">=</span> td<span class=\"token punctuation\">.</span>seconds <span class=\"token operator\">+</span> td<span class=\"token punctuation\">.</span>microseconds <span class=\"token operator\">/</span> <span class=\"token number\">1e6</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>frame_count <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'page_flip_count'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>               self<span class=\"token punctuation\">.</span>surface_before<span class=\"token punctuation\">[</span><span class=\"token string\">'page_flip_count'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>fps <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span>frame_count <span class=\"token operator\">/</span> seconds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">if</span> fps <span class=\"token operator\">></span> <span class=\"token number\">60</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    fps <span class=\"token operator\">=</span> <span class=\"token number\">60</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>self<span class=\"token punctuation\">.</span>surface_before <span class=\"token operator\">=</span> data</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># logger.debug('FPS:%2s'%fps)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>collect_fps <span class=\"token operator\">=</span> fps</pre></td></tr></table></figure><h4 id=\"新版本方法-2\"><a class=\"markdownIt-Anchor\" href=\"#新版本方法-2\">#</a> 新版本方法</h4>\n<ol>\n<li>首先拿到帧数</li>\n<li>对异常数据的处理</li>\n<li>2、3、4 帧数为啥这样处理？</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">_calculate_results_new</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> refresh_period<span class=\"token punctuation\">,</span> timestamps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    frame_count <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>timestamps<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> frame_count <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        fps <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        jank <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">elif</span> frame_count <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        fps <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        jank <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">elif</span> frame_count <span class=\"token operator\">==</span> <span class=\"token number\">2</span> <span class=\"token keyword\">or</span> frame_count <span class=\"token operator\">==</span> <span class=\"token number\">3</span> <span class=\"token keyword\">or</span> frame_count <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        seconds <span class=\"token operator\">=</span> timestamps<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> timestamps<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">if</span> seconds <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            fps <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>frame_count <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> seconds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            jank <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_calculate_janky<span class=\"token punctuation\">(</span>timestamps<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            fps <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            jank <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        seconds <span class=\"token operator\">=</span> timestamps<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> timestamps<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">if</span> seconds <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            fps <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>frame_count <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> seconds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            jank <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_calculate_jankey_new<span class=\"token punctuation\">(</span>timestamps<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            fps <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            jank <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">return</span> fps<span class=\"token punctuation\">,</span> jank</pre></td></tr></table></figure><h5 id=\"计算jank\"><a class=\"markdownIt-Anchor\" href=\"#计算jank\">#</a> 计算 jank</h5>\n<h6 id=\"旧版本\"><a class=\"markdownIt-Anchor\" href=\"#旧版本\">#</a> 旧版本</h6>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">_calculate_janky</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> timestamps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    tempstamp <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    jank <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span> timestamp <span class=\"token keyword\">in</span> timestamps<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span> tempstamp <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            tempstamp <span class=\"token operator\">=</span> timestamp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        costtime <span class=\"token operator\">=</span> timestamp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> tempstamp</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">if</span> costtime <span class=\"token operator\">></span> self<span class=\"token punctuation\">.</span>jank_threshold<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            jank <span class=\"token operator\">=</span> jank <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        tempstamp <span class=\"token operator\">=</span> timestamp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">return</span> jank</pre></td></tr></table></figure><h5 id=\"新版本\"><a class=\"markdownIt-Anchor\" href=\"#新版本\">#</a> 新版本</h5>\n<p>通过预设的 jank_threshold 阈值判断是否有 jank（默认 166ms 的渲染时间）</p>\n<p>通过过去 4 帧的时间，也即过去三帧的平均渲染时间 *2，如果当前帧渲染时间超过这个值，并且当前帧渲染时间大于上一帧渲染时间，判断为一次 jank</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">_calculate_jankey_new</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> timestamps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    twofilmstamp <span class=\"token operator\">=</span> <span class=\"token number\">83.3</span> <span class=\"token operator\">/</span> <span class=\"token number\">1000.0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    tempstamp <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    jank <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">for</span> index<span class=\"token punctuation\">,</span> timestamp <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>timestamps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">if</span> tempstamp <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                tempstamp <span class=\"token operator\">=</span> timestamp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            costtime <span class=\"token operator\">=</span> timestamp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> tempstamp</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">if</span> costtime <span class=\"token operator\">></span> self<span class=\"token punctuation\">.</span>jank_threshold<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                jank <span class=\"token operator\">=</span> jank <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            tempstamp <span class=\"token operator\">=</span> timestamp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">elif</span> index <span class=\"token operator\">></span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            currentstamp <span class=\"token operator\">=</span> timestamps<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            lastonestamp <span class=\"token operator\">=</span> timestamps<span class=\"token punctuation\">[</span>index <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            lasttwostamp <span class=\"token operator\">=</span> timestamps<span class=\"token punctuation\">[</span>index <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            lastthreestamp <span class=\"token operator\">=</span> timestamps<span class=\"token punctuation\">[</span>index <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            lastfourstamp <span class=\"token operator\">=</span> timestamps<span class=\"token punctuation\">[</span>index <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            tempframetime <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>lastthreestamp <span class=\"token operator\">-</span> lastfourstamp<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>lasttwostamp <span class=\"token operator\">-</span> lastthreestamp<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                    lastonestamp <span class=\"token operator\">-</span> lasttwostamp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            currentframetime <span class=\"token operator\">=</span> currentstamp <span class=\"token operator\">-</span> lastonestamp</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentframetime <span class=\"token operator\">></span> tempframetime<span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span>currentframetime <span class=\"token operator\">></span> twofilmstamp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                jank <span class=\"token operator\">=</span> jank <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">return</span> jank</pre></td></tr></table></figure><h2 id=\"ios\"><a class=\"markdownIt-Anchor\" href=\"#ios\">#</a> IOS</h2>\n<p>同样使用 instrument 协议</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">iter_fps</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">:</span> BaseDevice<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> Iterator<span class=\"token punctuation\">[</span>Any<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">with</span> d<span class=\"token punctuation\">.</span>connect_instruments<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> ts<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">for</span> data <span class=\"token keyword\">in</span> ts<span class=\"token punctuation\">.</span>iter_opengl_data<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            fps <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token string\">'CoreAnimationFramesPerSecond'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># fps from GPU</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token comment\"># print(\"FPS:\", fps)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">yield</span> DataType<span class=\"token punctuation\">.</span>FPS<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"fps\"</span><span class=\"token punctuation\">:</span> fps<span class=\"token punctuation\">,</span> <span class=\"token string\">\"time\"</span><span class=\"token punctuation\">:</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"value\"</span><span class=\"token punctuation\">:</span> fps<span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "工具",
                "测试开发",
                "性能"
            ]
        },
        {
            "id": "https://fanlu.top/2023/06/25/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/SoloX%E7%A7%BB%E5%8A%A8%E8%AE%BE%E5%A4%87%E6%80%A7%E8%83%BD%E9%87%87%E9%9B%86%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/",
            "url": "https://fanlu.top/2023/06/25/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/SoloX%E7%A7%BB%E5%8A%A8%E8%AE%BE%E5%A4%87%E6%80%A7%E8%83%BD%E9%87%87%E9%9B%86%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/",
            "title": "SoloX移动设备性能采集工具使用体验",
            "date_published": "2023-06-25T13:46:33.000Z",
            "content_html": "<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NtYXJ0LXRlc3QtdGkvU29sb1g=\">https://github.com/smart-test-ti/SoloX</span></p>\n</blockquote>\n<p>基于 python 的移动设备性能测试工具，支持 android，通过 itunes（tidevice 的技术）支持了 ios 设备。</p>\n<h2 id=\"功能介绍\"><a class=\"markdownIt-Anchor\" href=\"#功能介绍\">#</a> 功能介绍</h2>\n<p>使用 python -m solox 启动服务，会自动打开 web 客户端：默认端口为 50003。</p>\n<h3 id=\"性能测试\"><a class=\"markdownIt-Anchor\" href=\"#性能测试\">#</a> 性能测试</h3>\n<ul>\n<li>\n<p>设备类型支持安卓和苹果</p>\n</li>\n<li>\n<p>支持选择设备列表</p>\n</li>\n<li>\n<p>支持选择目标 app</p>\n</li>\n<li>\n<p>支持选择子进程 (仅安卓)</p>\n</li>\n<li>\n<p>支持性能指标的开关 （只控制显示，不控制是否采集）</p>\n<ul>\n<li>CPU</li>\n<li>内存</li>\n<li>流量</li>\n<li>FPS</li>\n<li>电池</li>\n<li>surfaceview (仅安卓)</li>\n<li>wifi (仅安卓)</li>\n<li>GPU （仅苹果）</li>\n</ul>\n</li>\n<li>\n<p>支持显示设备信息</p>\n<ul>\n<li>品牌</li>\n<li>设备名</li>\n<li>系统版本</li>\n<li>序列号</li>\n<li>wifi 地址</li>\n</ul>\n</li>\n<li>\n<p>支持启动数据采集、停止设备采集（此时生成报告）</p>\n</li>\n<li>\n<p>支持显示 logcat 日志 <em>重要</em>   (仅安卓)</p>\n</li>\n<li>\n<p>支持安装应用</p>\n</li>\n<li>\n<p>支持查看当前应用启动时间 （安卓支持较好）</p>\n</li>\n<li>\n<p>支持对比模式 （仅安卓）<br>\n多台设备同时连接，同时测试<br>\n支持</p>\n<ul>\n<li>CPU</li>\n<li>Memory</li>\n<li>NetWorkData</li>\n<li>FPS</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"报告管理\"><a class=\"markdownIt-Anchor\" href=\"#报告管理\">#</a> 报告管理</h3>\n<ul>\n<li>报告展示</li>\n<li>报告管理\n<ul>\n<li>编辑 （场景名）</li>\n<li>导出为 excel</li>\n<li>删除</li>\n</ul>\n</li>\n<li>报告详情\n<ul>\n<li>结果对比</li>\n<li>保存 html</li>\n<li>保存图片</li>\n<li>单个图片导出</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"功能剖析\"><a class=\"markdownIt-Anchor\" href=\"#功能剖析\">#</a> 功能剖析</h2>\n<h3 id=\"web功能\"><a class=\"markdownIt-Anchor\" href=\"#web功能\">#</a> web 功能</h3>\n<h4 id=\"flask服务\"><a class=\"markdownIt-Anchor\" href=\"#flask服务\">#</a> flask 服务</h4>\n<p>web 功能基于 flask flask-template flask-soketio 实现。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>app <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">,</span> template_folder<span class=\"token operator\">=</span><span class=\"token string\">'templates'</span><span class=\"token punctuation\">,</span> static_folder<span class=\"token operator\">=</span><span class=\"token string\">'static'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>socketio <span class=\"token operator\">=</span> SocketIO<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span> cors_allowed_origins<span class=\"token operator\">=</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">startServer</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    socketio<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span> host<span class=\"token operator\">=</span>host<span class=\"token punctuation\">,</span> debug<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> port<span class=\"token operator\">=</span>port<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"自动打开页面\"><a class=\"markdownIt-Anchor\" href=\"#自动打开页面\">#</a> 自动打开页面</h4>\n<p>服务启动时会自动打开浏览器，打开 solox 前端客户端</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">openUrl</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    flag <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">while</span> flag<span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">'Start solox server ...'</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        f <span class=\"token operator\">=</span> Figlet<span class=\"token punctuation\">(</span>font<span class=\"token operator\">=</span><span class=\"token string\">\"slant\"</span><span class=\"token punctuation\">,</span> width<span class=\"token operator\">=</span><span class=\"token number\">300</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>renderText<span class=\"token punctuation\">(</span><span class=\"token string\">\"SOLOX 2. 6. 7\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        flag <span class=\"token operator\">=</span> getServerStatus<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    webbrowser<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://&#123;&#125;:&#123;&#125;/?platform=Android&amp;lan=en'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> new<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">'Running on http://&#123;&#125;:&#123;&#125;/?platform=Android&amp;lan=en (Press CTRL+C to quit)'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>其中，使用了</p>\n<ul>\n<li>Figlet 打印艺术字</li>\n<li>webbrowser  是 python 内置的一个库，可以打开 url</li>\n</ul>\n<h4 id=\"端口检查\"><a class=\"markdownIt-Anchor\" href=\"#端口检查\">#</a> 端口检查</h4>\n<p>服务启动时，还调用了检查端口的函数</p>\n<ul>\n<li>对于非 windows 系统，直接干掉进程</li>\n</ul>\n<pre><code>os.system(&quot;lsof -i:%s| grep LISTEN| awk '&#123;print $2&#125;'|xargs kill -9&quot; % port)\n</code></pre>\n<ul>\n<li>对于 windows 系统\n<ul>\n<li>使用  <code>netstat</code>  命令结合  <code>findstr</code>  过滤器，在指定端口上查找监听的进程。</li>\n<li>读取命令输出的数据，并逐行处理。</li>\n<li>提取每行中的进程 PID，并将其添加到  <code>pid_list</code>  列表中。</li>\n<li>将  <code>pid_list</code>  转换为集合，再转换回列表，以去除重复的 PID。</li>\n<li>选取列表中的第一个 PID，并使用  <code>taskkill</code>  命令强制终止该进程。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"启动\"><a class=\"markdownIt-Anchor\" href=\"#启动\">#</a> 启动</h4>\n<ul>\n<li>检查 python 版本：必选 3.10 以上</li>\n<li>然后使用 Fire 启动</li>\n</ul>\n<blockquote>\n<p>fire 库可以自己的库封装成一个命令 通过 python -m 命令调用</p>\n</blockquote>\n<p>其他所有的功能都是由 http 请求触发，logcat 是一个 websocket<br>\n 前端使用 jquery 处理事件和操作 dom；</p>\n<h3 id=\"设备监听与信息抓取\"><a class=\"markdownIt-Anchor\" href=\"#设备监听与信息抓取\">#</a> 设备监听与信息抓取</h3>\n<ol>\n<li>前端每次打开页面（ <code>$(document).ready</code> ）后，会自动触发连接按钮的点击事件，从而调用 <code>initializeEnv</code>  方法；</li>\n<li><code>initializeEnv</code>  请求接口 /device/ids?platform = 当前选择设备类型</li>\n<li>后端接口：</li>\n</ol>\n<h4 id=\"安卓\"><a class=\"markdownIt-Anchor\" href=\"#安卓\">#</a> 安卓</h4>\n<ul>\n<li>获取到当前的设备 id 列表 （解析命令行 <code>adb devices</code>  的输出）\n<ul>\n<li>获取第一个设备的 pkg 列表 （adb -s deviceID shell pm list package）</li>\n<li>获取设备信息 (安卓基于 <code>adb</code> ,ios 基于 <code>tidevice</code> )</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getDdeviceDetail</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> deviceId<span class=\"token punctuation\">,</span> platform<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    result <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">match</span><span class=\"token punctuation\">(</span>platform<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">case</span> Platform<span class=\"token punctuation\">.</span>Android<span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'brand'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span><span class=\"token string\">'getprop ro.product.brand'</span><span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>deviceId<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span><span class=\"token string\">'getprop ro.product.model'</span><span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>deviceId<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'version'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span><span class=\"token string\">'getprop ro.build.version.release'</span><span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>deviceId<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'serialno'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span><span class=\"token string\">'getprop ro.serialno'</span><span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>deviceId<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            cmd <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'ip addr show wlan0 | </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>filterType<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> link/ether'</span></span>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'wifiadr'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span>cmd<span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>deviceId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">case</span> Platform<span class=\"token punctuation\">.</span>iOS<span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            iosInfo <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>execCmd<span class=\"token punctuation\">(</span><span class=\"token string\">'tidevice info --json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'brand'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> iosInfo<span class=\"token punctuation\">[</span><span class=\"token string\">'DeviceClass'</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> iosInfo<span class=\"token punctuation\">[</span><span class=\"token string\">'DeviceName'</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'version'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> iosInfo<span class=\"token punctuation\">[</span><span class=\"token string\">'ProductVersion'</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'serialno'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> iosInfo<span class=\"token punctuation\">[</span><span class=\"token string\">'SerialNumber'</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'wifiadr'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> iosInfo<span class=\"token punctuation\">[</span><span class=\"token string\">'WiFiAddress'</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token keyword\">_</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">'&#123;&#125; is undefined'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>platform<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>   </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">return</span> result</pre></td></tr></table></figure><h4 id=\"ios\"><a class=\"markdownIt-Anchor\" href=\"#ios\">#</a> ios</h4>\n<ul>\n<li>获取设备信息 （解析命令行 tidevice list --json）</li>\n<li>获取第一个设备 pkg 列表：  <code>tidevice --udid 设备uid  applist</code></li>\n<li>获取设备详情，同上</li>\n</ul>\n<h3 id=\"性能采集\"><a class=\"markdownIt-Anchor\" href=\"#性能采集\">#</a> 性能采集</h3>\n<p>点击开始按钮，触发启动测试。</p>\n<ul>\n<li>必须先选中设备和应用</li>\n<li>分别调用 collectCpu、collectMem、collectNetwork、collectFps、collectBattery  如果是 ios 系统，还要采集 GPU collectGpu</li>\n<li>这些方法再调用 collectPers 方法（参数包括一个获取采集数据的方法），然后使用<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaGlnaGNoYXJ0cy5jb20v\"> highcharts</span> 绘制图表；其中采集数据的方法作为 highcharts 实例的数据 load 方法，并且图表支持切换时间范围；  这个请求函数成功后会设置一个 settimeout 定时器，一秒钟后再次请求这个接口更新数据，并将数据塞入到图表数据的最新；</li>\n</ul>\n<p>性能采集需要比较复杂，打算分成系列的博客慢慢写一下。</p>\n",
            "tags": [
                "工具",
                "测试开发",
                "性能"
            ]
        },
        {
            "id": "https://fanlu.top/2023/05/17/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/gopher-lua%E4%BD%BF%E7%94%A8%E5%B0%8Fdemo/",
            "url": "https://fanlu.top/2023/05/17/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/gopher-lua%E4%BD%BF%E7%94%A8%E5%B0%8Fdemo/",
            "title": "gopher-lua使用小demo",
            "date_published": "2023-05-17T01:04:08.000Z",
            "content_html": "<blockquote>\n<p>模拟读者读书</p>\n</blockquote>\n<h2 id=\"首先新建reader类\"><a class=\"markdownIt-Anchor\" href=\"#首先新建reader类\">#</a> 首先新建 reader 类</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">type</span> Reader <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tUid         <span class=\"token builtin\">uint32</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tUserName    <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tReaderCount <span class=\"token builtin\">uint8</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>reader <span class=\"token operator\">*</span>Reader<span class=\"token punctuation\">)</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span>book <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\treader<span class=\"token punctuation\">.</span>ReaderCount<span class=\"token operator\">++</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Reader:%v,Name:%v,read book %v\\n\"</span><span class=\"token punctuation\">,</span> reader<span class=\"token punctuation\">.</span>Uid<span class=\"token punctuation\">,</span> reader<span class=\"token punctuation\">.</span>UserName<span class=\"token punctuation\">,</span> book<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"将reader类注册到lua中\"><a class=\"markdownIt-Anchor\" href=\"#将reader类注册到lua中\">#</a> 将 reader 类注册到 lua 中</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> lua <span class=\"token string\">\"github.com/yuin/gopher-lua\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">const</span> luaPersonTypeName <span class=\"token operator\">=</span> <span class=\"token string\">\"reader\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">var</span> readerMethods <span class=\"token operator\">=</span> <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span>lua<span class=\"token punctuation\">.</span>LGFunction<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token string\">\"read\"</span><span class=\"token punctuation\">:</span>     luaReaderRead<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token string\">\"username\"</span><span class=\"token punctuation\">:</span> readerGetSetUsername<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// 注册定义的类成为 lua 的一个元表</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">registerReaderType</span><span class=\"token punctuation\">(</span>L <span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>LState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tmt <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">NewTypeMetatable</span><span class=\"token punctuation\">(</span>luaPersonTypeName<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tL<span class=\"token punctuation\">.</span><span class=\"token function\">SetGlobal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"reader\"</span><span class=\"token punctuation\">,</span> mt<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tL<span class=\"token punctuation\">.</span><span class=\"token function\">SetField</span><span class=\"token punctuation\">(</span>mt<span class=\"token punctuation\">,</span> <span class=\"token string\">\"new\"</span><span class=\"token punctuation\">,</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">NewFunction</span><span class=\"token punctuation\">(</span>luaNewReader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tL<span class=\"token punctuation\">.</span><span class=\"token function\">SetField</span><span class=\"token punctuation\">(</span>mt<span class=\"token punctuation\">,</span> <span class=\"token string\">\"__index\"</span><span class=\"token punctuation\">,</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">SetFuncs</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">.</span><span class=\"token function\">NewTable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> readerMethods<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">//lua 创建对象方法</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">luaNewReader</span><span class=\"token punctuation\">(</span>L <span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>LState<span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\treader <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>Reader<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token function\">uint32</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">.</span><span class=\"token function\">CheckInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\tL<span class=\"token punctuation\">.</span><span class=\"token function\">CheckString</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token function\">uint8</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">.</span><span class=\"token function\">CheckInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tud <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">NewUserData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\tud<span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> reader</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\tL<span class=\"token punctuation\">.</span><span class=\"token function\">SetMetatable</span><span class=\"token punctuation\">(</span>ud<span class=\"token punctuation\">,</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">GetTypeMetatable</span><span class=\"token punctuation\">(</span>luaPersonTypeName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\tL<span class=\"token punctuation\">.</span><span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>ud<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\">// 在 lua 中获取对象的重要一步</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">checkReader</span><span class=\"token punctuation\">(</span>L <span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>LState<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span>Reader <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\tud <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">CheckUserData</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token keyword\">if</span> v<span class=\"token punctuation\">,</span> ok <span class=\"token operator\">:=</span> ud<span class=\"token punctuation\">.</span>Value<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>Reader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> ok <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> v</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\tL<span class=\"token punctuation\">.</span><span class=\"token function\">ArgError</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"reader expected\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token comment\">// 方法注册到 lua 中</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">luaReaderRead</span><span class=\"token punctuation\">(</span>L <span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>LState<span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\tr <span class=\"token operator\">:=</span> <span class=\"token function\">checkReader</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\tbook <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\tr<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>book<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token comment\">// 属性的 get Set 方法， 注意方法名必须这样写：结构名 GetSet 属性名，大小写也要注意</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">readerGetSetUsername</span><span class=\"token punctuation\">(</span>L <span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>LState<span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\tr <span class=\"token operator\">:=</span> <span class=\"token function\">checkReader</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t<span class=\"token keyword\">if</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">GetTop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\tr<span class=\"token punctuation\">.</span>UserName <span class=\"token operator\">=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">CheckString</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\tL<span class=\"token punctuation\">.</span><span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>lua<span class=\"token punctuation\">.</span><span class=\"token function\">LString</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>UserName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"也许有一些模块需要注入到lua中\"><a class=\"markdownIt-Anchor\" href=\"#也许有一些模块需要注入到lua中\">#</a> 也许有一些模块需要注入到 lua 中</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tlua <span class=\"token string\">\"github.com/yuin/gopher-lua\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">var</span> modFuncs <span class=\"token operator\">=</span> <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span>lua<span class=\"token punctuation\">.</span>LGFunction<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token string\">\"eat\"</span><span class=\"token punctuation\">:</span>    Eat<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token string\">\"drink\"</span><span class=\"token punctuation\">:</span>  Drink<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token string\">\"record\"</span><span class=\"token punctuation\">:</span> Record<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">Eat</span><span class=\"token punctuation\">(</span>L <span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>LState<span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tmsg <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">CheckString</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"eat:\"</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">Drink</span><span class=\"token punctuation\">(</span>L <span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>LState<span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tmsg <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">CheckString</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"drink:\"</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">Record</span><span class=\"token punctuation\">(</span>L <span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>LState<span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\tr <span class=\"token operator\">:=</span> <span class=\"token function\">checkReader</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%v读完了！一共%v本书！\\n\"</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>UserName<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>ReaderCount<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">Loader</span><span class=\"token punctuation\">(</span>L <span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>LState<span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\tmod <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">SetFuncs</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">.</span><span class=\"token function\">NewTable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> modFuncs<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\tL<span class=\"token punctuation\">.</span><span class=\"token function\">SetField</span><span class=\"token punctuation\">(</span>mod<span class=\"token punctuation\">,</span> <span class=\"token string\">\"mymod\"</span><span class=\"token punctuation\">,</span> lua<span class=\"token punctuation\">.</span><span class=\"token function\">LString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"value\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\tL<span class=\"token punctuation\">.</span><span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>mod<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"预先定义一个lua文件\"><a class=\"markdownIt-Anchor\" href=\"#预先定义一个lua文件\">#</a> 预先定义一个 lua 文件</h2>\n<p>这样所有的协程可以共享这个 lua 文件</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">local</span> mymod <span class=\"token operator\">=</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mymod\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">-- 加载注入的模块</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    global_id <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    global_name <span class=\"token operator\">=</span> <span class=\"token string\">\"test\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">newReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    r <span class=\"token operator\">=</span> reader<span class=\"token punctuation\">.</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span>global_id<span class=\"token punctuation\">,</span>global_name<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">-- 连续执行三次</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span>book<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    r<span class=\"token punctuation\">:</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>book<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    mymod<span class=\"token punctuation\">.</span><span class=\"token function\">eat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"面包\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    mymod<span class=\"token punctuation\">.</span><span class=\"token function\">drink</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"雪碧\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">finish</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    mymod<span class=\"token punctuation\">.</span><span class=\"token function\">record</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr></table></figure><h2 id=\"然后可以试试看啦\"><a class=\"markdownIt-Anchor\" href=\"#然后可以试试看啦\">#</a> 然后可以试试看啦</h2>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token string\">\"bufio\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token string\">\"fmt\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token string\">\"github.com/yuin/gopher-lua\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token string\">\"github.com/yuin/gopher-lua/parse\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token string\">\"math/rand\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token string\">\"os\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token string\">\"strconv\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token string\">\"sync\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token string\">\"time\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">// TODO: 加载 lua 代码执行</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">// TODO: 多线程</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">var</span> wg sync<span class=\"token punctuation\">.</span>WaitGroup</pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tbooks <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token string\">\"活着\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"白鹿原\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"春秋战国\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"兄弟\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"许三观卖血记\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"丰乳肥臀\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\tluaPath <span class=\"token operator\">:=</span> <span class=\"token string\">\"./main/test.lua\"</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\tluaProto<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">compileFile</span><span class=\"token punctuation\">(</span>luaPath<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t<span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\twg<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t<span class=\"token keyword\">go</span> <span class=\"token function\">DoRead</span><span class=\"token punctuation\">(</span>luaProto<span class=\"token punctuation\">,</span> <span class=\"token function\">uint32</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Reader\"</span><span class=\"token operator\">+</span>strconv<span class=\"token punctuation\">.</span><span class=\"token function\">Itoa</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> books<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\twg<span class=\"token punctuation\">.</span><span class=\"token function\">Wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\">// 机器人主流程</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">DoRead</span><span class=\"token punctuation\">(</span>luaProto <span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>FunctionProto<span class=\"token punctuation\">,</span> id <span class=\"token builtin\">uint32</span><span class=\"token punctuation\">,</span> name <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> books <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\tL <span class=\"token operator\">:=</span> lua<span class=\"token punctuation\">.</span><span class=\"token function\">NewState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t<span class=\"token keyword\">defer</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t<span class=\"token function\">registerReaderType</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\tL<span class=\"token punctuation\">.</span><span class=\"token function\">PreloadModule</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mymod\"</span><span class=\"token punctuation\">,</span> Loader<span class=\"token punctuation\">)</span>          <span class=\"token comment\">// 注入自己的模块</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\tlFunc <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">NewFunctionFromProto</span><span class=\"token punctuation\">(</span>luaProto<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 从字节码解析得到</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\tL<span class=\"token punctuation\">.</span><span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>lFunc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\tL<span class=\"token punctuation\">.</span><span class=\"token function\">PCall</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> lua<span class=\"token punctuation\">.</span>MultRet<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t<span class=\"token comment\">// init</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">CallByParam</span><span class=\"token punctuation\">(</span>lua<span class=\"token punctuation\">.</span>P<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\tFn<span class=\"token punctuation\">:</span>      L<span class=\"token punctuation\">.</span><span class=\"token function\">GetGlobal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"init\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\tNRet<span class=\"token punctuation\">:</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\tProtect<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> lua<span class=\"token punctuation\">.</span>LNil<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t<span class=\"token comment\">// 新建机器人</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\tL<span class=\"token punctuation\">.</span><span class=\"token function\">SetGlobal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"global_id\"</span><span class=\"token punctuation\">,</span> lua<span class=\"token punctuation\">.</span><span class=\"token function\">LNumber</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\tL<span class=\"token punctuation\">.</span><span class=\"token function\">SetGlobal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"global_name\"</span><span class=\"token punctuation\">,</span> lua<span class=\"token punctuation\">.</span><span class=\"token function\">LString</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">CallByParam</span><span class=\"token punctuation\">(</span>lua<span class=\"token punctuation\">.</span>P<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t\tFn<span class=\"token punctuation\">:</span>      L<span class=\"token punctuation\">.</span><span class=\"token function\">GetGlobal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"newReader\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t\tNRet<span class=\"token punctuation\">:</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t\tProtect<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> lua<span class=\"token punctuation\">.</span>LNil<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t<span class=\"token comment\">// 读书</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t\tbook <span class=\"token operator\">:=</span> books<span class=\"token punctuation\">[</span>rand<span class=\"token punctuation\">.</span><span class=\"token function\">Int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>books<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">CallByParam</span><span class=\"token punctuation\">(</span>lua<span class=\"token punctuation\">.</span>P<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t\t\tFn<span class=\"token punctuation\">:</span>      L<span class=\"token punctuation\">.</span><span class=\"token function\">GetGlobal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"read\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t\t\tNRet<span class=\"token punctuation\">:</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t\t\tProtect<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> lua<span class=\"token punctuation\">.</span><span class=\"token function\">LString</span><span class=\"token punctuation\">(</span>book<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t\ttime<span class=\"token punctuation\">.</span><span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>Second<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t<span class=\"token comment\">// 结束</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">CallByParam</span><span class=\"token punctuation\">(</span>lua<span class=\"token punctuation\">.</span>P<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\t\tFn<span class=\"token punctuation\">:</span>      L<span class=\"token punctuation\">.</span><span class=\"token function\">GetGlobal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"finish\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>\t\tNRet<span class=\"token punctuation\">:</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\t\tProtect<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> lua<span class=\"token punctuation\">.</span>LNil<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\twg<span class=\"token punctuation\">.</span><span class=\"token function\">Done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre></pre></td></tr><tr><td data-num=\"96\"></td><td><pre><span class=\"token comment\">// 解析文件变成 lua 字节码</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">compileFile</span><span class=\"token punctuation\">(</span>filePath <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>FunctionProto<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\tfile<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\t<span class=\"token keyword\">defer</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err</pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>\treader <span class=\"token operator\">:=</span> bufio<span class=\"token punctuation\">.</span><span class=\"token function\">NewReader</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\tchunk<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> parse<span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>reader<span class=\"token punctuation\">,</span> filePath<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err</pre></td></tr><tr><td data-num=\"107\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\tproto<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> lua<span class=\"token punctuation\">.</span><span class=\"token function\">Compile</span><span class=\"token punctuation\">(</span>chunk<span class=\"token punctuation\">,</span> filePath<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err</pre></td></tr><tr><td data-num=\"111\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>\t<span class=\"token keyword\">return</span> proto<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "golang实验室"
            ]
        },
        {
            "id": "https://fanlu.top/2023/05/17/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/gopher-lua%E7%9A%84%E4%BD%BF%E7%94%A8/",
            "url": "https://fanlu.top/2023/05/17/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/gopher-lua%E7%9A%84%E4%BD%BF%E7%94%A8/",
            "title": "gopher-lua的使用",
            "date_published": "2023-05-17T01:03:13.000Z",
            "content_html": "<p>#golang #lua #压测</p>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3l1aW4vZ29waGVyLWx1YSN1c2FnZQ==\">https://github.com/yuin/gopher-lua#usage</span></p>\n</blockquote>\n<h2 id=\"简单使用\"><a class=\"markdownIt-Anchor\" href=\"#简单使用\">#</a> 简单使用</h2>\n<ol>\n<li>首先声明一个 lua 虚拟机： L := lua.NewState ()  返回一个 LState Struct</li>\n<li>然后可以执行 lua 格式的字符串或者 File\n<ul>\n<li>lua.DoString( <code>print(&quot;hello&quot;)</code> )</li>\n<li>lua.DoFile (lua 脚本的路径)</li>\n</ul>\n</li>\n</ol>\n<p>LState 定义如下：</p>\n<pre><code class=\"language-golang\">type LState struct &#123;\n\tG       *Global\n\tParent  *LState\n\tEnv     *LTable\n\tPanic   func(*LState)\n\tDead    bool\n\tOptions Options\n\n\tstop         int32\n\treg          *registry\n\tstack        callFrameStack\n\talloc        *allocator\n\tcurrentFrame *callFrame\n\twrapped      bool\n\tuvcache      *Upvalue\n\thasErrorFunc bool\n\tmainLoop     func(*LState, *callFrame)\n\tctx          context.Context\n&#125;\n</code></pre>\n<ul>\n<li>Get 方法  获取栈中的变量</li>\n<li></li>\n</ul>\n<h2 id=\"数据模型\"><a class=\"markdownIt-Anchor\" href=\"#数据模型\">#</a> 数据模型</h2>\n<p>gopher-lua 中的说有变量值都是一个 LValue, 是 go 语言中的 interface，包含两个方法：</p>\n<ul>\n<li>String（）string</li>\n<li>Type() LValueType</li>\n</ul>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">type</span> LValue <span class=\"token keyword\">interface</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">string</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token function\">Type</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> LValueType   </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token function\">assertFloat64</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">float64</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token function\">assertString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token function\">assertFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>LFunction<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>该接口的实现包括如下类：</p>\n<table>\n<thead>\n<tr>\n<th>Type name</th>\n<th>Go type</th>\n<th>Type() value</th>\n<th>Constants</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LNilType</code></td>\n<td>(constants)</td>\n<td><code>LTNil</code></td>\n<td><code>LNil</code></td>\n</tr>\n<tr>\n<td><code>LBool</code></td>\n<td>(constants)</td>\n<td><code>LTBool</code></td>\n<td><code>LTrue</code> ,  <code>LFalse</code></td>\n</tr>\n<tr>\n<td><code>LNumber</code></td>\n<td>float64</td>\n<td><code>LTNumber</code></td>\n<td><code>-</code></td>\n</tr>\n<tr>\n<td><code>LString</code></td>\n<td>string</td>\n<td><code>LTString</code></td>\n<td><code>-</code></td>\n</tr>\n<tr>\n<td><code>LFunction</code></td>\n<td>struct pointer</td>\n<td><code>LTFunction</code></td>\n<td><code>-</code></td>\n</tr>\n<tr>\n<td><code>LUserData</code></td>\n<td>struct pointer</td>\n<td><code>LTUserData</code></td>\n<td><code>-</code></td>\n</tr>\n<tr>\n<td><code>LState</code></td>\n<td>struct pointer</td>\n<td><code>LTThread</code></td>\n<td><code>-</code></td>\n</tr>\n<tr>\n<td><code>LTable</code></td>\n<td>struct pointer</td>\n<td><code>LTTable</code></td>\n<td><code>-</code></td>\n</tr>\n<tr>\n<td><code>LChannel</code></td>\n<td>chan LValue</td>\n<td><code>LTChannel</code></td>\n<td><code>-</code></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>lv.Type () 可以获取类型</li>\n<li>原表不可用；没有错误捕捉</li>\n</ul>\n<h2 id=\"callstack-registry-size\"><a class=\"markdownIt-Anchor\" href=\"#callstack-registry-size\">#</a> Callstack &amp; Registry size</h2>\n<p>LState 的调用栈的大小控制着脚本中 Lua 函数的最大调用深度（Go 函数的调用不算在内）。</p>\n<p>LState 的注册表实现了对调用函数（包括 Lua 和 Go 函数）和表达式中的临时变量的栈存储。它的存储需求将随着调用堆栈的使用和代码的复杂性而增加。</p>\n<p>注册表和调用堆栈都可以被设置为固定大小或自动大小。</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>L <span class=\"token operator\">:=</span> lua<span class=\"token punctuation\">.</span><span class=\"token function\">NewState</span><span class=\"token punctuation\">(</span>lua<span class=\"token punctuation\">.</span>Options<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    RegistrySize<span class=\"token punctuation\">:</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>         <span class=\"token comment\">// this is the initial size of the registry</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    RegistryMaxSize<span class=\"token punctuation\">:</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span>      <span class=\"token comment\">// this is the maximum size that the registry can grow to. If set to `0` (the default) then the registry will not auto grow</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    RegistryGrowStep<span class=\"token punctuation\">:</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span>            <span class=\"token comment\">// this is how much to step up the registry by each time it runs out of space. The default is `32`.</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">defer</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"api\"><a class=\"markdownIt-Anchor\" href=\"#api\">#</a> API</h2>\n<h3 id=\"从lua中调用go函数\"><a class=\"markdownIt-Anchor\" href=\"#从lua中调用go函数\">#</a> 从 lua 中调用 go 函数</h3>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">Double</span><span class=\"token punctuation\">(</span>L <span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>LState<span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    lv <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">ToInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>             <span class=\"token comment\">/* get argument */</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    L<span class=\"token punctuation\">.</span><span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>lua<span class=\"token punctuation\">.</span><span class=\"token function\">LNumber</span><span class=\"token punctuation\">(</span>lv <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">/* push result */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">1</span>                     <span class=\"token comment\">/* number of results */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    L <span class=\"token operator\">:=</span> lua<span class=\"token punctuation\">.</span><span class=\"token function\">NewState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">defer</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    L<span class=\"token punctuation\">.</span><span class=\"token function\">SetGlobal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"double\"</span><span class=\"token punctuation\">,</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">NewFunction</span><span class=\"token punctuation\">(</span>Double<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">/* Original lua_setglobal uses stack... */</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   \t<span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">DoString</span><span class=\"token punctuation\">(</span><span class=\"token string\">`print(double(20))`</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>注册为 lua 函数之后，会变成一个 LGFunction 类型；</p>\n<p>支持协程中运行；</p>\n<h3 id=\"加载lua内置库的函数\"><a class=\"markdownIt-Anchor\" href=\"#加载lua内置库的函数\">#</a> 加载 lua 内置库的函数</h3>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    L <span class=\"token operator\">:=</span> lua<span class=\"token punctuation\">.</span><span class=\"token function\">NewState</span><span class=\"token punctuation\">(</span>lua<span class=\"token punctuation\">.</span>Options<span class=\"token punctuation\">&#123;</span>SkipOpenLibs<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">defer</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> pair <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        n <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        f lua<span class=\"token punctuation\">.</span>LGFunction</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span>lua<span class=\"token punctuation\">.</span>LoadLibName<span class=\"token punctuation\">,</span> lua<span class=\"token punctuation\">.</span>OpenPackage<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Must be first</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span>lua<span class=\"token punctuation\">.</span>BaseLibName<span class=\"token punctuation\">,</span> lua<span class=\"token punctuation\">.</span>OpenBase<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span>lua<span class=\"token punctuation\">.</span>TabLibName<span class=\"token punctuation\">,</span> lua<span class=\"token punctuation\">.</span>OpenTable<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">CallByParam</span><span class=\"token punctuation\">(</span>lua<span class=\"token punctuation\">.</span>P<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            Fn<span class=\"token punctuation\">:</span>      L<span class=\"token punctuation\">.</span><span class=\"token function\">NewFunction</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            NRet<span class=\"token punctuation\">:</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            Protect<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> lua<span class=\"token punctuation\">.</span><span class=\"token function\">LString</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">.</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">DoFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"main.lua\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"在go中创建一个lua的模块\"><a class=\"markdownIt-Anchor\" href=\"#在go中创建一个lua的模块\">#</a> 在 go 中创建一个 lua 的模块</h3>\n<ol>\n<li>\n<p>首先定义一组方法  类型为 map [string] lua.LGFuntion</p>\n</li>\n<li>\n<p>然后调用 SetFuncs  将函数表分配给一个 lua table，作为一个模块，获取到一个 LTable</p>\n</li>\n<li>\n<p>然后将模块 push 到栈</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">Loader</span><span class=\"token punctuation\">(</span>L <span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>LState<span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// register functions to the table</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    mod <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">SetFuncs</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">.</span><span class=\"token function\">NewTable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> exports<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// register other stuff</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    L<span class=\"token punctuation\">.</span><span class=\"token function\">SetField</span><span class=\"token punctuation\">(</span>mod<span class=\"token punctuation\">,</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> lua<span class=\"token punctuation\">.</span><span class=\"token function\">LString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"value\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// returns the module</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    L<span class=\"token punctuation\">.</span><span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>mod<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>通过 PreLoadModule（name,  注册方法）将模块注册到虚拟机中</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>L<span class=\"token punctuation\">.</span><span class=\"token function\">PreloadModule</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mymodule\"</span><span class=\"token punctuation\">,</span> mymodule<span class=\"token punctuation\">.</span>Loader<span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"在go中调用lua方法\"><a class=\"markdownIt-Anchor\" href=\"#在go中调用lua方法\">#</a> 在 go 中调用 lua 方法</h3>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">CallByParam</span><span class=\"token punctuation\">(</span>lua<span class=\"token punctuation\">.</span>P<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    Fn<span class=\"token punctuation\">:</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">GetGlobal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"double\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\t\t<span class=\"token comment\">//lua 方法名</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    NRet<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\t\t\t\t\t<span class=\"token comment\">// </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    Protect<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> lua<span class=\"token punctuation\">.</span><span class=\"token function\">LNumber</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>CallByParam 方法 第一个参数 lua.P 结构； 第二个参数 参数</li>\n<li>通过 lua.P 结构进行调用</li>\n<li>实际使用中 函数参数也可以使用提前设置全局变量的方式来实现</li>\n</ul>\n<h3 id=\"自定义类型\"><a class=\"markdownIt-Anchor\" href=\"#自定义类型\">#</a> 自定义类型</h3>\n<p>支持在 Go 中自定义新类型</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">type</span> Person <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    Name <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">const</span> luaPersonTypeName <span class=\"token operator\">=</span> <span class=\"token string\">\"person\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 注册类型</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">registerPersonType</span><span class=\"token punctuation\">(</span>L <span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>LState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    mt <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">NewTypeMetatable</span><span class=\"token punctuation\">(</span>luaPersonTypeName<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 新建一个元表</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    L<span class=\"token punctuation\">.</span><span class=\"token function\">SetGlobal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"person\"</span><span class=\"token punctuation\">,</span> mt<span class=\"token punctuation\">)</span>\t\t\t\t\t<span class=\"token comment\">// 元表设置为全局变量</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">// static attributes</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    L<span class=\"token punctuation\">.</span><span class=\"token function\">SetField</span><span class=\"token punctuation\">(</span>mt<span class=\"token punctuation\">,</span> <span class=\"token string\">\"new\"</span><span class=\"token punctuation\">,</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">NewFunction</span><span class=\"token punctuation\">(</span>newPerson<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 注册方法到元表中 静态放啊</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">// methods</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    L<span class=\"token punctuation\">.</span><span class=\"token function\">SetField</span><span class=\"token punctuation\">(</span>mt<span class=\"token punctuation\">,</span> <span class=\"token string\">\"__index\"</span><span class=\"token punctuation\">,</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">SetFuncs</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">.</span><span class=\"token function\">NewTable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> personMethods<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 注册方法到元表</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">// Constructor</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">newPerson</span><span class=\"token punctuation\">(</span>L <span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>LState<span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span>\t\t\t<span class=\"token comment\">//go 方法</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    person <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>Person<span class=\"token punctuation\">&#123;</span>L<span class=\"token punctuation\">.</span><span class=\"token function\">CheckString</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    ud <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">NewUserData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    ud<span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> person</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    L<span class=\"token punctuation\">.</span><span class=\"token function\">SetMetatable</span><span class=\"token punctuation\">(</span>ud<span class=\"token punctuation\">,</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">GetTypeMetatable</span><span class=\"token punctuation\">(</span>luaPersonTypeName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    L<span class=\"token punctuation\">.</span><span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>ud<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">// Checks whether the first lua argument is a *LUserData with *Person and returns this *Person.</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">checkPerson</span><span class=\"token punctuation\">(</span>L <span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>LState<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span>Person <span class=\"token punctuation\">&#123;</span>  <span class=\"token comment\">// 检查类型</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    ud <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">CheckUserData</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">if</span> v<span class=\"token punctuation\">,</span> ok <span class=\"token operator\">:=</span> ud<span class=\"token punctuation\">.</span>Value<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>Person<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> ok <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">return</span> v</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    L<span class=\"token punctuation\">.</span><span class=\"token function\">ArgError</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"person expected\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">var</span> personMethods <span class=\"token operator\">=</span> <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span>lua<span class=\"token punctuation\">.</span>LGFunction<span class=\"token punctuation\">&#123;</span>\t\t<span class=\"token comment\">// 方法表</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> personGetSetName<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\">// Getter and setter for the Person#Name</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">personGetSetName</span><span class=\"token punctuation\">(</span>L <span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>LState<span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">&#123;</span>\t\t\t<span class=\"token comment\">// 属性的 Getter 和 Setter 在 lua 中通过 p:name () 调用</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    p <span class=\"token operator\">:=</span> <span class=\"token function\">checkPerson</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">if</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">GetTop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        p<span class=\"token punctuation\">.</span>Name <span class=\"token operator\">=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">CheckString</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    L<span class=\"token punctuation\">.</span><span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>lua<span class=\"token punctuation\">.</span><span class=\"token function\">LString</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    L <span class=\"token operator\">:=</span> lua<span class=\"token punctuation\">.</span><span class=\"token function\">NewState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">defer</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token function\">registerPersonType</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">DoString</span><span class=\"token punctuation\">(</span><span class=\"token string\">`\t\t\t\t\t\t</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        p = person.new(\"Steeve\")\t</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        print(p:name(\"新名字\")) --  </pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t\tprint(p:name())</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        p:name(\"Alice\")</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        print(p:name()) -- \"Alice\"</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    `</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"共享lua字节代码\"><a class=\"markdownIt-Anchor\" href=\"#共享lua字节代码\">#</a> 共享 lua 字节代码</h3>\n<p>调用 DoFile 将加载一个 Lua 脚本，将其编译为字节码，并在一个 LState 中运行字节码。</p>\n<p>如果你有多个 LState，它们都需要运行同一个脚本，你可以在它们之间共享字节码，这将节省内存。共享字节码是安全的，因为它是只读的，不能被 lua 脚本所改变。</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// CompileLua reads the passed lua file from disk and compiles it.</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">CompileLua</span><span class=\"token punctuation\">(</span>filePath <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>FunctionProto<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    file<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">defer</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    reader <span class=\"token operator\">:=</span> bufio<span class=\"token punctuation\">.</span><span class=\"token function\">NewReader</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    chunk<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> parse<span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>reader<span class=\"token punctuation\">,</span> filePath<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    proto<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> lua<span class=\"token punctuation\">.</span><span class=\"token function\">Compile</span><span class=\"token punctuation\">(</span>chunk<span class=\"token punctuation\">,</span> filePath<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">return</span> proto<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">// DoCompiledFile takes a FunctionProto, as returned by CompileLua, and runs it in the LState. It is equivalent</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">// to calling DoFile on the LState with the original source file.</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">DoCompiledFile</span><span class=\"token punctuation\">(</span>L <span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>LState<span class=\"token punctuation\">,</span> proto <span class=\"token operator\">*</span>lua<span class=\"token punctuation\">.</span>FunctionProto<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    lfunc <span class=\"token operator\">:=</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">NewFunctionFromProto</span><span class=\"token punctuation\">(</span>proto<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    L<span class=\"token punctuation\">.</span><span class=\"token function\">Push</span><span class=\"token punctuation\">(</span>lfunc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">return</span> L<span class=\"token punctuation\">.</span><span class=\"token function\">PCall</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> lua<span class=\"token punctuation\">.</span>MultRet<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"go协程\"><a class=\"markdownIt-Anchor\" href=\"#go协程\">#</a> go 协程</h3>\n<p>LState 不是 goroutine-safe。建议每个 goroutine 使用一个 LState，并通过使用通道在 goroutine 之间通信。</p>\n<p>通道在 GopherLua 中由通道对象表示。而一个通道表提供了执行通道操作的函数。</p>\n<p>有些对象不能通过通道发送，因为它本身有非 goroutine 安全的对象。</p>\n<p>一个线程 (state)<br>\n 一个函数<br>\n一个用户数据<br>\n一个有元数据的表</p>\n",
            "tags": [
                "golang实验室"
            ]
        }
    ]
}