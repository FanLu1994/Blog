{
    "version": "https://jsonfeed.org/version/1",
    "title": "何妨吟啸且徐行 • All posts by \"产品经理\" tag",
    "description": "",
    "home_page_url": "https://fanlu.top",
    "items": [
        {
            "id": "https://fanlu.top/2023/06/17/%E5%89%8D%E7%AB%AF/Web%E7%95%8C%E9%9D%A2%E8%AE%BE%E8%AE%A1%E5%87%86%E5%88%99%E2%80%94%E7%BF%BB%E8%AF%91/",
            "url": "https://fanlu.top/2023/06/17/%E5%89%8D%E7%AB%AF/Web%E7%95%8C%E9%9D%A2%E8%AE%BE%E8%AE%A1%E5%87%86%E5%88%99%E2%80%94%E7%BF%BB%E8%AF%91/",
            "title": "Web界面设计准则—翻译",
            "date_published": "2023-06-17T15:55:48.000Z",
            "content_html": "<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbnRlcmZhY2VzLnJhdW5vLm1lLw==\">https://interfaces.rauno.me/</span></p>\n<p>这个文档概述了构建良好的用户界面的一些细节，文档在持续更新中。本文借助 chatgpt 以及个人修改进行翻译，有些其实没接触过的，我也不懂啥意思，建议看原文。</p>\n<h2 id=\"交互\"><a class=\"markdownIt-Anchor\" href=\"#交互\">#</a> 交互</h2>\n<ul>\n<li>点击输入框就聚焦输入</li>\n<li>输入框应该被 form 元素包括，enter 件可以提交</li>\n<li>输入框应该包含 type 属性，例如 password、email</li>\n<li>大部分时间，输入框不应该使用拼写检查（spellcheck）以及自动填充（autocomplete）</li>\n<li>需要校验的时候，使用 required 来校验</li>\n<li>输入前缀和后缀装饰，比如图标、应该绝对定位，应该添加内边距，层级放在输入框上方，而不要放在旁边，点击也可以聚焦到输入框</li>\n<li>toggle 组件必须立即生效，不需要二次确认</li>\n<li>按钮应该在提交后失效，避免重复提交  （或者 loading）</li>\n<li>交互的组件应该设置 user-select 为 none</li>\n<li>装饰元素应该禁用指针事件，避免干扰</li>\n<li>垂直或者水平列表中的可交互元素之间不应存在无效区域，同时应该增加元素内边距增大可点击区域</li>\n</ul>\n<h2 id=\"排版\"><a class=\"markdownIt-Anchor\" href=\"#排版\">#</a> 排版</h2>\n<ul>\n<li>\n<ul>\n<li>字体应该应用  <code>-webkit-font-smoothing: antialiased</code>  以提高可读性</li>\n</ul>\n</li>\n<li>\n<p>字体应该应用  <code>text-rendering: optimizeLegibility</code>  以提高可读性</p>\n</li>\n<li>\n<p>字体应该根据内容、字母表或相关语言进行子集化</p>\n</li>\n<li>\n<p>在鼠标悬停或选中状态下不应改变字体粗细，以避免布局变化</p>\n</li>\n<li>\n<p>不应使用低于 400 的字体粗细</p>\n</li>\n<li>\n<p>中等大小的标题通常在 500-600 的字体粗细之间效果最好</p>\n</li>\n<li>\n<p>通过使用 CSS 的  <code>clamp()</code>  函数动态调整数值，例如  <code>clamp(48px, 5vw, 72px)</code> ，可应用于标题的字体大小<br>\n <code>clamp()</code>  CSS 函数将中间值限制在指定的最小值和最大值范围内。该函数接受三个参数：最小值、首选值和最大允许值。<br>\n换句话说， <code>clamp()</code>  函数确保结果值落在指定的范围内。如果首选值在最小值和最大值之间，则直接返回首选值。如果首选值小于最小值，则返回最小值。同样地，如果首选值大于最大值，则返回最大值。<br>\n以下是使用 <code>clamp()</code>  函数的语法：<br>\n <code>clamp(最小值, 首选值, 最大值)</code> <br>\n 例如， <code>clamp(10px, 5vw, 20px)</code>  将返回至少为 10 像素，但不超过 20 像素的值。如果首选值 <code>5vw</code>  在指定的范围内，将使用它作为结果值。<br>\n这个函数在创建响应式设计时非常有用，其中某个值应根据视口大小进行缩放，但仍有定义的限制。</p>\n</li>\n<li>\n<p>在可用时，应使用  <code>font-variant-numeric: tabular-nums</code>  应用表格数字，特别是在表格或不希望出现布局变化的情况下，例如计时器中</p>\n</li>\n<li>\n<p>使用  <code>-webkit-text-size-adjust: 100%</code>  可防止在 iOS 的横向模式下出现意外的文本调整大小</p>\n</li>\n</ul>\n<h2 id=\"motion动画\"><a class=\"markdownIt-Anchor\" href=\"#motion动画\">#</a> Motion (动画)</h2>\n<ul>\n<li>切换主题不应触发元素 transition 或者动画</li>\n<li>动画不应超过 200ms，否则会影响交互速度</li>\n<li>动画值应该和触发器大小成比例：\n<ul>\n<li>缩放动画不应从 0 到 1，而是从 0.8 开始渐变透明度或者缩放度</li>\n<li>按钮激活动画不应从 1 到 0.8，而是到 0.96 0.9 等等</li>\n</ul>\n</li>\n<li>频率较高的动作避免不必要的动画\n<ul>\n<li>例如右键菜单</li>\n<li>删除或者添加列表项</li>\n<li>一般的按钮</li>\n</ul>\n</li>\n<li>看不见的元素动画应该停止，以降低 cpu 和 gpu 的能耗</li>\n<li>使用 scroll-behavior:smooth 来作为业内导航的参数</li>\n</ul>\n<h2 id=\"触摸-移动设备\"><a class=\"markdownIt-Anchor\" href=\"#触摸-移动设备\">#</a> 触摸 （移动设备）</h2>\n<ul>\n<li>触摸时不应显示悬停状态，使用 <code>@media (hover: hover)</code>  来实现。</li>\n<li>输入框字体不小于 16px，防止 ios 焦点状态下缩放</li>\n<li>输入框不应自动获取焦点</li>\n<li>video，应使用  <code>muted</code>  和  <code>playsinline</code>  属性以在 iOS 上自动播放</li>\n<li>对于自定义组件实现了平移和缩放手势的情况，应禁用  <code>touch-action</code>  属性，以防止与缩放和滚动等本机行为的干扰</li>\n<li>使用  <code>-webkit-tap-highlight-color: rgba(0,0,0,0)</code>  可以禁用默认的 iOS 点击高亮效果，但始终应替代为适当的替代方案</li>\n</ul>\n<h2 id=\"优化\"><a class=\"markdownIt-Anchor\" href=\"#优化\">#</a> 优化</h2>\n<ul>\n<li>使用较大的  <code>blur()</code>  值来设置  <code>filter</code>  和  <code>backdrop-filter</code>  可能会导致性能下降</li>\n<li>矩形缩放和模糊处理会导致色带效应（banding），使用径向渐变比较好</li>\n<li>谨慎使用  <code>transform: translateZ(0)</code>  来启用 GPU 渲染，以提高性能，但仅适用于性能较差的动画</li>\n<li>对于性能较差的滚动动画，在动画的持续时间内切换  <code>will-change</code>  属性</li>\n<li>播放过多的视频可能会导致 iOS 设备性能下降，建议对屏幕外的视频进行暂停甚至卸载</li>\n<li>使用  <code>refs</code>  绕过 React 的渲染生命周期，直接将实时值提交给 DOM</li>\n<li>检测和适应用户设备的硬件和网络能力</li>\n</ul>\n<h2 id=\"友好设计\"><a class=\"markdownIt-Anchor\" href=\"#友好设计\">#</a> 友好设计</h2>\n<ul>\n<li>禁用的按钮不应有提示信息</li>\n<li>焦点环使用 box-shadow 而不是 outline</li>\n<li>列表可聚焦元素支持上下键切换</li>\n<li>列表可聚焦元素支持删除键删除</li>\n<li>下拉菜单触发应该是 onMouseDown 而不是 onClick 事件</li>\n<li>使用带有样式标签的 SVG 网站图标，根据 prefers-color-scheme 遵循系统主题</li>\n<li>仅包含图标的交互元素应该定义一个明确的  <code>aria-label</code>   （这样会支持屏幕阅读工具阅读）</li>\n<li>悬浮触发的 tip 不应包含交互内容</li>\n<li>图片使用 img 渲染，方便复制</li>\n<li>插图应该有 aria-label</li>\n<li>渐变文本在  <code>::selection</code>  状态下应取消渐变效果</li>\n<li>当使用嵌套菜单时，使用 &quot;prediction cone” 以防止指针在移动过程中意外关闭菜单</li>\n</ul>\n<h2 id=\"设计\"><a class=\"markdownIt-Anchor\" href=\"#设计\">#</a> 设计</h2>\n<ul>\n<li>提交后数据更新；但服务器报错后进行回滚和提示</li>\n<li>身份验证应该在服务器完成，避免 url 变化</li>\n<li>使用  <code>::selection</code>  样式化文档选中状态</li>\n<li>显示反馈：\n<ul>\n<li>复制成功时，显示一个内联的标记，而不是一个通知</li>\n<li>输入错误时高亮显示相关的输入框</li>\n</ul>\n</li>\n<li>空状态应提示创建新项，并可选择使用模板</li>\n</ul>\n",
            "tags": [
                "前端",
                "产品经理"
            ]
        }
    ]
}