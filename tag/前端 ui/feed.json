{
    "version": "https://jsonfeed.org/version/1",
    "title": "何妨吟啸且徐行 • All posts by \"前端 ui\" tag",
    "description": "",
    "home_page_url": "https://fanlu.top",
    "items": [
        {
            "id": "https://fanlu.top/2023/06/20/daisyUI%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/",
            "url": "https://fanlu.top/2023/06/20/daisyUI%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/",
            "title": "daisyUI使用体验",
            "date_published": "2023-06-20T15:28:33.000Z",
            "content_html": "<h2 id=\"tailwind介绍\"><a class=\"markdownIt-Anchor\" href=\"#tailwind介绍\">#</a> tailwind 介绍</h2>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudGFpbHdpbmRjc3MuY24vZG9jcy9jdXN0b21pemluZy1jb2xvcnMjLTg=\">https://www.tailwindcss.cn/docs/customizing-colors#-8</span></p>\n</blockquote>\n<p><em>以下介绍来自 chatGPT:</em><br>\nTailwind CSS 是一个现代化的 CSS 框架，它提供了一套可复用的构建块和实用工具，用于快速开发现代化的、自定义的用户界面。</p>\n<p>与其他 CSS 框架相比，Tailwind CSS 的一个主要区别是它并没有预定义的样式类。相反，它提供了一组原子级的 CSS 类，每个类都对应一个特定的样式属性。这些类的命名是基于其功能而不是视觉效果，例如 “text-red-500” 表示红色文本颜色，“bg-blue-200” 表示蓝色背景颜色，“p-4” 表示边距为 4 的元素等等。通过将这些类组合在一起，开发者可以轻松地构建自定义的样式。</p>\n<p>使用 Tailwind CSS，开发者可以通过组合这些原子类来创建出复杂的布局和设计，而不需要手动编写大量的 CSS。这使得开发过程更加快速和高效，并且可以在不同的项目中实现一致的设计风格。</p>\n<p>Tailwind CSS 还提供了一些有用的实用工具，如网格系统、响应式设计类、颜色调色板、阴影效果等。它还支持定制化配置，可以根据项目需求进行个性化设置，并且可以通过插件系统进行扩展。</p>\n<p>总的来说，Tailwind CSS 是一个强大的 CSS 框架，它通过提供原子级的类和实用工具，使得开发者可以更轻松、高效地构建自定义的用户界面。它的灵活性和可定制化的特点使其在现代 Web 开发中广受欢迎。</p>\n<p><em>个人使用体验</em>：<br>\n优点：</p>\n<ul>\n<li>节省时间，提升了开发速度</li>\n<li>丰富的预制样式，可以提供样式设计的思路<br>\n缺点：</li>\n<li>代码会比较混乱，一个元素的 class 可能会定义的特别长</li>\n<li>后期不好维护，每个元素都自定义了，后面要修改就比较麻烦 （当然也可以封装）</li>\n<li>可能与其他组件样式冲突</li>\n<li>导致元素的基础样式丢失，比如 h1 h2 等，不过可以使用 prose 插件解决 （具体见：<a href=\"https://fanlu.top/2023/06/12/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%A8%A1%E6%9D%BF%E5%B7%A5%E5%85%B7%E5%BC%80%E5%8F%91-01/%EF%BC%89\">https://fanlu.top/2023/06/12 / 微信公众号模板工具开发 - 01/）</a></li>\n</ul>\n<p>结论：小项目建议使用，大项目不建议</p>\n<h2 id=\"daisyui介绍\"><a class=\"markdownIt-Anchor\" href=\"#daisyui介绍\">#</a> daisyUI 介绍</h2>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kYWlzeXVpLmNvbS9kb2NzL2luc3RhbGwv\">https://daisyui.com/docs/install/</span></p>\n</blockquote>\n<p>这是一个基于 tailwindcss 的组件库，现在 tailwindcss 也有自己的组件库（<span class=\"exturl\" data-url=\"aHR0cHM6Ly90YWlsd2luZHVpLmNvbS9jb21wb25lbnRzJUVGJUJDJTg5JUVGJUJDJThDJUU0JUI4JThEJUU4JUJGJTg3JUU2JTk4JUFGJUU2JTk0JUI2JUU4JUI0JUI5JUU3JTlBJTg0JUUzJTgwJTgy\">https://tailwindui.com/components），不过是收费的。</span></p>\n<p>daisyui 是一个简单的组件库，这里的简单是指它的组件真的很简单，只有预设的样式，没有提供任何原生以外的组件功能。<br>\n想到用这个，主要是因为 element 的原生样式太不能满足需求了，修改也比较麻烦（其实现在看还好）。</p>\n<h2 id=\"简单使用\"><a class=\"markdownIt-Anchor\" href=\"#简单使用\">#</a> 简单使用</h2>\n<ol>\n<li>安装 daisyUI:</li>\n</ol>\n<pre><code class=\"language-undefined\">npm i -D daisyui\n</code></pre>\n<ol start=\"2\">\n<li>然后，在你的 <code>tailwind.config.js</code>  文件里追加 daisyUI 的设置:</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token comment\">//...</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"daisyui\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在组件中这样使用</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn btn-success btn-sm py-0 text-sm leading-3<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>copy<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>复制<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"与elementui的比较\"><a class=\"markdownIt-Anchor\" href=\"#与elementui的比较\">#</a> 与 elementui 的比较</h2>\n<h3 id=\"优势\"><a class=\"markdownIt-Anchor\" href=\"#优势\">#</a> 优势：</h3>\n<ul>\n<li>样式美观，自定义很方便</li>\n<li>功能好修改，更接近原生<br>\n劣势：</li>\n<li>功能不够丰富，大部分功能需要自己单独写</li>\n<li>组件目前还不如 element 丰富</li>\n</ul>\n<h2 id=\"体验总结\"><a class=\"markdownIt-Anchor\" href=\"#体验总结\">#</a> 体验总结</h2>\n<p>建议作为兴趣使用，如果想要快速出活，还是用其他的组件库比较好。</p>\n",
            "tags": [
                "前端 UI"
            ]
        }
    ]
}