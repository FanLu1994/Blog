{
    "version": "https://jsonfeed.org/version/1",
    "title": "何妨吟啸且徐行 • All posts by \"wasm\" tag",
    "description": "",
    "home_page_url": "https://fanlu.top",
    "items": [
        {
            "id": "https://fanlu.top/2023/07/16/%E5%89%8D%E7%AB%AF/vue-golang-webassembly%E5%88%9D%E4%BD%93%E9%AA%8C/",
            "url": "https://fanlu.top/2023/07/16/%E5%89%8D%E7%AB%AF/vue-golang-webassembly%E5%88%9D%E4%BD%93%E9%AA%8C/",
            "title": "vue-golang-webassembly初体验",
            "date_published": "2023-07-16T04:44:21.000Z",
            "content_html": "<h1 id=\"golang-部分\"><a class=\"markdownIt-Anchor\" href=\"#golang-部分\">#</a> golang 部分</h1>\n<blockquote>\n<p>参考 https://geektutu.com/post/quick-go-wasm.html</p>\n</blockquote>\n<h2 id=\"开发\"><a class=\"markdownIt-Anchor\" href=\"#开发\">#</a> 开发</h2>\n<pre><code>package main  \n  \nimport &quot;syscall/js&quot;  //  goland可能会报错，忽略即可\n  \nfunc main() &#123;  \n   alert := js.Global().Get(&quot;alert&quot;)  \n   alert.Invoke(&quot;Hello World!&quot;)  \n&#125;\n</code></pre>\n<h2 id=\"编译\"><a class=\"markdownIt-Anchor\" href=\"#编译\">#</a> 编译</h2>\n<p>不能用 <code>go build</code>  直接编译<br>\n windows 下面可以在 git bash 窗口编译</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token assign-left variable\">GOOS</span><span class=\"token operator\">=</span>js <span class=\"token assign-left variable\">GOARCH</span><span class=\"token operator\">=</span>wasm go build <span class=\"token parameter variable\">-o</span> static/main.wasm</pre></td></tr></table></figure><p>编译后，会在项目目录下生成 static/main.wasm</p>\n<h2 id=\"vue部分\"><a class=\"markdownIt-Anchor\" href=\"#vue部分\">#</a> vue 部分</h2>\n<h3 id=\"创建项目\"><a class=\"markdownIt-Anchor\" href=\"#创建项目\">#</a> 创建项目</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> init vite vue-wasm</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token builtin class-name\">cd</span> vue-wasm</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token function\">npm</span> <span class=\"token function\">install</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token function\">npm</span> run dev</pre></td></tr></table></figure><h3 id=\"引入wasm\"><a class=\"markdownIt-Anchor\" href=\"#引入wasm\">#</a> 引入 wasm</h3>\n<ol>\n<li>把 wasm_exec.js (注意有不同的版本，报错了可以换版本) 以及 main.wasm 文件复制到 vue 项目下 /static</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// Copyright 2018 The Go Authors. All rights reserved.  </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// Use of this source code is governed by a BSD-style  </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// license that can be found in the LICENSE file.  </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token comment\">// Map multiple JavaScript environments to a single common API,  </span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token comment\">// preferring web standards over Node.js API.   //   // Environments considered:   // - Browsers   // - Node.js   // - Electron   // - Parcel   // - Webpack  </span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> global <span class=\"token operator\">!==</span> <span class=\"token string\">\"undefined\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token comment\">// global already exists  </span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> window <span class=\"token operator\">!==</span> <span class=\"token string\">\"undefined\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      window<span class=\"token punctuation\">.</span>global <span class=\"token operator\">=</span> window<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> self <span class=\"token operator\">!==</span> <span class=\"token string\">\"undefined\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      self<span class=\"token punctuation\">.</span>global <span class=\"token operator\">=</span> self<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cannot export Go (neither global, window nor self is defined)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>global<span class=\"token punctuation\">.</span>require <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> require <span class=\"token operator\">!==</span> <span class=\"token string\">\"undefined\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      global<span class=\"token punctuation\">.</span>require <span class=\"token operator\">=</span> require<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>global<span class=\"token punctuation\">.</span>fs <span class=\"token operator\">&amp;&amp;</span> global<span class=\"token punctuation\">.</span>require<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fs\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> fs <span class=\"token operator\">===</span> <span class=\"token string\">\"object\"</span> <span class=\"token operator\">&amp;&amp;</span> fs <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length <span class=\"token operator\">!==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>         global<span class=\"token punctuation\">.</span>fs <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>   <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">enosys</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token keyword\">const</span> err <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"not implemented\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      err<span class=\"token punctuation\">.</span>code <span class=\"token operator\">=</span> <span class=\"token string\">\"ENOSYS\"</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token keyword\">return</span> err<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"35\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>global<span class=\"token punctuation\">.</span>fs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      <span class=\"token keyword\">let</span> outputBuf <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>      global<span class=\"token punctuation\">.</span>fs <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"38\"></td><td><pre>         <span class=\"token literal-property property\">constants</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token constant\">O_WRONLY</span><span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">O_RDWR</span><span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">O_CREAT</span><span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">O_TRUNC</span><span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">O_APPEND</span><span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">O_EXCL</span><span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// unused  </span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>         <span class=\"token function\">writeSync</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fd<span class=\"token punctuation\">,</span> buf</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            outputBuf <span class=\"token operator\">+=</span> decoder<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token keyword\">const</span> nl <span class=\"token operator\">=</span> outputBuf<span class=\"token punctuation\">.</span><span class=\"token function\">lastIndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nl <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"43\"></td><td><pre>               console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>outputBuf<span class=\"token punctuation\">.</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> nl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"44\"></td><td><pre>               outputBuf <span class=\"token operator\">=</span> outputBuf<span class=\"token punctuation\">.</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span>nl <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token keyword\">return</span> buf<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"47\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"48\"></td><td><pre>         <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fd<span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">,</span> offset<span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>offset <span class=\"token operator\">!==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> length <span class=\"token operator\">!==</span> buf<span class=\"token punctuation\">.</span>length <span class=\"token operator\">||</span> position <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"50\"></td><td><pre>               <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"51\"></td><td><pre>               <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token keyword\">const</span> n <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">writeSync</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"54\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"55\"></td><td><pre>         <span class=\"token function\">chmod</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> mode<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"56\"></td><td><pre>         <span class=\"token function\">chown</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> uid<span class=\"token punctuation\">,</span> gid<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"57\"></td><td><pre>         <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fd<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"58\"></td><td><pre>         <span class=\"token function\">fchmod</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fd<span class=\"token punctuation\">,</span> mode<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"59\"></td><td><pre>         <span class=\"token function\">fchown</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fd<span class=\"token punctuation\">,</span> uid<span class=\"token punctuation\">,</span> gid<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"60\"></td><td><pre>         <span class=\"token function\">fstat</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fd<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"61\"></td><td><pre>         <span class=\"token function\">fsync</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fd<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"62\"></td><td><pre>         <span class=\"token function\">ftruncate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fd<span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"63\"></td><td><pre>         <span class=\"token function\">lchown</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> uid<span class=\"token punctuation\">,</span> gid<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"64\"></td><td><pre>         <span class=\"token function\">link</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> link<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"65\"></td><td><pre>         <span class=\"token function\">lstat</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"66\"></td><td><pre>         <span class=\"token function\">mkdir</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> perm<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"67\"></td><td><pre>         <span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> flags<span class=\"token punctuation\">,</span> mode<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"68\"></td><td><pre>         <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fd<span class=\"token punctuation\">,</span> buffer<span class=\"token punctuation\">,</span> offset<span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"69\"></td><td><pre>         <span class=\"token function\">readdir</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"70\"></td><td><pre>         <span class=\"token function\">readlink</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"71\"></td><td><pre>         <span class=\"token function\">rename</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">from<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"72\"></td><td><pre>         <span class=\"token function\">rmdir</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"73\"></td><td><pre>         <span class=\"token function\">stat</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"74\"></td><td><pre>         <span class=\"token function\">symlink</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> link<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"75\"></td><td><pre>         <span class=\"token function\">truncate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"76\"></td><td><pre>         <span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"77\"></td><td><pre>         <span class=\"token function\">utimes</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> atime<span class=\"token punctuation\">,</span> mtime<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"78\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"79\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"80\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"81\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>global<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"82\"></td><td><pre>      global<span class=\"token punctuation\">.</span>process <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"83\"></td><td><pre>         <span class=\"token function\">getuid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"84\"></td><td><pre>         <span class=\"token function\">getgid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"85\"></td><td><pre>         <span class=\"token function\">geteuid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"86\"></td><td><pre>         <span class=\"token function\">getegid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"87\"></td><td><pre>         <span class=\"token function\">getgroups</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">throw</span> <span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"88\"></td><td><pre>         <span class=\"token literal-property property\">pid</span><span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"89\"></td><td><pre>         <span class=\"token literal-property property\">ppid</span><span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"90\"></td><td><pre>         <span class=\"token function\">umask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">throw</span> <span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"91\"></td><td><pre>         <span class=\"token function\">cwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">throw</span> <span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"92\"></td><td><pre>         <span class=\"token function\">chdir</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">throw</span> <span class=\"token function\">enosys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"93\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"94\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"95\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"96\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>global<span class=\"token punctuation\">.</span>crypto <span class=\"token operator\">&amp;&amp;</span> global<span class=\"token punctuation\">.</span>require<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"97\"></td><td><pre>      <span class=\"token keyword\">const</span> nodeCrypto <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"crypto\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"98\"></td><td><pre>      global<span class=\"token punctuation\">.</span>crypto <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"99\"></td><td><pre>         <span class=\"token function\">getRandomValues</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"100\"></td><td><pre>            nodeCrypto<span class=\"token punctuation\">.</span><span class=\"token function\">randomFillSync</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"101\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"102\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"103\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"104\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>global<span class=\"token punctuation\">.</span>crypto<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"105\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"global.crypto is not available, polyfill required (getRandomValues only)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"106\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"107\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"108\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>global<span class=\"token punctuation\">.</span>performance<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"109\"></td><td><pre>      global<span class=\"token punctuation\">.</span>performance <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"110\"></td><td><pre>         <span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"111\"></td><td><pre>            <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>sec<span class=\"token punctuation\">,</span> nsec<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span><span class=\"token function\">hrtime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"112\"></td><td><pre>            <span class=\"token keyword\">return</span> sec <span class=\"token operator\">*</span> <span class=\"token number\">1000</span> <span class=\"token operator\">+</span> nsec <span class=\"token operator\">/</span> <span class=\"token number\">1000000</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"113\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"114\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"115\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"116\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"117\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>global<span class=\"token punctuation\">.</span>TextEncoder <span class=\"token operator\">&amp;&amp;</span> global<span class=\"token punctuation\">.</span>require<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"118\"></td><td><pre>      global<span class=\"token punctuation\">.</span>TextEncoder <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"util\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>TextEncoder<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"119\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"120\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>global<span class=\"token punctuation\">.</span>TextEncoder<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"121\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"global.TextEncoder is not available, polyfill required\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"122\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"123\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"124\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>global<span class=\"token punctuation\">.</span>TextDecoder <span class=\"token operator\">&amp;&amp;</span> global<span class=\"token punctuation\">.</span>require<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"125\"></td><td><pre>      global<span class=\"token punctuation\">.</span>TextDecoder <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"util\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>TextDecoder<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"126\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"127\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>global<span class=\"token punctuation\">.</span>TextDecoder<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"128\"></td><td><pre>      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"global.TextDecoder is not available, polyfill required\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"129\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"130\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"131\"></td><td><pre>   <span class=\"token comment\">// End of polyfills for common API.  </span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"133\"></td><td><pre>   <span class=\"token keyword\">const</span> encoder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextEncoder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"134\"></td><td><pre>   <span class=\"token keyword\">const</span> decoder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextDecoder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"135\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"136\"></td><td><pre>   global<span class=\"token punctuation\">.</span>Go <span class=\"token operator\">=</span> <span class=\"token keyword\">class</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"137\"></td><td><pre>      <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"138\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>argv <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"js\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"139\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>env <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"140\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exit</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">code</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"141\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>code <span class=\"token operator\">!==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"142\"></td><td><pre>               console<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"exit code:\"</span><span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"143\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"144\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"145\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_exitPromise <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"146\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_resolveExitPromise <span class=\"token operator\">=</span> resolve<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"147\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"148\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_pendingEvent <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"149\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scheduledTimeouts <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"150\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_nextCallbackTimeoutID <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"151\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"152\"></td><td><pre>         <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">setInt64</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">addr<span class=\"token punctuation\">,</span> v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"153\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint32</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"154\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint32</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>v <span class=\"token operator\">/</span> <span class=\"token number\">4294967296</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"155\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"156\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"157\"></td><td><pre>         <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getInt64</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">addr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"158\"></td><td><pre>            <span class=\"token keyword\">const</span> low <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">getUint32</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"159\"></td><td><pre>            <span class=\"token keyword\">const</span> high <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">getInt32</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"160\"></td><td><pre>            <span class=\"token keyword\">return</span> low <span class=\"token operator\">+</span> high <span class=\"token operator\">*</span> <span class=\"token number\">4294967296</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"161\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"162\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"163\"></td><td><pre>         <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">loadValue</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">addr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"164\"></td><td><pre>            <span class=\"token keyword\">const</span> f <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">getFloat64</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"165\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>f <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"166\"></td><td><pre>               <span class=\"token keyword\">return</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"167\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"168\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"169\"></td><td><pre>               <span class=\"token keyword\">return</span> f<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"170\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"171\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"172\"></td><td><pre>            <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">getUint32</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"173\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_values<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"174\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"175\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"176\"></td><td><pre>         <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">storeValue</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">addr<span class=\"token punctuation\">,</span> v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"177\"></td><td><pre>            <span class=\"token keyword\">const</span> nanHead <span class=\"token operator\">=</span> <span class=\"token number\">0x7FF80000</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"178\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"179\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> v <span class=\"token operator\">===</span> <span class=\"token string\">\"number\"</span> <span class=\"token operator\">&amp;&amp;</span> v <span class=\"token operator\">!==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"180\"></td><td><pre>               <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"181\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint32</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> nanHead<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"182\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint32</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"183\"></td><td><pre>                  <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>               <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"184\"></td><td><pre>               <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat64</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"185\"></td><td><pre>               <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"186\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"187\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>v <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"188\"></td><td><pre>               <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat64</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"189\"></td><td><pre>               <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"190\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"191\"></td><td><pre>            <span class=\"token keyword\">let</span> id <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_ids<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"192\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>id <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"193\"></td><td><pre>               id <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_idPool<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"194\"></td><td><pre>               <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>id <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"195\"></td><td><pre>                  id <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_values<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"196\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"197\"></td><td><pre>               <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_values<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"198\"></td><td><pre>               <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_goRefCounts<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"199\"></td><td><pre>               <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_ids<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"200\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"201\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_goRefCounts<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"202\"></td><td><pre>            <span class=\"token keyword\">let</span> typeFlag <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"203\"></td><td><pre>            <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> v<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"204\"></td><td><pre>               <span class=\"token keyword\">case</span> <span class=\"token string\">\"object\"</span><span class=\"token operator\">:</span>  </pre></td></tr><tr><td data-num=\"205\"></td><td><pre>                  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>v <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"206\"></td><td><pre>                     typeFlag <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"207\"></td><td><pre>                  <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"208\"></td><td><pre>                  <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"209\"></td><td><pre>               <span class=\"token keyword\">case</span> <span class=\"token string\">\"string\"</span><span class=\"token operator\">:</span>  </pre></td></tr><tr><td data-num=\"210\"></td><td><pre>                  typeFlag <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"211\"></td><td><pre>                  <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>               <span class=\"token keyword\">case</span> <span class=\"token string\">\"symbol\"</span><span class=\"token operator\">:</span>  </pre></td></tr><tr><td data-num=\"212\"></td><td><pre>                  typeFlag <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"213\"></td><td><pre>                  <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>               <span class=\"token keyword\">case</span> <span class=\"token string\">\"function\"</span><span class=\"token operator\">:</span>  </pre></td></tr><tr><td data-num=\"214\"></td><td><pre>                  typeFlag <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"215\"></td><td><pre>                  <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"216\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint32</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> nanHead <span class=\"token operator\">|</span> typeFlag<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"217\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint32</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"218\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"219\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"220\"></td><td><pre>         <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">loadSlice</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">addr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"221\"></td><td><pre>            <span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token function\">getInt64</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"222\"></td><td><pre>            <span class=\"token keyword\">const</span> len <span class=\"token operator\">=</span> <span class=\"token function\">getInt64</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"223\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">,</span> len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"224\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"225\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"226\"></td><td><pre>         <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">loadSliceOfValues</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">addr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"227\"></td><td><pre>            <span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token function\">getInt64</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"228\"></td><td><pre>            <span class=\"token keyword\">const</span> len <span class=\"token operator\">=</span> <span class=\"token function\">getInt64</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"229\"></td><td><pre>            <span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span>len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"230\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"231\"></td><td><pre>               a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>array <span class=\"token operator\">+</span> i <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"232\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"233\"></td><td><pre>            <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"234\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"235\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"236\"></td><td><pre>         <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">loadString</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">addr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"237\"></td><td><pre>            <span class=\"token keyword\">const</span> saddr <span class=\"token operator\">=</span> <span class=\"token function\">getInt64</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"238\"></td><td><pre>            <span class=\"token keyword\">const</span> len <span class=\"token operator\">=</span> <span class=\"token function\">getInt64</span><span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"239\"></td><td><pre>            <span class=\"token keyword\">return</span> decoder<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">DataView</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">,</span> saddr<span class=\"token punctuation\">,</span> len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"240\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"241\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"242\"></td><td><pre>         <span class=\"token keyword\">const</span> timeOrigin <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> performance<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"243\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>importObject <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"244\"></td><td><pre>            <span class=\"token literal-property property\">go</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"245\"></td><td><pre>               <span class=\"token comment\">// Go's SP does not change as long as no Go code is running. Some operations (e.g. calls, getters and setters)  </span></pre></td></tr><tr><td data-num=\"246\"></td><td><pre>               <span class=\"token comment\">// may synchronously trigger a Go event handler. This makes Go code get executed in the middle of the imported               // function. A goroutine can switch to a new stack if the current stack is too small (see morestack function).               // This changes the SP, thus we have to update the SP used by the imported function.  </span></pre></td></tr><tr><td data-num=\"247\"></td><td><pre>               <span class=\"token comment\">// func wasmExit(code int32)               \"runtime.wasmExit\": (sp) => &#123;  </span></pre></td></tr><tr><td data-num=\"248\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"249\"></td><td><pre>                  <span class=\"token keyword\">const</span> code <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">getInt32</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"250\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>exited <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"251\"></td><td><pre>                  <span class=\"token keyword\">delete</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"252\"></td><td><pre>                  <span class=\"token keyword\">delete</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_values<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"253\"></td><td><pre>                  <span class=\"token keyword\">delete</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_goRefCounts<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"254\"></td><td><pre>                  <span class=\"token keyword\">delete</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_ids<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"255\"></td><td><pre>                  <span class=\"token keyword\">delete</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_idPool<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"256\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"257\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"258\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"259\"></td><td><pre>               <span class=\"token comment\">// func wasmWrite(fd uintptr, p unsafe.Pointer, n int32)  </span></pre></td></tr><tr><td data-num=\"260\"></td><td><pre>               <span class=\"token string-property property\">\"runtime.wasmWrite\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"261\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"262\"></td><td><pre>                  <span class=\"token keyword\">const</span> fd <span class=\"token operator\">=</span> <span class=\"token function\">getInt64</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"263\"></td><td><pre>                  <span class=\"token keyword\">const</span> p <span class=\"token operator\">=</span> <span class=\"token function\">getInt64</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"264\"></td><td><pre>                  <span class=\"token keyword\">const</span> n <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">getInt32</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"265\"></td><td><pre>                  fs<span class=\"token punctuation\">.</span><span class=\"token function\">writeSync</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"266\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"267\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"268\"></td><td><pre>               <span class=\"token comment\">// func resetMemoryDataView()  </span></pre></td></tr><tr><td data-num=\"269\"></td><td><pre>               <span class=\"token string-property property\">\"runtime.resetMemoryDataView\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"270\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"271\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataView</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"272\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"273\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"274\"></td><td><pre>               <span class=\"token comment\">// func nanotime1() int64  </span></pre></td></tr><tr><td data-num=\"275\"></td><td><pre>               <span class=\"token string-property property\">\"runtime.nanotime1\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"276\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"277\"></td><td><pre>                  <span class=\"token function\">setInt64</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>timeOrigin <span class=\"token operator\">+</span> performance<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"278\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"279\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"280\"></td><td><pre>               <span class=\"token comment\">// func walltime() (sec int64, nsec int32)  </span></pre></td></tr><tr><td data-num=\"281\"></td><td><pre>               <span class=\"token string-property property\">\"runtime.walltime\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"282\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"283\"></td><td><pre>                  <span class=\"token keyword\">const</span> msec <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"284\"></td><td><pre>                  <span class=\"token function\">setInt64</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> msec <span class=\"token operator\">/</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"285\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setInt32</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>msec <span class=\"token operator\">%</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000000</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"286\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"287\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"288\"></td><td><pre>               <span class=\"token comment\">// func scheduleTimeoutEvent(delay int64) int32  </span></pre></td></tr><tr><td data-num=\"289\"></td><td><pre>               <span class=\"token string-property property\">\"runtime.scheduleTimeoutEvent\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"290\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"291\"></td><td><pre>                  <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_nextCallbackTimeoutID<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"292\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_nextCallbackTimeoutID<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"293\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scheduledTimeouts<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>  </pre></td></tr><tr><td data-num=\"294\"></td><td><pre>                     <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"295\"></td><td><pre>                        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_resume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"296\"></td><td><pre>                        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scheduledTimeouts<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"297\"></td><td><pre>                           <span class=\"token comment\">// for some reason Go failed to register the timeout event, log and try again  </span></pre></td></tr><tr><td data-num=\"298\"></td><td><pre>                           <span class=\"token comment\">// (temporary workaround for https://github.com/golang/go/issues/28975)                           console.warn(\"scheduleTimeoutEvent: missed timeout event\");  </span></pre></td></tr><tr><td data-num=\"299\"></td><td><pre>                           <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_resume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"300\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"301\"></td><td><pre>                     <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"302\"></td><td><pre>                     <span class=\"token function\">getInt64</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// setTimeout has been seen to fire up to 1 millisecond early  </span></pre></td></tr><tr><td data-num=\"303\"></td><td><pre>                  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"304\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setInt32</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"305\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"306\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"307\"></td><td><pre>               <span class=\"token comment\">// func clearTimeoutEvent(id int32)  </span></pre></td></tr><tr><td data-num=\"308\"></td><td><pre>               <span class=\"token string-property property\">\"runtime.clearTimeoutEvent\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"309\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"310\"></td><td><pre>                  <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">getInt32</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"311\"></td><td><pre>                  <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scheduledTimeouts<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"312\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scheduledTimeouts<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"313\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"314\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"315\"></td><td><pre>               <span class=\"token comment\">// func getRandomData(r []byte)  </span></pre></td></tr><tr><td data-num=\"316\"></td><td><pre>               <span class=\"token string-property property\">\"runtime.getRandomData\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"317\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"318\"></td><td><pre>                  crypto<span class=\"token punctuation\">.</span><span class=\"token function\">getRandomValues</span><span class=\"token punctuation\">(</span><span class=\"token function\">loadSlice</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"319\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"320\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"321\"></td><td><pre>               <span class=\"token comment\">// func finalizeRef(v ref)  </span></pre></td></tr><tr><td data-num=\"322\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.finalizeRef\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"323\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"324\"></td><td><pre>                  <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">getUint32</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"325\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_goRefCounts<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"326\"></td><td><pre>                  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_goRefCounts<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"327\"></td><td><pre>                     <span class=\"token keyword\">const</span> v <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_values<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"328\"></td><td><pre>                     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_values<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"329\"></td><td><pre>                     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_ids<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"330\"></td><td><pre>                     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_idPool<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"331\"></td><td><pre>                  <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"332\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"333\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"334\"></td><td><pre>               <span class=\"token comment\">// func stringVal(value string) ref  </span></pre></td></tr><tr><td data-num=\"335\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.stringVal\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"336\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"337\"></td><td><pre>                  <span class=\"token function\">storeValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token function\">loadString</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"338\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"339\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"340\"></td><td><pre>               <span class=\"token comment\">// func valueGet(v ref, p string) ref  </span></pre></td></tr><tr><td data-num=\"341\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.valueGet\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"342\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"343\"></td><td><pre>                  <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">loadString</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"344\"></td><td><pre>                  sp <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">getsp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>>></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// see comment above  </span></pre></td></tr><tr><td data-num=\"345\"></td><td><pre>                  <span class=\"token function\">storeValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"346\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"347\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"348\"></td><td><pre>               <span class=\"token comment\">// func valueSet(v ref, p string, x ref)  </span></pre></td></tr><tr><td data-num=\"349\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.valueSet\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"350\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"351\"></td><td><pre>                  Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">loadString</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"352\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"353\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"354\"></td><td><pre>               <span class=\"token comment\">// func valueDelete(v ref, p string)  </span></pre></td></tr><tr><td data-num=\"355\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.valueDelete\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"356\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"357\"></td><td><pre>                  Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">deleteProperty</span><span class=\"token punctuation\">(</span><span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">loadString</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"358\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"359\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"360\"></td><td><pre>               <span class=\"token comment\">// func valueIndex(v ref, i int) ref  </span></pre></td></tr><tr><td data-num=\"361\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.valueIndex\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"362\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"363\"></td><td><pre>                  <span class=\"token function\">storeValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getInt64</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"364\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"365\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"366\"></td><td><pre>               <span class=\"token comment\">// valueSetIndex(v ref, i int, x ref)  </span></pre></td></tr><tr><td data-num=\"367\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.valueSetIndex\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"368\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"369\"></td><td><pre>                  Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getInt64</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"370\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"371\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"372\"></td><td><pre>               <span class=\"token comment\">// func valueCall(v ref, m string, args []ref) (ref, bool)  </span></pre></td></tr><tr><td data-num=\"373\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.valueCall\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"374\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"375\"></td><td><pre>                  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"376\"></td><td><pre>                     <span class=\"token keyword\">const</span> v <span class=\"token operator\">=</span> <span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"377\"></td><td><pre>                     <span class=\"token keyword\">const</span> m <span class=\"token operator\">=</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> <span class=\"token function\">loadString</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"378\"></td><td><pre>                     <span class=\"token keyword\">const</span> args <span class=\"token operator\">=</span> <span class=\"token function\">loadSliceOfValues</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"379\"></td><td><pre>                     <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token function\">Reflect</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"380\"></td><td><pre>                     sp <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">getsp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>>></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// see comment above  </span></pre></td></tr><tr><td data-num=\"381\"></td><td><pre>                     <span class=\"token function\">storeValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"382\"></td><td><pre>                     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint8</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"383\"></td><td><pre>                  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"384\"></td><td><pre>                     sp <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">getsp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>>></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// see comment above  </span></pre></td></tr><tr><td data-num=\"385\"></td><td><pre>                     <span class=\"token function\">storeValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"386\"></td><td><pre>                     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint8</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"387\"></td><td><pre>                  <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"388\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"389\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"390\"></td><td><pre>               <span class=\"token comment\">// func valueInvoke(v ref, args []ref) (ref, bool)  </span></pre></td></tr><tr><td data-num=\"391\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.valueInvoke\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"392\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"393\"></td><td><pre>                  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"394\"></td><td><pre>                     <span class=\"token keyword\">const</span> v <span class=\"token operator\">=</span> <span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"395\"></td><td><pre>                     <span class=\"token keyword\">const</span> args <span class=\"token operator\">=</span> <span class=\"token function\">loadSliceOfValues</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"396\"></td><td><pre>                     <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token function\">Reflect</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"397\"></td><td><pre>                     sp <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">getsp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>>></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// see comment above  </span></pre></td></tr><tr><td data-num=\"398\"></td><td><pre>                     <span class=\"token function\">storeValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"399\"></td><td><pre>                     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint8</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"400\"></td><td><pre>                  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"401\"></td><td><pre>                     sp <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">getsp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>>></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// see comment above  </span></pre></td></tr><tr><td data-num=\"402\"></td><td><pre>                     <span class=\"token function\">storeValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"403\"></td><td><pre>                     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint8</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"404\"></td><td><pre>                  <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"405\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"406\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"407\"></td><td><pre>               <span class=\"token comment\">// func valueNew(v ref, args []ref) (ref, bool)  </span></pre></td></tr><tr><td data-num=\"408\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.valueNew\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"409\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"410\"></td><td><pre>                  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"411\"></td><td><pre>                     <span class=\"token keyword\">const</span> v <span class=\"token operator\">=</span> <span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"412\"></td><td><pre>                     <span class=\"token keyword\">const</span> args <span class=\"token operator\">=</span> <span class=\"token function\">loadSliceOfValues</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"413\"></td><td><pre>                     <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">construct</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"414\"></td><td><pre>                     sp <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">getsp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>>></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// see comment above  </span></pre></td></tr><tr><td data-num=\"415\"></td><td><pre>                     <span class=\"token function\">storeValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"416\"></td><td><pre>                     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint8</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"417\"></td><td><pre>                  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"418\"></td><td><pre>                     sp <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">getsp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>>></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// see comment above  </span></pre></td></tr><tr><td data-num=\"419\"></td><td><pre>                     <span class=\"token function\">storeValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"420\"></td><td><pre>                     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint8</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"421\"></td><td><pre>                  <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"422\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"423\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"424\"></td><td><pre>               <span class=\"token comment\">// func valueLength(v ref) int  </span></pre></td></tr><tr><td data-num=\"425\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.valueLength\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"426\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"427\"></td><td><pre>                  <span class=\"token function\">setInt64</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"428\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"429\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"430\"></td><td><pre>               <span class=\"token comment\">// valuePrepareString(v ref) (ref, int)  </span></pre></td></tr><tr><td data-num=\"431\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.valuePrepareString\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"432\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"433\"></td><td><pre>                  <span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> encoder<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"434\"></td><td><pre>                  <span class=\"token function\">storeValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"435\"></td><td><pre>                  <span class=\"token function\">setInt64</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> str<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"436\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"437\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"438\"></td><td><pre>               <span class=\"token comment\">// valueLoadString(v ref, b []byte)  </span></pre></td></tr><tr><td data-num=\"439\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.valueLoadString\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"440\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"441\"></td><td><pre>                  <span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"442\"></td><td><pre>                  <span class=\"token function\">loadSlice</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"443\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"444\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"445\"></td><td><pre>               <span class=\"token comment\">// func valueInstanceOf(v ref, t ref) bool  </span></pre></td></tr><tr><td data-num=\"446\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.valueInstanceOf\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"447\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"448\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint8</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"449\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"450\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"451\"></td><td><pre>               <span class=\"token comment\">// func copyBytesToGo(dst []byte, src ref) (int, bool)  </span></pre></td></tr><tr><td data-num=\"452\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.copyBytesToGo\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"453\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"454\"></td><td><pre>                  <span class=\"token keyword\">const</span> dst <span class=\"token operator\">=</span> <span class=\"token function\">loadSlice</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"455\"></td><td><pre>                  <span class=\"token keyword\">const</span> src <span class=\"token operator\">=</span> <span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"456\"></td><td><pre>                  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>src <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Uint8Array</span> <span class=\"token operator\">||</span> src <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Uint8ClampedArray</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"457\"></td><td><pre>                     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint8</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"458\"></td><td><pre>                     <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>                  <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"459\"></td><td><pre>                  <span class=\"token keyword\">const</span> toCopy <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span><span class=\"token function\">subarray</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> dst<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"460\"></td><td><pre>                  dst<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>toCopy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"461\"></td><td><pre>                  <span class=\"token function\">setInt64</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> toCopy<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"462\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint8</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"463\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"464\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"465\"></td><td><pre>               <span class=\"token comment\">// func copyBytesToJS(dst ref, src []byte) (int, bool)  </span></pre></td></tr><tr><td data-num=\"466\"></td><td><pre>               <span class=\"token string-property property\">\"syscall/js.copyBytesToJS\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"467\"></td><td><pre>                  sp <span class=\"token operator\">>>>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"468\"></td><td><pre>                  <span class=\"token keyword\">const</span> dst <span class=\"token operator\">=</span> <span class=\"token function\">loadValue</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"469\"></td><td><pre>                  <span class=\"token keyword\">const</span> src <span class=\"token operator\">=</span> <span class=\"token function\">loadSlice</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"470\"></td><td><pre>                  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>dst <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Uint8Array</span> <span class=\"token operator\">||</span> dst <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Uint8ClampedArray</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"471\"></td><td><pre>                     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint8</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"472\"></td><td><pre>                     <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>                  <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"473\"></td><td><pre>                  <span class=\"token keyword\">const</span> toCopy <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span><span class=\"token function\">subarray</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> dst<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"474\"></td><td><pre>                  dst<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>toCopy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"475\"></td><td><pre>                  <span class=\"token function\">setInt64</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> toCopy<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"476\"></td><td><pre>                  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint8</span><span class=\"token punctuation\">(</span>sp <span class=\"token operator\">+</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"477\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"478\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"479\"></td><td><pre>               <span class=\"token string-property property\">\"debug\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"480\"></td><td><pre>                  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"481\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"482\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"483\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"484\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"485\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"486\"></td><td><pre>      <span class=\"token keyword\">async</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">instance</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"487\"></td><td><pre>         <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>instance <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">WebAssembly<span class=\"token punctuation\">.</span>Instance</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"488\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Go.run: WebAssembly.Instance expected\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"489\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"490\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst <span class=\"token operator\">=</span> instance<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"491\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataView</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"492\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_values <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token comment\">// JS values that Go currently has references to, indexed by reference id  </span></pre></td></tr><tr><td data-num=\"493\"></td><td><pre>            <span class=\"token number\">NaN</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"494\"></td><td><pre>            <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"495\"></td><td><pre>            <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>            <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>            <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>            global<span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"496\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>         <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"497\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_goRefCounts <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_values<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token number\">Infinity</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// number of references that Go has to a JS value, indexed by reference id  </span></pre></td></tr><tr><td data-num=\"498\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_ids <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span> <span class=\"token comment\">// mapping from JS values to reference ids  </span></pre></td></tr><tr><td data-num=\"499\"></td><td><pre>            <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"500\"></td><td><pre>            <span class=\"token punctuation\">[</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"501\"></td><td><pre>            <span class=\"token punctuation\">[</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"502\"></td><td><pre>            <span class=\"token punctuation\">[</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"503\"></td><td><pre>            <span class=\"token punctuation\">[</span>global<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"504\"></td><td><pre>            <span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"505\"></td><td><pre>         <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"506\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_idPool <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// unused ids that have been garbage collected  </span></pre></td></tr><tr><td data-num=\"507\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>exited <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// whether the Go program has exited  </span></pre></td></tr><tr><td data-num=\"508\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"509\"></td><td><pre>         <span class=\"token comment\">// Pass command line arguments and environment variables to WebAssembly by writing them to the linear memory.         let offset = 4096;  </span></pre></td></tr><tr><td data-num=\"510\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"511\"></td><td><pre>         <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">strPtr</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"512\"></td><td><pre>            <span class=\"token keyword\">const</span> ptr <span class=\"token operator\">=</span> offset<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"513\"></td><td><pre>            <span class=\"token keyword\">const</span> bytes <span class=\"token operator\">=</span> encoder<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>str <span class=\"token operator\">+</span> <span class=\"token string\">\"\\0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"514\"></td><td><pre>            <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">,</span> offset<span class=\"token punctuation\">,</span> bytes<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>bytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"515\"></td><td><pre>            offset <span class=\"token operator\">+=</span> bytes<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"516\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>offset <span class=\"token operator\">%</span> <span class=\"token number\">8</span> <span class=\"token operator\">!==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"517\"></td><td><pre>               offset <span class=\"token operator\">+=</span> <span class=\"token number\">8</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>offset <span class=\"token operator\">%</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"518\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"519\"></td><td><pre>            <span class=\"token keyword\">return</span> ptr<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"520\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"521\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"522\"></td><td><pre>         <span class=\"token keyword\">const</span> argc <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"523\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"524\"></td><td><pre>         <span class=\"token keyword\">const</span> argvPtrs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"525\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arg</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"526\"></td><td><pre>            argvPtrs<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token function\">strPtr</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"527\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"528\"></td><td><pre>         argvPtrs<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"529\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"530\"></td><td><pre>         <span class=\"token keyword\">const</span> keys <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"531\"></td><td><pre>         keys<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"532\"></td><td><pre>            argvPtrs<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token function\">strPtr</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>key<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"533\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"534\"></td><td><pre>         argvPtrs<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"535\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"536\"></td><td><pre>         <span class=\"token keyword\">const</span> argv <span class=\"token operator\">=</span> offset<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"537\"></td><td><pre>         argvPtrs<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ptr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"538\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint32</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">,</span> ptr<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"539\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mem<span class=\"token punctuation\">.</span><span class=\"token function\">setUint32</span><span class=\"token punctuation\">(</span>offset <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"540\"></td><td><pre>            offset <span class=\"token operator\">+=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"541\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"542\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"543\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span>argc<span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"544\"></td><td><pre>         <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>exited<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"545\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_resolveExitPromise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"546\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"547\"></td><td><pre>         <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_exitPromise<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"548\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"549\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"550\"></td><td><pre>      <span class=\"token function\">_resume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"551\"></td><td><pre>         <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>exited<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"552\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Go program has already exited\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"553\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"554\"></td><td><pre>         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_inst<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">resume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"555\"></td><td><pre>         <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>exited<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"556\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_resolveExitPromise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"557\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"558\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"559\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"560\"></td><td><pre>      <span class=\"token function\">_makeFuncWrapper</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"561\"></td><td><pre>         <span class=\"token keyword\">const</span> go <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"562\"></td><td><pre>         <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"563\"></td><td><pre>            <span class=\"token keyword\">const</span> event <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> id<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">args</span><span class=\"token operator\">:</span> arguments <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"564\"></td><td><pre>            go<span class=\"token punctuation\">.</span>_pendingEvent <span class=\"token operator\">=</span> event<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"565\"></td><td><pre>            go<span class=\"token punctuation\">.</span><span class=\"token function\">_resume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"566\"></td><td><pre>            <span class=\"token keyword\">return</span> event<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"567\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"568\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"569\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"570\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"571\"></td><td><pre>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>  </pre></td></tr><tr><td data-num=\"572\"></td><td><pre>      <span class=\"token keyword\">typeof</span> module <span class=\"token operator\">!==</span> <span class=\"token string\">\"undefined\"</span> <span class=\"token operator\">&amp;&amp;</span>  </pre></td></tr><tr><td data-num=\"573\"></td><td><pre>      global<span class=\"token punctuation\">.</span>require <span class=\"token operator\">&amp;&amp;</span>  </pre></td></tr><tr><td data-num=\"574\"></td><td><pre>      global<span class=\"token punctuation\">.</span>require<span class=\"token punctuation\">.</span>main <span class=\"token operator\">===</span> module <span class=\"token operator\">&amp;&amp;</span>  </pre></td></tr><tr><td data-num=\"575\"></td><td><pre>      global<span class=\"token punctuation\">.</span>process <span class=\"token operator\">&amp;&amp;</span>  </pre></td></tr><tr><td data-num=\"576\"></td><td><pre>      global<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">.</span>versions <span class=\"token operator\">&amp;&amp;</span>  </pre></td></tr><tr><td data-num=\"577\"></td><td><pre>      <span class=\"token operator\">!</span>global<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">.</span>versions<span class=\"token punctuation\">.</span>electron  </pre></td></tr><tr><td data-num=\"578\"></td><td><pre>   <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"579\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"580\"></td><td><pre>         console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"usage: go_js_wasm_exec [wasm binary] [arguments]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"581\"></td><td><pre>         process<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"582\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"583\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"584\"></td><td><pre>      <span class=\"token keyword\">const</span> go <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Go</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"585\"></td><td><pre>      go<span class=\"token punctuation\">.</span>argv <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"586\"></td><td><pre>      go<span class=\"token punctuation\">.</span>env <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token constant\">TMPDIR</span><span class=\"token operator\">:</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"os\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">tmpdir</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"587\"></td><td><pre>      go<span class=\"token punctuation\">.</span>exit <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"588\"></td><td><pre>      WebAssembly<span class=\"token punctuation\">.</span><span class=\"token function\">instantiate</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> go<span class=\"token punctuation\">.</span>importObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"589\"></td><td><pre>         process<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"exit\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">code</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// Node.js exits if no event handler is pending  </span></pre></td></tr><tr><td data-num=\"590\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>code <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>go<span class=\"token punctuation\">.</span>exited<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"591\"></td><td><pre>               <span class=\"token comment\">// deadlock, make Go print error and stack traces  </span></pre></td></tr><tr><td data-num=\"592\"></td><td><pre>               go<span class=\"token punctuation\">.</span>_pendingEvent <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"593\"></td><td><pre>               go<span class=\"token punctuation\">.</span><span class=\"token function\">_resume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"594\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"595\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"596\"></td><td><pre>         <span class=\"token keyword\">return</span> go<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"597\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"598\"></td><td><pre>         console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"599\"></td><td><pre>         process<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"600\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"601\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"602\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"603\"></td><td><pre></pre></td></tr><tr><td data-num=\"604\"></td><td><pre></pre></td></tr><tr><td data-num=\"605\"></td><td><pre><span class=\"token number\">2.</span> 在index<span class=\"token punctuation\">.</span>html中引入wasm_exec<span class=\"token punctuation\">.</span>js</pre></td></tr><tr><td data-num=\"606\"></td><td><pre><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>`js</pre></td></tr><tr><td data-num=\"607\"></td><td><pre><span class=\"token operator\">&lt;</span>head<span class=\"token operator\">></span>  </pre></td></tr><tr><td data-num=\"608\"></td><td><pre>  <span class=\"token operator\">&lt;</span>meta charset<span class=\"token operator\">=</span><span class=\"token string\">\"UTF-8\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>  </pre></td></tr><tr><td data-num=\"609\"></td><td><pre>  <span class=\"token operator\">&lt;</span>link rel<span class=\"token operator\">=</span><span class=\"token string\">\"icon\"</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"image/svg+xml\"</span> href<span class=\"token operator\">=</span><span class=\"token string\">\"/vite.svg\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>  </pre></td></tr><tr><td data-num=\"610\"></td><td><pre>  <span class=\"token operator\">&lt;</span>meta name<span class=\"token operator\">=</span><span class=\"token string\">\"viewport\"</span> content<span class=\"token operator\">=</span><span class=\"token string\">\"width=device-width, initial-scale=1.0\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>  </pre></td></tr><tr><td data-num=\"611\"></td><td><pre>    <span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"static/wasm_exec.js\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>  </pre></td></tr><tr><td data-num=\"612\"></td><td><pre>  <span class=\"token operator\">&lt;</span>title<span class=\"token operator\">></span>Vite <span class=\"token operator\">+</span> Vue <span class=\"token operator\">+</span> <span class=\"token constant\">TS</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>title<span class=\"token operator\">></span>  </pre></td></tr><tr><td data-num=\"613\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>head<span class=\"token operator\">></span></pre></td></tr></table></figure><h3 id=\"调用go代码\"><a class=\"markdownIt-Anchor\" href=\"#调用go代码\">#</a> 调用 go 代码</h3>\n<p>在 HelloWorld.vue 组件中调用 wasm 函数</p>\n<pre><code class=\"language-vue\">&lt;script setup lang=&quot;ts&quot;&gt;  \nimport &#123; ref,defineProps &#125; from 'vue'  \ndefineProps&lt;&#123; msg: string &#125;&gt;()  \n  \nconst run = ()=&gt;&#123;  \n  const go = new window.Go();  \n  WebAssembly.instantiateStreaming(fetch(&quot;../../static/main.wasm&quot;),go.importObject).  \n  then((result)=&gt;go.run(result.instance));  \n&#125;  \n  \n&lt;/script&gt;  \n  \n&lt;template&gt;  \n  &lt;h1&gt;&#123;&#123; msg &#125;&#125;&lt;/h1&gt;  \n  \n  &lt;div class=&quot;card-body&quot;&gt;  \n    &lt;p class=&quot;text-muted&quot;&gt;  \n      点击“运行”，在控制台输出日志 &lt;code&gt;Hello, WebAssembly!&lt;/code&gt;  \n    &lt;/p&gt;    &lt;div class=&quot;live-preview&quot;&gt;  \n      &lt;button          @click=&quot;run()&quot;  \n          class=&quot;btn btn-success&quot;  \n          id=&quot;runButton&quot;  \n      &gt;  \n        运行  \n      &lt;/button&gt;  \n    &lt;/div&gt;  &lt;/div&gt;  \n&lt;/template&gt;  \n  \n&lt;style scoped&gt;  \n.read-the-docs &#123;  \n  color: #888;  \n&#125;  \n&lt;/style&gt;\n\n</code></pre>\n<h1 id=\"问题\"><a class=\"markdownIt-Anchor\" href=\"#问题\">#</a> 问题</h1>\n<h2 id=\"是否支持跨域\"><a class=\"markdownIt-Anchor\" href=\"#是否支持跨域\">#</a> 是否支持跨域</h2>\n<p>不能</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   alert <span class=\"token operator\">:=</span> js<span class=\"token punctuation\">.</span><span class=\"token function\">Global</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"alert\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   alert<span class=\"token punctuation\">.</span><span class=\"token function\">Invoke</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   url <span class=\"token operator\">:=</span> <span class=\"token string\">\"https://www.baidu.com/\"</span> <span class=\"token comment\">// 要获取数据的 URL  </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   response<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"获取URL数据时出错：%s\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token keyword\">return</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token keyword\">defer</span> response<span class=\"token punctuation\">.</span>Body<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   body<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> ioutil<span class=\"token punctuation\">.</span><span class=\"token function\">ReadAll</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>Body<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"读取响应内容时出错：%s\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token keyword\">return</span>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>浏览器报了跨域错误</p>\n<h2 id=\"是否支持多协程\"><a class=\"markdownIt-Anchor\" href=\"#是否支持多协程\">#</a> 是否支持多协程</h2>\n<p><code>支持</code></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   alert <span class=\"token operator\">:=</span> js<span class=\"token punctuation\">.</span><span class=\"token function\">Global</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"alert\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   alert<span class=\"token punctuation\">.</span><span class=\"token function\">Invoke</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   sleep <span class=\"token operator\">:=</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>x <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> wg <span class=\"token operator\">*</span>sync<span class=\"token punctuation\">.</span>WaitGroup<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token keyword\">defer</span> wg<span class=\"token punctuation\">.</span><span class=\"token function\">Done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      time<span class=\"token punctuation\">.</span><span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>Second <span class=\"token operator\">*</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">Duration</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是coroutine:%d\\n\"</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token keyword\">var</span> wg sync<span class=\"token punctuation\">.</span>WaitGroup  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开启两个协程\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   wg<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token keyword\">go</span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>wg<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   wg<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   <span class=\"token keyword\">go</span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>wg<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   wg<span class=\"token punctuation\">.</span><span class=\"token function\">Wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"All workers done\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "前端",
                "vue",
                "go",
                "wasm"
            ]
        }
    ]
}