{
    "version": "https://jsonfeed.org/version/1",
    "title": "何妨吟啸且徐行 • All posts by \"测试开发 性能 工具\" tag",
    "description": "",
    "home_page_url": "https://fanlu.top",
    "items": [
        {
            "id": "https://fanlu.top/2023/06/25/SoloX%E7%A7%BB%E5%8A%A8%E8%AE%BE%E5%A4%87%E6%80%A7%E8%83%BD%E9%87%87%E9%9B%86%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/",
            "url": "https://fanlu.top/2023/06/25/SoloX%E7%A7%BB%E5%8A%A8%E8%AE%BE%E5%A4%87%E6%80%A7%E8%83%BD%E9%87%87%E9%9B%86%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/",
            "title": "SoloX移动设备性能采集工具使用体验",
            "date_published": "2023-06-25T13:46:33.000Z",
            "content_html": "<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NtYXJ0LXRlc3QtdGkvU29sb1g=\">https://github.com/smart-test-ti/SoloX</span></p>\n</blockquote>\n<p>基于 python 的移动设备性能测试工具，支持 android，通过 itunes（tidevice 的技术）支持了 ios 设备。</p>\n<h2 id=\"功能介绍\"><a class=\"markdownIt-Anchor\" href=\"#功能介绍\">#</a> 功能介绍</h2>\n<p>使用 python -m solox 启动服务，会自动打开 web 客户端：默认端口为 50003。</p>\n<h3 id=\"性能测试\"><a class=\"markdownIt-Anchor\" href=\"#性能测试\">#</a> 性能测试</h3>\n<ul>\n<li>\n<p>设备类型支持安卓和苹果</p>\n</li>\n<li>\n<p>支持选择设备列表</p>\n</li>\n<li>\n<p>支持选择目标 app</p>\n</li>\n<li>\n<p>支持选择子进程 (仅安卓)</p>\n</li>\n<li>\n<p>支持性能指标的开关 （只控制显示，不控制是否采集）</p>\n<ul>\n<li>CPU</li>\n<li>内存</li>\n<li>流量</li>\n<li>FPS</li>\n<li>电池</li>\n<li>surfaceview (仅安卓)</li>\n<li>wifi (仅安卓)</li>\n<li>GPU （仅苹果）</li>\n</ul>\n</li>\n<li>\n<p>支持显示设备信息</p>\n<ul>\n<li>品牌</li>\n<li>设备名</li>\n<li>系统版本</li>\n<li>序列号</li>\n<li>wifi 地址</li>\n</ul>\n</li>\n<li>\n<p>支持启动数据采集、停止设备采集（此时生成报告）</p>\n</li>\n<li>\n<p>支持显示 logcat 日志 <em>重要</em>   (仅安卓)</p>\n</li>\n<li>\n<p>支持安装应用</p>\n</li>\n<li>\n<p>支持查看当前应用启动时间 （安卓支持较好）</p>\n</li>\n<li>\n<p>支持对比模式 （仅安卓）<br>\n多台设备同时连接，同时测试<br>\n支持</p>\n<ul>\n<li>CPU</li>\n<li>Memory</li>\n<li>NetWorkData</li>\n<li>FPS</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"报告管理\"><a class=\"markdownIt-Anchor\" href=\"#报告管理\">#</a> 报告管理</h3>\n<ul>\n<li>报告展示</li>\n<li>报告管理\n<ul>\n<li>编辑 （场景名）</li>\n<li>导出为 excel</li>\n<li>删除</li>\n</ul>\n</li>\n<li>报告详情\n<ul>\n<li>结果对比</li>\n<li>保存 html</li>\n<li>保存图片</li>\n<li>单个图片导出</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"功能剖析\"><a class=\"markdownIt-Anchor\" href=\"#功能剖析\">#</a> 功能剖析</h2>\n<h3 id=\"web功能\"><a class=\"markdownIt-Anchor\" href=\"#web功能\">#</a> web 功能</h3>\n<h4 id=\"flask服务\"><a class=\"markdownIt-Anchor\" href=\"#flask服务\">#</a> flask 服务</h4>\n<p>web 功能基于 flask flask-template flask-soketio 实现。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>app <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">,</span> template_folder<span class=\"token operator\">=</span><span class=\"token string\">'templates'</span><span class=\"token punctuation\">,</span> static_folder<span class=\"token operator\">=</span><span class=\"token string\">'static'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>socketio <span class=\"token operator\">=</span> SocketIO<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span> cors_allowed_origins<span class=\"token operator\">=</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">startServer</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    socketio<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span> host<span class=\"token operator\">=</span>host<span class=\"token punctuation\">,</span> debug<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> port<span class=\"token operator\">=</span>port<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"自动打开页面\"><a class=\"markdownIt-Anchor\" href=\"#自动打开页面\">#</a> 自动打开页面</h4>\n<p>服务启动时会自动打开浏览器，打开 solox 前端客户端</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">openUrl</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    flag <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">while</span> flag<span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">'Start solox server ...'</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        f <span class=\"token operator\">=</span> Figlet<span class=\"token punctuation\">(</span>font<span class=\"token operator\">=</span><span class=\"token string\">\"slant\"</span><span class=\"token punctuation\">,</span> width<span class=\"token operator\">=</span><span class=\"token number\">300</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>renderText<span class=\"token punctuation\">(</span><span class=\"token string\">\"SOLOX 2. 6. 7\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        flag <span class=\"token operator\">=</span> getServerStatus<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    webbrowser<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://&#123;&#125;:&#123;&#125;/?platform=Android&amp;lan=en'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> new<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">'Running on http://&#123;&#125;:&#123;&#125;/?platform=Android&amp;lan=en (Press CTRL+C to quit)'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>其中，使用了</p>\n<ul>\n<li>Figlet 打印艺术字</li>\n<li>webbrowser  是 python 内置的一个库，可以打开 url</li>\n</ul>\n<h4 id=\"端口检查\"><a class=\"markdownIt-Anchor\" href=\"#端口检查\">#</a> 端口检查</h4>\n<p>服务启动时，还调用了检查端口的函数</p>\n<ul>\n<li>对于非 windows 系统，直接干掉进程</li>\n</ul>\n<pre><code>os.system(&quot;lsof -i:%s| grep LISTEN| awk '&#123;print $2&#125;'|xargs kill -9&quot; % port)\n</code></pre>\n<ul>\n<li>对于 windows 系统\n<ul>\n<li>使用  <code>netstat</code>  命令结合  <code>findstr</code>  过滤器，在指定端口上查找监听的进程。</li>\n<li>读取命令输出的数据，并逐行处理。</li>\n<li>提取每行中的进程 PID，并将其添加到  <code>pid_list</code>  列表中。</li>\n<li>将  <code>pid_list</code>  转换为集合，再转换回列表，以去除重复的 PID。</li>\n<li>选取列表中的第一个 PID，并使用  <code>taskkill</code>  命令强制终止该进程。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"启动\"><a class=\"markdownIt-Anchor\" href=\"#启动\">#</a> 启动</h4>\n<ul>\n<li>检查 python 版本：必选 3.10 以上</li>\n<li>然后使用 Fire 启动</li>\n</ul>\n<blockquote>\n<p>fire 库可以自己的库封装成一个命令 通过 python -m 命令调用</p>\n</blockquote>\n<p>其他所有的功能都是由 http 请求触发，logcat 是一个 websocket<br>\n 前端使用 jquery 处理事件和操作 dom；</p>\n<h3 id=\"设备监听与信息抓取\"><a class=\"markdownIt-Anchor\" href=\"#设备监听与信息抓取\">#</a> 设备监听与信息抓取</h3>\n<ol>\n<li>前端每次打开页面（ <code>$(document).ready</code> ）后，会自动触发连接按钮的点击事件，从而调用 <code>initializeEnv</code>  方法；</li>\n<li><code>initializeEnv</code>  请求接口 /device/ids?platform = 当前选择设备类型</li>\n<li>后端接口：</li>\n</ol>\n<h4 id=\"安卓\"><a class=\"markdownIt-Anchor\" href=\"#安卓\">#</a> 安卓</h4>\n<ul>\n<li>获取到当前的设备 id 列表 （解析命令行 <code>adb devices</code>  的输出）\n<ul>\n<li>获取第一个设备的 pkg 列表 （adb -s deviceID shell pm list package）</li>\n<li>获取设备信息 (安卓基于 <code>adb</code> ,ios 基于 <code>tidevice</code> )</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getDdeviceDetail</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> deviceId<span class=\"token punctuation\">,</span> platform<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    result <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">match</span><span class=\"token punctuation\">(</span>platform<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">case</span> Platform<span class=\"token punctuation\">.</span>Android<span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'brand'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span><span class=\"token string\">'getprop ro.product.brand'</span><span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>deviceId<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span><span class=\"token string\">'getprop ro.product.model'</span><span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>deviceId<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'version'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span><span class=\"token string\">'getprop ro.build.version.release'</span><span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>deviceId<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'serialno'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span><span class=\"token string\">'getprop ro.serialno'</span><span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>deviceId<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            cmd <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'ip addr show wlan0 | </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>filterType<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> link/ether'</span></span>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'wifiadr'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span>cmd<span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>deviceId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">case</span> Platform<span class=\"token punctuation\">.</span>iOS<span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            iosInfo <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>execCmd<span class=\"token punctuation\">(</span><span class=\"token string\">'tidevice info --json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'brand'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> iosInfo<span class=\"token punctuation\">[</span><span class=\"token string\">'DeviceClass'</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> iosInfo<span class=\"token punctuation\">[</span><span class=\"token string\">'DeviceName'</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'version'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> iosInfo<span class=\"token punctuation\">[</span><span class=\"token string\">'ProductVersion'</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'serialno'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> iosInfo<span class=\"token punctuation\">[</span><span class=\"token string\">'SerialNumber'</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'wifiadr'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> iosInfo<span class=\"token punctuation\">[</span><span class=\"token string\">'WiFiAddress'</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token keyword\">_</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">'&#123;&#125; is undefined'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>platform<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>   </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">return</span> result</pre></td></tr></table></figure><h4 id=\"ios\"><a class=\"markdownIt-Anchor\" href=\"#ios\">#</a> ios</h4>\n<ul>\n<li>获取设备信息 （解析命令行 tidevice list --json）</li>\n<li>获取第一个设备 pkg 列表：  <code>tidevice --udid 设备uid  applist</code></li>\n<li>获取设备详情，同上</li>\n</ul>\n<h3 id=\"性能采集\"><a class=\"markdownIt-Anchor\" href=\"#性能采集\">#</a> 性能采集</h3>\n<p>点击开始按钮，触发启动测试。</p>\n<ul>\n<li>必须先选中设备和应用</li>\n<li>分别调用 collectCpu、collectMem、collectNetwork、collectFps、collectBattery  如果是 ios 系统，还要采集 GPU collectGpu</li>\n<li>这些方法再调用 collectPers 方法（参数包括一个获取采集数据的方法），然后使用<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaGlnaGNoYXJ0cy5jb20v\"> highcharts</span> 绘制图表；其中采集数据的方法作为 highcharts 实例的数据 load 方法，并且图表支持切换时间范围；  这个请求函数成功后会设置一个 settimeout 定时器，一秒钟后再次请求这个接口更新数据，并将数据塞入到图表数据的最新；</li>\n</ul>\n<p>性能采集需要比较复杂，打算分成系列的博客慢慢写一下。</p>\n",
            "tags": [
                "测试开发 性能 工具"
            ]
        }
    ]
}