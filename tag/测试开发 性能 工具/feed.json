{
    "version": "https://jsonfeed.org/version/1",
    "title": "何妨吟啸且徐行 • All posts by \"测试开发 性能 工具\" tag",
    "description": "",
    "home_page_url": "https://fanlu.top",
    "items": [
        {
            "id": "https://fanlu.top/2023/07/06/SoloX%E4%B9%8B%E5%86%85%E5%AD%98%E6%80%A7%E8%83%BD%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86/",
            "url": "https://fanlu.top/2023/07/06/SoloX%E4%B9%8B%E5%86%85%E5%AD%98%E6%80%A7%E8%83%BD%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86/",
            "title": "SoloX之内存性能数据采集",
            "date_published": "2023-07-06T12:57:47.000Z",
            "content_html": "<h2 id=\"安卓\"><a class=\"markdownIt-Anchor\" href=\"#安卓\">#</a> 安卓</h2>\n<h3 id=\"获取内存信息\"><a class=\"markdownIt-Anchor\" href=\"#获取内存信息\">#</a> 获取内存信息</h3>\n<p>给定进程的 PID，返回总内存、本地堆内存、dalvik 堆内存  并转换为 MB 单位</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getAndroidMem</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"Get the Android memory ,unit:MB\"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    cmd <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'dumpsys meminfo </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>pid<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    output <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span>cmd<span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>deviceId<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    m_total <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">r'TOTAL\\s*(\\d+)'</span><span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    m_native <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">r'Native Heap\\s*(\\d+)'</span><span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    m_dalvik <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">r'Dalvik Heap\\s*(\\d+)'</span><span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    totalPass <span class=\"token operator\">=</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>m_total<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    nativePass <span class=\"token operator\">=</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>m_native<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    dalvikPass <span class=\"token operator\">=</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>m_dalvik<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> totalPass<span class=\"token punctuation\">,</span> nativePass<span class=\"token punctuation\">,</span> dalvikPass</pre></td></tr></table></figure><h2 id=\"ios\"><a class=\"markdownIt-Anchor\" href=\"#ios\">#</a> IOS</h2>\n<p>同样通过 instruments 协议获取；不过只能获取到总内存</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getiOSMem</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"Get the iOS memory\"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    apm <span class=\"token operator\">=</span> iosAPM<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>pkgName<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    totalPass <span class=\"token operator\">=</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>apm<span class=\"token punctuation\">.</span>getPerformance<span class=\"token punctuation\">(</span>apm<span class=\"token punctuation\">.</span>memory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    nativePass <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    dalvikPass <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> totalPass<span class=\"token punctuation\">,</span> nativePass<span class=\"token punctuation\">,</span> dalvikPass</pre></td></tr></table></figure>",
            "tags": [
                "测试开发 性能 工具"
            ]
        },
        {
            "id": "https://fanlu.top/2023/07/06/SoloX%E4%B9%8BCPU%E6%80%A7%E8%83%BD%E9%87%87%E9%9B%86/",
            "url": "https://fanlu.top/2023/07/06/SoloX%E4%B9%8BCPU%E6%80%A7%E8%83%BD%E9%87%87%E9%9B%86/",
            "title": "SoloX之CPU性能采集",
            "date_published": "2023-07-06T12:57:07.000Z",
            "content_html": "<h2 id=\"安卓\"><a class=\"markdownIt-Anchor\" href=\"#安卓\">#</a> 安卓</h2>\n<h3 id=\"获取进程cpu使用时间\"><a class=\"markdownIt-Anchor\" href=\"#获取进程cpu使用时间\">#</a> 获取进程 cpu 使用时间</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getprocessCpuStat</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"get the cpu usage of a process at a certain time\"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    cmd <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'cat /proc/</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>pid<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/stat'</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    result <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span>cmd<span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>deviceId<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    r <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\\s+\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    toks <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    processCpu <span class=\"token operator\">=</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>toks<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>toks<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>toks<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>toks<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> processCpu</pre></td></tr></table></figure><h3 id=\"获取总cpu使用时间\"><a class=\"markdownIt-Anchor\" href=\"#获取总cpu使用时间\">#</a> 获取总 cpu 使用时间</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getTotalCpuStat</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"get the total cpu usage at a certain time\"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    cmd <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'cat /proc/stat |</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>d<span class=\"token punctuation\">.</span>filterType<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> ^cpu'</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    result <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span>cmd<span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>deviceId<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    r <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'(?&lt;!cpu)\\d+'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    toks <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    totalCpu <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        totalCpu <span class=\"token operator\">+=</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>toks<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>totalCpu<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"获取cpu核数\"><a class=\"markdownIt-Anchor\" href=\"#获取cpu核数\">#</a> 获取 CPU 核数</h3>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getCpuCores</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"get Android cpu cores\"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    cmd <span class=\"token operator\">=</span> <span class=\"token string\">'cat /sys/devices/system/cpu/online'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    result <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span>cmd<span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>deviceId<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        nums <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        nums <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">return</span> nums</pre></td></tr></table></figure><h3 id=\"获取系统cpu使用时间\"><a class=\"markdownIt-Anchor\" href=\"#获取系统cpu使用时间\">#</a> 获取系统 CPU 使用时间</h3>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getSysCpuStat</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"get the total cpu usage at a certain time\"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    cmd <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'cat /proc/stat |</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>d<span class=\"token punctuation\">.</span>filterType<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> ^cpu'</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    result <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span>cmd<span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>deviceId<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    r <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'(?&lt;!cpu)\\d+'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    toks <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    ileCpu <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>toks<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    sysCpu <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getTotalCpuStat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> ileCpu</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">return</span> sysCpu</pre></td></tr></table></figure><h3 id=\"采集结果\"><a class=\"markdownIt-Anchor\" href=\"#采集结果\">#</a> 采集结果</h3>\n<blockquote>\n<p>间隔 0.5s 连续获取两次采集结果，然后计算得到 cpu 使用率  <span class=\"exturl\" data-url=\"aHR0cHM6Ly95ZXN0ZXJtb3Jyb3cuZ2l0aHViLmlvLzIwMjEvMDMvMTcvQ1BVJUU0JUJEJUJGJUU3JTk0JUE4JUU3JThFJTg3Lw==\">https://yestermorrow.github.io/2021/03/17/CPU 使用率 /</span></p>\n</blockquote>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getAndroidCpuRate</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> noLog<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"get the Android cpu rate of a process\"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    processCpuTime_1 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getprocessCpuStat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    totalCpuTime_1 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getTotalCpuStat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    sysCpuTime_1 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getSysCpuStat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    processCpuTime_2 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getprocessCpuStat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    totalCpuTime_2 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getTotalCpuStat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    sysCpuTime_2 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>getSysCpuStat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    appCpuRate <span class=\"token operator\">=</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>processCpuTime_2 <span class=\"token operator\">-</span> processCpuTime_1<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>totalCpuTime_2 <span class=\"token operator\">-</span> totalCpuTime_1<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    sysCpuRate <span class=\"token operator\">=</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>sysCpuTime_2 <span class=\"token operator\">-</span> sysCpuTime_1<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>totalCpuTime_2 <span class=\"token operator\">-</span> totalCpuTime_1<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">if</span> noLog <span class=\"token keyword\">is</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        apm_time <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">'%H:%M:%S.%f'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        f<span class=\"token punctuation\">.</span>add_log<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">,</span><span class=\"token string\">'cpu_app.log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> apm_time<span class=\"token punctuation\">,</span> appCpuRate<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        f<span class=\"token punctuation\">.</span>add_log<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">,</span><span class=\"token string\">'cpu_sys.log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> apm_time<span class=\"token punctuation\">,</span> sysCpuRate<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">return</span> appCpuRate<span class=\"token punctuation\">,</span> sysCpuRate</pre></td></tr></table></figure><h2 id=\"ios\"><a class=\"markdownIt-Anchor\" href=\"#ios\">#</a> IOS</h2>\n<blockquote>\n<p>ios 基于 pydevice 和 instrument 协议解析</p>\n</blockquote>\n<p>采集数据来自于 tidevice_instruments.py  iter_cpu_memory 方法</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">iter_cpu_memory</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> Iterator<span class=\"token punctuation\">[</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    Close connection after iterator stop</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    Iterator content eg:</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        [&#123;'CPUCount': 2,</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        'EnabledCPUs': 2,</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        'EndMachAbsTime': 2158497307470,</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        'PerCPUUsage': [&#123;'CPU_NiceLoad': 0.0,</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                        'CPU_SystemLoad': -1.0,</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                        'CPU_TotalLoad': 13.0,</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                        'CPU_UserLoad': -1.0&#125;,</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                        &#123;'CPU_NiceLoad': 0.0,</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                        'CPU_SystemLoad': -1.0,</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                        'CPU_TotalLoad': 31.0,</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                        'CPU_UserLoad': -1.0&#125;],</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        'StartMachAbsTime': 2158473307786,</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        'SystemCPUUsage': &#123;'CPU_NiceLoad': 0.0,</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                            'CPU_SystemLoad': -1.0,</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                            'CPU_TotalLoad': 44.0,</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                            'CPU_UserLoad': -1.0&#125;,</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        'Type': 33&#125;,</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        &#123;'EndMachAbsTime': 2158515468993,</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        \"cpuUsage\", \"ctxSwitch\", \"intWakeups\", \"physFootprint\",</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            \"memResidentSize\", \"memAnon\", \"pid\"</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        'Processes': &#123;0: [0.20891292720792148, # cpuUsage</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                            335770139, # contextSwitch</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                            120505483, # interruptWakeups</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                            7913472,   # physical Footprint</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                            869646336, # memory RSS</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                            232210432, # memory Anon?</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                            0],        # pid</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                        1: [0.0005502246751775457,</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                            691065,</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                            6038,</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                            12353840,</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                            4177920,</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                            12255232,</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                            1]</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                        &#125;</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        &#125;]</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    config <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token string\">\"bm\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token string\">\"cpuUsage\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token string\">\"procAttrs\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            <span class=\"token string\">\"memVirtualSize\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cpuUsage\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ctxSwitch\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"intWakeups\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token string\">\"physFootprint\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"memResidentSize\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"memAnon\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"pid\"</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token string\">\"sampleInterval\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1000000000</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 1e9 ns == 1s</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token string\">\"sysAttrs\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token string\">\"vmExtPageCount\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"vmFreeCount\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"vmPurgeableCount\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            <span class=\"token string\">\"vmSpeculativeCount\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"physMemSize\"</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token string\">\"ur\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1000</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    channel_id <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>make_channel<span class=\"token punctuation\">(</span>InstrumentsService<span class=\"token punctuation\">.</span>Sysmontap<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    self<span class=\"token punctuation\">.</span>call_message<span class=\"token punctuation\">(</span>channel_id<span class=\"token punctuation\">,</span> <span class=\"token string\">\"setConfig:\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>config<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    self<span class=\"token punctuation\">.</span>call_message<span class=\"token punctuation\">(</span>channel_id<span class=\"token punctuation\">,</span> <span class=\"token string\">\"start\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token comment\"># channel = self.make_channel(</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token comment\">#     \"com.apple.instruments.server.services.processcontrol\")</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token comment\"># aux = AUXMessageBuffer()</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token comment\"># aux.append_obj(1)  # TODO: pid</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token comment\"># payload = DTXPayload.build(\"startObservingPid:\", aux)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token comment\"># self.send_dtx_message(channel, payload)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    notification_channel_id <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> channel_id</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token keyword\">for</span> m <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>iter_message<span class=\"token punctuation\">(</span>Event<span class=\"token punctuation\">.</span>NOTIFICATION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            <span class=\"token keyword\">if</span> m<span class=\"token punctuation\">.</span>flags <span class=\"token operator\">==</span> <span class=\"token number\">0x01</span> <span class=\"token keyword\">and</span> m<span class=\"token punctuation\">.</span>channel_id <span class=\"token operator\">==</span> notification_channel_id<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>                <span class=\"token keyword\">yield</span> m<span class=\"token punctuation\">.</span>result</pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token keyword\">except</span> GeneratorExit<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        self<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 停止 connection，防止消息不停的发过来，暂时不会别的方法</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token comment\"># print(\"Stop channel\")</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        <span class=\"token comment\">## The following code is not working</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token comment\"># self.call_message(channel_id, \"stopSampling\")</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        <span class=\"token comment\"># aux = AUXMessageBuffer()</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        <span class=\"token comment\"># aux.append_obj(channel_id)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        <span class=\"token comment\"># self.send_dtx_message(channel_id, DTXPayload.build('_channelCanceled:', aux))</span></pre></td></tr></table></figure><ul>\n<li>该方法与 instrument 建立通信 发送协议请求，获取数据<br>\n其数据结果包含了</li>\n<li>cpu 数量</li>\n<li>启动的 cpu</li>\n<li>单个 cpu 使用率</li>\n<li>…</li>\n</ul>\n",
            "tags": [
                "测试开发 性能 工具"
            ]
        },
        {
            "id": "https://fanlu.top/2023/07/01/solox%E4%B9%8Bfps%E6%80%A7%E8%83%BD%E9%87%87%E9%9B%86/",
            "url": "https://fanlu.top/2023/07/01/solox%E4%B9%8Bfps%E6%80%A7%E8%83%BD%E9%87%87%E9%9B%86/",
            "title": "solox之fps性能采集",
            "date_published": "2023-07-01T14:14:39.000Z",
            "content_html": "<h2 id=\"安卓\"><a class=\"markdownIt-Anchor\" href=\"#安卓\">#</a> 安卓</h2>\n<p>通过 fpsMonitor 类获取到 fps 计算器；</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getAndroidFps</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> noLog<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"get Android Fps, unit:HZ\"\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    monitors <span class=\"token operator\">=</span> FPSMonitor<span class=\"token punctuation\">(</span>device_id<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>deviceId<span class=\"token punctuation\">,</span> package_name<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>pkgName<span class=\"token punctuation\">,</span> frequency<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                          surfaceview<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>surfaceview<span class=\"token punctuation\">,</span> start_time<span class=\"token operator\">=</span>TimeUtils<span class=\"token punctuation\">.</span>getCurrentTimeUnderline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    monitors<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    fps<span class=\"token punctuation\">,</span> jank <span class=\"token operator\">=</span> monitors<span class=\"token punctuation\">.</span>stop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span> noLog <span class=\"token keyword\">is</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        apm_time <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">'%H:%M:%S.%f'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        f<span class=\"token punctuation\">.</span>add_log<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">,</span><span class=\"token string\">'fps.log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> apm_time<span class=\"token punctuation\">,</span> fps<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        f<span class=\"token punctuation\">.</span>add_log<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>report_dir<span class=\"token punctuation\">,</span><span class=\"token string\">'jank.log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> apm_time<span class=\"token punctuation\">,</span> jank<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> fps<span class=\"token punctuation\">,</span> jank</pre></td></tr></table></figure><p>在 FPSMonitor 中使用 SurfaceStatsCollector 来采集 FPS 数据</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">FPSMonitor</span><span class=\"token punctuation\">(</span>Monitor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> device_id<span class=\"token punctuation\">,</span> package_name<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> frequency<span class=\"token operator\">=</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> timeout<span class=\"token operator\">=</span><span class=\"token number\">24</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> fps_queue<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                 jank_threshold<span class=\"token operator\">=</span><span class=\"token number\">166</span><span class=\"token punctuation\">,</span> use_legacy<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> surfaceview<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> start_time<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        self<span class=\"token punctuation\">.</span>start_time <span class=\"token operator\">=</span> start_time</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        self<span class=\"token punctuation\">.</span>use_legacy <span class=\"token operator\">=</span> use_legacy</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        self<span class=\"token punctuation\">.</span>frequency <span class=\"token operator\">=</span> frequency  <span class=\"token comment\"># 取样频率</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        self<span class=\"token punctuation\">.</span>jank_threshold <span class=\"token operator\">=</span> jank_threshold</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        self<span class=\"token punctuation\">.</span>device <span class=\"token operator\">=</span> device_id</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        self<span class=\"token punctuation\">.</span>timeout <span class=\"token operator\">=</span> timeout</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        self<span class=\"token punctuation\">.</span>surfaceview <span class=\"token operator\">=</span> surfaceview</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> package_name<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            package_name <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">.</span>adb<span class=\"token punctuation\">.</span>get_foreground_process<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        self<span class=\"token punctuation\">.</span>package <span class=\"token operator\">=</span> package_name</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        self<span class=\"token punctuation\">.</span>fpscollector <span class=\"token operator\">=</span> SurfaceStatsCollector<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>frequency<span class=\"token punctuation\">,</span> package_name<span class=\"token punctuation\">,</span> fps_queue<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                                                  self<span class=\"token punctuation\">.</span>jank_threshold<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>surfaceview<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>use_legacy<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>SurfaceStatsCollector 涵盖的功能有：</p>\n<h4 id=\"获取surface的activity名字\"><a class=\"markdownIt-Anchor\" href=\"#获取surface的activity名字\">#</a> 获取 surface 的 activity 名字</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_surfaceview_activity</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    activity_name <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    activity_line <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        dumpsys_result <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span><span class=\"token string\">'dumpsys SurfaceFlinger --list | &#123;&#125; &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span>filterType<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>package_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        dumpsys_result_list <span class=\"token operator\">=</span> dumpsys_result<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>    </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> dumpsys_result_list<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">if</span> line<span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span><span class=\"token string\">'SurfaceView'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> line<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>package_name<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                activity_line <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">if</span> activity_line<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">if</span> activity_line<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>      </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                activity_name <span class=\"token operator\">=</span> activity_line<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                activity_name <span class=\"token operator\">=</span> activity_line<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'SurfaceView'</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'['</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">']'</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>    </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            activity_name <span class=\"token operator\">=</span> dumpsys_result_list<span class=\"token punctuation\">[</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>dumpsys_result_list<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> activity_name<span class=\"token punctuation\">.</span>__contains__<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>package_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                logger<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span><span class=\"token string\">'get activity name failed, Please provide SurfaceFlinger --list information to the author'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">'dumpsys SurfaceFlinger --list info: &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>dumpsys_result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">except</span> Exception<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        traceback<span class=\"token punctuation\">.</span>print_exc<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        logger<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span><span class=\"token string\">'get activity name failed, Please provide SurfaceFlinger --list information to the author'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">'dumpsys SurfaceFlinger --list info: &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>dumpsys_result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">return</span> activity_name</pre></td></tr></table></figure><h4 id=\"获取聚焦的activity名字\"><a class=\"markdownIt-Anchor\" href=\"#获取聚焦的activity名字\">#</a> 获取聚焦的 activity 名字</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_focus_activity</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    activity_name <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    activity_line <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    dumpsys_result <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span><span class=\"token string\">'dumpsys window windows'</span><span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    dumpsys_result_list <span class=\"token operator\">=</span> dumpsys_result<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> dumpsys_result_list<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">if</span> line<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'mCurrentFocus'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            activity_line <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span> activity_line<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        activity_line_split <span class=\"token operator\">=</span> activity_line<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> activity_name</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>activity_line_split<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">if</span> activity_line_split<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'u0'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            activity_name <span class=\"token operator\">=</span> activity_line_split<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>rstrip<span class=\"token punctuation\">(</span><span class=\"token string\">'&#125;'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            activity_name <span class=\"token operator\">=</span> activity_line_split<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> activity_name<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        activity_name <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>get_surfaceview_activity<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>        </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">return</span> activity_name</pre></td></tr></table></figure><h4 id=\"获取前台进程名字\"><a class=\"markdownIt-Anchor\" href=\"#获取前台进程名字\">#</a> 获取前台进程名字</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_foreground_process</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    focus_activity <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>get_focus_activity<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> focus_activity<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">return</span> focus_activity<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span></pre></td></tr></table></figure><h4 id=\"获取sdk版本\"><a class=\"markdownIt-Anchor\" href=\"#获取sdk版本\">#</a> 获取 sdk 版本</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_sdk_version</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    sdk_version <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span><span class=\"token string\">'getprop ro.build.version.sdk'</span><span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">return</span> sdk_version</pre></td></tr></table></figure><h4 id=\"版本兼容\"><a class=\"markdownIt-Anchor\" href=\"#版本兼容\">#</a> 版本兼容</h4>\n<p>为了兼容不同版本的安卓系统，做了两套方法，在启动时进行区分：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> start_time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> self<span class=\"token punctuation\">.</span>use_legacy_method<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            self<span class=\"token punctuation\">.</span>focus_window <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>get_focus_activity<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>focus_window<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'$'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                self<span class=\"token punctuation\">.</span>focus_window <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>focus_window<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'$'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'\\$'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">except</span> Exception<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            logger<span class=\"token punctuation\">.</span>warning<span class=\"token punctuation\">(</span><span class=\"token string\">u'Unable to dynamically obtain the current activity name, using page_ Flip statistics full screen frame rate'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            self<span class=\"token punctuation\">.</span>use_legacy_method <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            self<span class=\"token punctuation\">.</span>surface_before <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_get_surface_stats_legacy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        logger<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">(</span><span class=\"token string\">\"dumpsys SurfaceFlinger --latency-clear is none\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        self<span class=\"token punctuation\">.</span>use_legacy_method <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        self<span class=\"token punctuation\">.</span>surface_before <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_get_surface_stats_legacy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    self<span class=\"token punctuation\">.</span>collector_thread <span class=\"token operator\">=</span> threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>_collector_thread<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    self<span class=\"token punctuation\">.</span>collector_thread<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    self<span class=\"token punctuation\">.</span>calculator_thread <span class=\"token operator\">=</span> threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>_calculator_thread<span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>start_time<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    self<span class=\"token punctuation\">.</span>calculator_thread<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>这里分别启动了采集线程和计算线程。</p>\n<h4 id=\"旧版本方法\"><a class=\"markdownIt-Anchor\" href=\"#旧版本方法\">#</a> 旧版本方法</h4>\n<blockquote>\n<p>获取当前的 surface 索引和时间戳</p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">_get_surface_stats_legacy</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"Legacy method (before JellyBean), returns the current Surface index</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>         and timestamp.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    Calculate FPS by measuring the difference of Surface index returned by</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    SurfaceFlinger in a period of time.</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    Returns:</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        Dict of &#123;page_flip_count (or 0 if there was an error), timestamp&#125;.</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    cur_surface <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    timestamp <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    ret <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span><span class=\"token string\">\"service call SurfaceFlinger 1013\"</span><span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> ret<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">match</span> <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'^Result: Parcel\\((\\w+)'</span><span class=\"token punctuation\">,</span> ret<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">match</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        cur_surface <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">match</span><span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'page_flip_count'</span><span class=\"token punctuation\">:</span> cur_surface<span class=\"token punctuation\">,</span> <span class=\"token string\">'timestamp'</span><span class=\"token punctuation\">:</span> timestamp<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span></pre></td></tr></table></figure><h4 id=\"新版本方法\"><a class=\"markdownIt-Anchor\" href=\"#新版本方法\">#</a> 新版本方法</h4>\n<h5 id=\"首先获取到帧数据列表\"><a class=\"markdownIt-Anchor\" href=\"#首先获取到帧数据列表\">#</a> 首先获取到帧数据列表</h5>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">_get_surfaceflinger_frame_data</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"Returns collected SurfaceFlinger frame timing data.</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    return:(16.6,[[t1,t2,t3],[t4,t5,t6]])</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    Returns:</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        A tuple containing:</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        - The display's nominal refresh period in seconds.</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        - A list of timestamps signifying frame presentation times in seconds.</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        The return value may be (None, None) if there was no data collected (for</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        example, if the app was closed before the collector thread has finished).</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\"># shell dumpsys SurfaceFlinger --latency &lt;window name></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\"># prints some information about the last 128 frames displayed in</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\"># that window.</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\"># The data returned looks like this:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\"># 16954612</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\"># 7657467895508     7657482691352     7657493499756</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\"># 7657484466553     7657499645964     7657511077881</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\"># 7657500793457     7657516600576     7657527404785</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\"># (...)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\"># The first line is the refresh period (here 16.95 ms), it is followed</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token comment\"># by 128 lines w/ 3 timestamps in nanosecond each:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\"># A) when the app started to draw</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token comment\"># B) the vsync immediately preceding SF submitting the frame to the h/w</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\"># C) timestamp immediately after SF submitted that frame to the h/w</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token comment\"># The difference between the 1st and 3rd timestamp is the frame-latency.</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token comment\"># An interesting data is when the frame latency crosses a refresh period</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token comment\"># boundary, this can be calculated this way:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token comment\"># ceil((C - A) / refresh-period)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token comment\"># (each time the number above changes, we have a \"jank\").</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\"># If this happens a lot during an animation, the animation appears</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token comment\"># janky, even if it runs at 60 fps in average.</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token comment\"># Google Pixel 2 android8.0 dumpsys SurfaceFlinger --latency 结果</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token comment\"># 16666666</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token comment\"># 0       0       0</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token comment\"># 0       0       0</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token comment\"># 0       0       0</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token comment\"># 0       0       0</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token comment\"># 但华为 荣耀 9 android8.0 dumpsys SurfaceFlinger --latency 结果是正常的 但数据更新很慢  也不能用来计算 fps</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token comment\"># 16666666</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token comment\"># 9223372036854775807     3618832932780   9223372036854775807</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token comment\"># 9223372036854775807     3618849592155   9223372036854775807</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token comment\"># 9223372036854775807     3618866251530   9223372036854775807</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    refresh_period <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    timestamps <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    nanoseconds_per_second <span class=\"token operator\">=</span> <span class=\"token number\">1e9</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    pending_fence_timestamp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">63</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>surfaceview <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        results <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            cmd<span class=\"token operator\">=</span><span class=\"token string\">'dumpsys SurfaceFlinger --latency %s'</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>focus_window<span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        results <span class=\"token operator\">=</span> results<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\r\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>splitlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        refresh_period <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> nanoseconds_per_second</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        results <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span><span class=\"token string\">'dumpsys gfxinfo %s framestats'</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>package_name<span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        results <span class=\"token operator\">=</span> results<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\r\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>splitlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        isHaveFoundWindow <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        PROFILEDATA_line <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        activity <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>focus_window</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>focus_window<span class=\"token punctuation\">.</span>__contains__<span class=\"token punctuation\">(</span><span class=\"token string\">'#'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            activity <span class=\"token operator\">=</span> activity<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'#'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> results<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> isHaveFoundWindow<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token string\">\"Window\"</span> <span class=\"token keyword\">in</span> line <span class=\"token keyword\">and</span> activity <span class=\"token keyword\">in</span> line<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>                    isHaveFoundWindow <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> isHaveFoundWindow<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>                <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token string\">\"PROFILEDATA\"</span> <span class=\"token keyword\">in</span> line<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>                PROFILEDATA_line <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>            fields <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>            fields <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>            <span class=\"token keyword\">if</span> fields <span class=\"token keyword\">and</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">==</span> fields<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>                timestamp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>fields<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>fields<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>fields<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>                <span class=\"token keyword\">if</span> timestamp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> pending_fence_timestamp<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>                    <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>                timestamp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>_timestamp <span class=\"token operator\">/</span> nanoseconds_per_second <span class=\"token keyword\">for</span> _timestamp <span class=\"token keyword\">in</span> timestamp<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>                timestamps<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>timestamp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> PROFILEDATA_line<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>                <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        self<span class=\"token punctuation\">.</span>focus_window <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>get_surfaceview_activity<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        results <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>            cmd<span class=\"token operator\">=</span><span class=\"token string\">'dumpsys SurfaceFlinger --latency %s'</span> <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>focus_window<span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        results <span class=\"token operator\">=</span> results<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\r\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>splitlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> results<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>isdigit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>            refresh_period <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> nanoseconds_per_second</pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>            logger<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>        <span class=\"token comment\"># If a fence associated with a frame is still pending when we query the</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>        <span class=\"token comment\"># latency data, SurfaceFlinger gives the frame a timestamp of INT64_MAX.</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>        <span class=\"token comment\"># Since we only care about completed frames, we will ignore any timestamps</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        <span class=\"token comment\"># with this value.</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>        <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> results<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>            fields <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>fields<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>                <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>            timestamp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>fields<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>fields<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>fields<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>            <span class=\"token keyword\">if</span> timestamp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> pending_fence_timestamp<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>                <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>            timestamp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>_timestamp <span class=\"token operator\">/</span> nanoseconds_per_second <span class=\"token keyword\">for</span> _timestamp <span class=\"token keyword\">in</span> timestamp<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>            timestamps<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>timestamp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>refresh_period<span class=\"token punctuation\">,</span> timestamps<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>然后将数据插入到队列中</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>refresh_period<span class=\"token punctuation\">,</span> new_timestamps <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_get_surfaceflinger_frame_data<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> refresh_period <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span> <span class=\"token keyword\">or</span> new_timestamps <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    self<span class=\"token punctuation\">.</span>focus_window <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>get_focus_activity<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    logger<span class=\"token punctuation\">.</span>warning<span class=\"token punctuation\">(</span><span class=\"token string\">\"refresh_period is None or timestamps is None\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>timestamps <span class=\"token operator\">+=</span> <span class=\"token punctuation\">[</span>timestamp <span class=\"token keyword\">for</span> timestamp <span class=\"token keyword\">in</span> new_timestamps</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>               <span class=\"token keyword\">if</span> timestamp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> self<span class=\"token punctuation\">.</span>last_timestamp<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>timestamps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    first_timestamp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>last_timestamp<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> is_first<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        timestamps <span class=\"token operator\">=</span> first_timestamp <span class=\"token operator\">+</span> timestamps</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    self<span class=\"token punctuation\">.</span>last_timestamp <span class=\"token operator\">=</span> timestamps<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    is_first <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    is_first <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    cur_focus_window <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>get_focus_activity<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>focus_window <span class=\"token operator\">!=</span> cur_focus_window<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        self<span class=\"token punctuation\">.</span>focus_window <span class=\"token operator\">=</span> cur_focus_window</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>self<span class=\"token punctuation\">.</span>data_queue<span class=\"token punctuation\">.</span>put<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>refresh_period<span class=\"token punctuation\">,</span> timestamps<span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>time_consume <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> before</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>delta_inter <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>frequency <span class=\"token operator\">-</span> time_consume</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">if</span> delta_inter <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span>delta_inter<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"计算线程计算fps和jank\"><a class=\"markdownIt-Anchor\" href=\"#计算线程计算fps和jank\">#</a> 计算线程计算 fps 和 jank</h4>\n<h5 id=\"旧版本方法-2\"><a class=\"markdownIt-Anchor\" href=\"#旧版本方法-2\">#</a> 旧版本方法</h5>\n<p>不知道为什么 fps 设置最高就是 60</p>\n<p>通过一段时间内的帧总数除以时间差获取到 fps</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>td <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token string\">'timestamp'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> self<span class=\"token punctuation\">.</span>surface_before<span class=\"token punctuation\">[</span><span class=\"token string\">'timestamp'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>seconds <span class=\"token operator\">=</span> td<span class=\"token punctuation\">.</span>seconds <span class=\"token operator\">+</span> td<span class=\"token punctuation\">.</span>microseconds <span class=\"token operator\">/</span> <span class=\"token number\">1e6</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>frame_count <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'page_flip_count'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>               self<span class=\"token punctuation\">.</span>surface_before<span class=\"token punctuation\">[</span><span class=\"token string\">'page_flip_count'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>fps <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span>frame_count <span class=\"token operator\">/</span> seconds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">if</span> fps <span class=\"token operator\">></span> <span class=\"token number\">60</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    fps <span class=\"token operator\">=</span> <span class=\"token number\">60</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>self<span class=\"token punctuation\">.</span>surface_before <span class=\"token operator\">=</span> data</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># logger.debug('FPS:%2s'%fps)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>collect_fps <span class=\"token operator\">=</span> fps</pre></td></tr></table></figure><h4 id=\"新版本方法-2\"><a class=\"markdownIt-Anchor\" href=\"#新版本方法-2\">#</a> 新版本方法</h4>\n<ol>\n<li>首先拿到帧数</li>\n<li>对异常数据的处理</li>\n<li>2、3、4 帧数为啥这样处理？</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">_calculate_results_new</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> refresh_period<span class=\"token punctuation\">,</span> timestamps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    frame_count <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>timestamps<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> frame_count <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        fps <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        jank <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">elif</span> frame_count <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        fps <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        jank <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">elif</span> frame_count <span class=\"token operator\">==</span> <span class=\"token number\">2</span> <span class=\"token keyword\">or</span> frame_count <span class=\"token operator\">==</span> <span class=\"token number\">3</span> <span class=\"token keyword\">or</span> frame_count <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        seconds <span class=\"token operator\">=</span> timestamps<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> timestamps<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">if</span> seconds <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            fps <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>frame_count <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> seconds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            jank <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_calculate_janky<span class=\"token punctuation\">(</span>timestamps<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            fps <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            jank <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        seconds <span class=\"token operator\">=</span> timestamps<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> timestamps<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">if</span> seconds <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            fps <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>frame_count <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> seconds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            jank <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_calculate_jankey_new<span class=\"token punctuation\">(</span>timestamps<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            fps <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            jank <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">return</span> fps<span class=\"token punctuation\">,</span> jank</pre></td></tr></table></figure><h5 id=\"计算jank\"><a class=\"markdownIt-Anchor\" href=\"#计算jank\">#</a> 计算 jank</h5>\n<h6 id=\"旧版本\"><a class=\"markdownIt-Anchor\" href=\"#旧版本\">#</a> 旧版本</h6>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">_calculate_janky</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> timestamps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    tempstamp <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    jank <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span> timestamp <span class=\"token keyword\">in</span> timestamps<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span> tempstamp <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            tempstamp <span class=\"token operator\">=</span> timestamp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        costtime <span class=\"token operator\">=</span> timestamp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> tempstamp</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">if</span> costtime <span class=\"token operator\">></span> self<span class=\"token punctuation\">.</span>jank_threshold<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            jank <span class=\"token operator\">=</span> jank <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        tempstamp <span class=\"token operator\">=</span> timestamp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">return</span> jank</pre></td></tr></table></figure><h5 id=\"新版本\"><a class=\"markdownIt-Anchor\" href=\"#新版本\">#</a> 新版本</h5>\n<p>通过预设的 jank_threshold 阈值判断是否有 jank（默认 166ms 的渲染时间）</p>\n<p>通过过去 4 帧的时间，也即过去三帧的平均渲染时间 *2，如果当前帧渲染时间超过这个值，并且当前帧渲染时间大于上一帧渲染时间，判断为一次 jank</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">_calculate_jankey_new</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> timestamps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    twofilmstamp <span class=\"token operator\">=</span> <span class=\"token number\">83.3</span> <span class=\"token operator\">/</span> <span class=\"token number\">1000.0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    tempstamp <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    jank <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">for</span> index<span class=\"token punctuation\">,</span> timestamp <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>timestamps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">if</span> tempstamp <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                tempstamp <span class=\"token operator\">=</span> timestamp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            costtime <span class=\"token operator\">=</span> timestamp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> tempstamp</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">if</span> costtime <span class=\"token operator\">></span> self<span class=\"token punctuation\">.</span>jank_threshold<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                jank <span class=\"token operator\">=</span> jank <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            tempstamp <span class=\"token operator\">=</span> timestamp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">elif</span> index <span class=\"token operator\">></span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            currentstamp <span class=\"token operator\">=</span> timestamps<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            lastonestamp <span class=\"token operator\">=</span> timestamps<span class=\"token punctuation\">[</span>index <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            lasttwostamp <span class=\"token operator\">=</span> timestamps<span class=\"token punctuation\">[</span>index <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            lastthreestamp <span class=\"token operator\">=</span> timestamps<span class=\"token punctuation\">[</span>index <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            lastfourstamp <span class=\"token operator\">=</span> timestamps<span class=\"token punctuation\">[</span>index <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            tempframetime <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>lastthreestamp <span class=\"token operator\">-</span> lastfourstamp<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>lasttwostamp <span class=\"token operator\">-</span> lastthreestamp<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                    lastonestamp <span class=\"token operator\">-</span> lasttwostamp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            currentframetime <span class=\"token operator\">=</span> currentstamp <span class=\"token operator\">-</span> lastonestamp</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentframetime <span class=\"token operator\">></span> tempframetime<span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span>currentframetime <span class=\"token operator\">></span> twofilmstamp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                jank <span class=\"token operator\">=</span> jank <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">return</span> jank</pre></td></tr></table></figure><h2 id=\"ios\"><a class=\"markdownIt-Anchor\" href=\"#ios\">#</a> IOS</h2>\n<p>同样使用 instrument 协议</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">iter_fps</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">:</span> BaseDevice<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> Iterator<span class=\"token punctuation\">[</span>Any<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">with</span> d<span class=\"token punctuation\">.</span>connect_instruments<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> ts<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">for</span> data <span class=\"token keyword\">in</span> ts<span class=\"token punctuation\">.</span>iter_opengl_data<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            fps <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token string\">'CoreAnimationFramesPerSecond'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># fps from GPU</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token comment\"># print(\"FPS:\", fps)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">yield</span> DataType<span class=\"token punctuation\">.</span>FPS<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"fps\"</span><span class=\"token punctuation\">:</span> fps<span class=\"token punctuation\">,</span> <span class=\"token string\">\"time\"</span><span class=\"token punctuation\">:</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"value\"</span><span class=\"token punctuation\">:</span> fps<span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "测试开发 性能 工具"
            ]
        },
        {
            "id": "https://fanlu.top/2023/06/25/SoloX%E7%A7%BB%E5%8A%A8%E8%AE%BE%E5%A4%87%E6%80%A7%E8%83%BD%E9%87%87%E9%9B%86%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/",
            "url": "https://fanlu.top/2023/06/25/SoloX%E7%A7%BB%E5%8A%A8%E8%AE%BE%E5%A4%87%E6%80%A7%E8%83%BD%E9%87%87%E9%9B%86%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/",
            "title": "SoloX移动设备性能采集工具使用体验",
            "date_published": "2023-06-25T13:46:33.000Z",
            "content_html": "<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NtYXJ0LXRlc3QtdGkvU29sb1g=\">https://github.com/smart-test-ti/SoloX</span></p>\n</blockquote>\n<p>基于 python 的移动设备性能测试工具，支持 android，通过 itunes（tidevice 的技术）支持了 ios 设备。</p>\n<h2 id=\"功能介绍\"><a class=\"markdownIt-Anchor\" href=\"#功能介绍\">#</a> 功能介绍</h2>\n<p>使用 python -m solox 启动服务，会自动打开 web 客户端：默认端口为 50003。</p>\n<h3 id=\"性能测试\"><a class=\"markdownIt-Anchor\" href=\"#性能测试\">#</a> 性能测试</h3>\n<ul>\n<li>\n<p>设备类型支持安卓和苹果</p>\n</li>\n<li>\n<p>支持选择设备列表</p>\n</li>\n<li>\n<p>支持选择目标 app</p>\n</li>\n<li>\n<p>支持选择子进程 (仅安卓)</p>\n</li>\n<li>\n<p>支持性能指标的开关 （只控制显示，不控制是否采集）</p>\n<ul>\n<li>CPU</li>\n<li>内存</li>\n<li>流量</li>\n<li>FPS</li>\n<li>电池</li>\n<li>surfaceview (仅安卓)</li>\n<li>wifi (仅安卓)</li>\n<li>GPU （仅苹果）</li>\n</ul>\n</li>\n<li>\n<p>支持显示设备信息</p>\n<ul>\n<li>品牌</li>\n<li>设备名</li>\n<li>系统版本</li>\n<li>序列号</li>\n<li>wifi 地址</li>\n</ul>\n</li>\n<li>\n<p>支持启动数据采集、停止设备采集（此时生成报告）</p>\n</li>\n<li>\n<p>支持显示 logcat 日志 <em>重要</em>   (仅安卓)</p>\n</li>\n<li>\n<p>支持安装应用</p>\n</li>\n<li>\n<p>支持查看当前应用启动时间 （安卓支持较好）</p>\n</li>\n<li>\n<p>支持对比模式 （仅安卓）<br>\n多台设备同时连接，同时测试<br>\n支持</p>\n<ul>\n<li>CPU</li>\n<li>Memory</li>\n<li>NetWorkData</li>\n<li>FPS</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"报告管理\"><a class=\"markdownIt-Anchor\" href=\"#报告管理\">#</a> 报告管理</h3>\n<ul>\n<li>报告展示</li>\n<li>报告管理\n<ul>\n<li>编辑 （场景名）</li>\n<li>导出为 excel</li>\n<li>删除</li>\n</ul>\n</li>\n<li>报告详情\n<ul>\n<li>结果对比</li>\n<li>保存 html</li>\n<li>保存图片</li>\n<li>单个图片导出</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"功能剖析\"><a class=\"markdownIt-Anchor\" href=\"#功能剖析\">#</a> 功能剖析</h2>\n<h3 id=\"web功能\"><a class=\"markdownIt-Anchor\" href=\"#web功能\">#</a> web 功能</h3>\n<h4 id=\"flask服务\"><a class=\"markdownIt-Anchor\" href=\"#flask服务\">#</a> flask 服务</h4>\n<p>web 功能基于 flask flask-template flask-soketio 实现。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>app <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">,</span> template_folder<span class=\"token operator\">=</span><span class=\"token string\">'templates'</span><span class=\"token punctuation\">,</span> static_folder<span class=\"token operator\">=</span><span class=\"token string\">'static'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>socketio <span class=\"token operator\">=</span> SocketIO<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span> cors_allowed_origins<span class=\"token operator\">=</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">startServer</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    socketio<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span> host<span class=\"token operator\">=</span>host<span class=\"token punctuation\">,</span> debug<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> port<span class=\"token operator\">=</span>port<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"自动打开页面\"><a class=\"markdownIt-Anchor\" href=\"#自动打开页面\">#</a> 自动打开页面</h4>\n<p>服务启动时会自动打开浏览器，打开 solox 前端客户端</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">openUrl</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    flag <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">while</span> flag<span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">'Start solox server ...'</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        f <span class=\"token operator\">=</span> Figlet<span class=\"token punctuation\">(</span>font<span class=\"token operator\">=</span><span class=\"token string\">\"slant\"</span><span class=\"token punctuation\">,</span> width<span class=\"token operator\">=</span><span class=\"token number\">300</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>renderText<span class=\"token punctuation\">(</span><span class=\"token string\">\"SOLOX 2. 6. 7\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        flag <span class=\"token operator\">=</span> getServerStatus<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    webbrowser<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://&#123;&#125;:&#123;&#125;/?platform=Android&amp;lan=en'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> new<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">'Running on http://&#123;&#125;:&#123;&#125;/?platform=Android&amp;lan=en (Press CTRL+C to quit)'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>其中，使用了</p>\n<ul>\n<li>Figlet 打印艺术字</li>\n<li>webbrowser  是 python 内置的一个库，可以打开 url</li>\n</ul>\n<h4 id=\"端口检查\"><a class=\"markdownIt-Anchor\" href=\"#端口检查\">#</a> 端口检查</h4>\n<p>服务启动时，还调用了检查端口的函数</p>\n<ul>\n<li>对于非 windows 系统，直接干掉进程</li>\n</ul>\n<pre><code>os.system(&quot;lsof -i:%s| grep LISTEN| awk '&#123;print $2&#125;'|xargs kill -9&quot; % port)\n</code></pre>\n<ul>\n<li>对于 windows 系统\n<ul>\n<li>使用  <code>netstat</code>  命令结合  <code>findstr</code>  过滤器，在指定端口上查找监听的进程。</li>\n<li>读取命令输出的数据，并逐行处理。</li>\n<li>提取每行中的进程 PID，并将其添加到  <code>pid_list</code>  列表中。</li>\n<li>将  <code>pid_list</code>  转换为集合，再转换回列表，以去除重复的 PID。</li>\n<li>选取列表中的第一个 PID，并使用  <code>taskkill</code>  命令强制终止该进程。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"启动\"><a class=\"markdownIt-Anchor\" href=\"#启动\">#</a> 启动</h4>\n<ul>\n<li>检查 python 版本：必选 3.10 以上</li>\n<li>然后使用 Fire 启动</li>\n</ul>\n<blockquote>\n<p>fire 库可以自己的库封装成一个命令 通过 python -m 命令调用</p>\n</blockquote>\n<p>其他所有的功能都是由 http 请求触发，logcat 是一个 websocket<br>\n 前端使用 jquery 处理事件和操作 dom；</p>\n<h3 id=\"设备监听与信息抓取\"><a class=\"markdownIt-Anchor\" href=\"#设备监听与信息抓取\">#</a> 设备监听与信息抓取</h3>\n<ol>\n<li>前端每次打开页面（ <code>$(document).ready</code> ）后，会自动触发连接按钮的点击事件，从而调用 <code>initializeEnv</code>  方法；</li>\n<li><code>initializeEnv</code>  请求接口 /device/ids?platform = 当前选择设备类型</li>\n<li>后端接口：</li>\n</ol>\n<h4 id=\"安卓\"><a class=\"markdownIt-Anchor\" href=\"#安卓\">#</a> 安卓</h4>\n<ul>\n<li>获取到当前的设备 id 列表 （解析命令行 <code>adb devices</code>  的输出）\n<ul>\n<li>获取第一个设备的 pkg 列表 （adb -s deviceID shell pm list package）</li>\n<li>获取设备信息 (安卓基于 <code>adb</code> ,ios 基于 <code>tidevice</code> )</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getDdeviceDetail</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> deviceId<span class=\"token punctuation\">,</span> platform<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    result <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">match</span><span class=\"token punctuation\">(</span>platform<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">case</span> Platform<span class=\"token punctuation\">.</span>Android<span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'brand'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span><span class=\"token string\">'getprop ro.product.brand'</span><span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>deviceId<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span><span class=\"token string\">'getprop ro.product.model'</span><span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>deviceId<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'version'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span><span class=\"token string\">'getprop ro.build.version.release'</span><span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>deviceId<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'serialno'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span><span class=\"token string\">'getprop ro.serialno'</span><span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>deviceId<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            cmd <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'ip addr show wlan0 | </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>filterType<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> link/ether'</span></span>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'wifiadr'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> adb<span class=\"token punctuation\">.</span>shell<span class=\"token punctuation\">(</span>cmd<span class=\"token operator\">=</span>cmd<span class=\"token punctuation\">,</span> deviceId<span class=\"token operator\">=</span>deviceId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">case</span> Platform<span class=\"token punctuation\">.</span>iOS<span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            iosInfo <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>execCmd<span class=\"token punctuation\">(</span><span class=\"token string\">'tidevice info --json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'brand'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> iosInfo<span class=\"token punctuation\">[</span><span class=\"token string\">'DeviceClass'</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> iosInfo<span class=\"token punctuation\">[</span><span class=\"token string\">'DeviceName'</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'version'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> iosInfo<span class=\"token punctuation\">[</span><span class=\"token string\">'ProductVersion'</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'serialno'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> iosInfo<span class=\"token punctuation\">[</span><span class=\"token string\">'SerialNumber'</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            result<span class=\"token punctuation\">[</span><span class=\"token string\">'wifiadr'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> iosInfo<span class=\"token punctuation\">[</span><span class=\"token string\">'WiFiAddress'</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token keyword\">_</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">'&#123;&#125; is undefined'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>platform<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>   </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">return</span> result</pre></td></tr></table></figure><h4 id=\"ios\"><a class=\"markdownIt-Anchor\" href=\"#ios\">#</a> ios</h4>\n<ul>\n<li>获取设备信息 （解析命令行 tidevice list --json）</li>\n<li>获取第一个设备 pkg 列表：  <code>tidevice --udid 设备uid  applist</code></li>\n<li>获取设备详情，同上</li>\n</ul>\n<h3 id=\"性能采集\"><a class=\"markdownIt-Anchor\" href=\"#性能采集\">#</a> 性能采集</h3>\n<p>点击开始按钮，触发启动测试。</p>\n<ul>\n<li>必须先选中设备和应用</li>\n<li>分别调用 collectCpu、collectMem、collectNetwork、collectFps、collectBattery  如果是 ios 系统，还要采集 GPU collectGpu</li>\n<li>这些方法再调用 collectPers 方法（参数包括一个获取采集数据的方法），然后使用<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaGlnaGNoYXJ0cy5jb20v\"> highcharts</span> 绘制图表；其中采集数据的方法作为 highcharts 实例的数据 load 方法，并且图表支持切换时间范围；  这个请求函数成功后会设置一个 settimeout 定时器，一秒钟后再次请求这个接口更新数据，并将数据塞入到图表数据的最新；</li>\n</ul>\n<p>性能采集需要比较复杂，打算分成系列的博客慢慢写一下。</p>\n",
            "tags": [
                "测试开发 性能 工具"
            ]
        }
    ]
}