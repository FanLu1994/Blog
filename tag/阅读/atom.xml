<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://fanlu.top</id>
    <title>何妨吟啸且徐行 • Posts by &#34;阅读&#34; tag</title>
    <link href="https://fanlu.top" />
    <updated>2023-08-12T06:04:34.000Z</updated>
    <category term="CI CD linux" />
    <category term="测试开发 性能 工具" />
    <category term="前端 产品经理" />
    <category term="前端 UI" />
    <category term="golang实验室" />
    <category term="工具 网络" />
    <category term="jenkins CD" />
    <category term="前端 动画 工具" />
    <category term="前端 工具" />
    <category term="前端搬砖指南" />
    <category term="前端 vue go wasm" />
    <category term="阅读 经济" />
    <category term="生活" />
    <category term="云服务器" />
    <category term="工具" />
    <category term="nuxt axiss 前端" />
    <category term="阅读，记录" />
    <category term="阅读 电影 电视" />
    <category term="阅读 电视 播客" />
    <category term="阅读 UP主" />
    <category term="阅读" />
    <category term="游戏 桌游 生活" />
    <category term="前端 网站" />
    <category term="前端 UI 网站" />
    <category term="阅读 记录" />
    <category term="鸡毛蒜皮周刊" />
    <entry>
        <id>https://fanlu.top/2023/08/12/%E8%AF%BB%E5%90%8E%E6%84%9F-%E3%80%8A%E5%91%BD%E8%BF%90%E3%80%8B/</id>
        <title>读后感-《命运》</title>
        <link rel="alternate" href="https://fanlu.top/2023/08/12/%E8%AF%BB%E5%90%8E%E6%84%9F-%E3%80%8A%E5%91%BD%E8%BF%90%E3%80%8B/"/>
        <content type="html">&lt;p&gt;作者是写过《皮囊》的蔡崇达。&lt;/p&gt;
&lt;p&gt;其实对这本书的期待是很高的，因为皮囊很好看。&lt;/p&gt;
&lt;p&gt;看完其实有一点失望。&lt;/p&gt;
&lt;p&gt;对老太（没想到福建那边也是叫老太）的一生的描述，其实有很多很明显的是作者自身的思想看法，很明显的脱离了时代的局限性。&lt;/p&gt;
&lt;p&gt;整个故事对于所谓神明，一直没有同感。对于书名 “命运” 感受也不是很深，感觉书名叫时代更合适一点。&lt;/p&gt;
&lt;p&gt;10 分的话我会给 5 分。&lt;/p&gt;
&lt;p&gt;不推荐阅读。&lt;/p&gt;
</content>
        <category term="阅读" />
        <updated>2023-08-12T06:04:34.000Z</updated>
    </entry>
    <entry>
        <id>https://fanlu.top/2023/08/06/%E6%9C%AC%E5%91%A8%E7%9C%8B%E4%BA%86%E5%95%A5-2023%E5%B9%B48%E6%9C%885%E6%97%A5/</id>
        <title>本周看了啥-2023年8月5日</title>
        <link rel="alternate" href="https://fanlu.top/2023/08/06/%E6%9C%AC%E5%91%A8%E7%9C%8B%E4%BA%86%E5%95%A5-2023%E5%B9%B48%E6%9C%885%E6%97%A5/"/>
        <content type="html">&lt;h1 id=&#34;不蒜子网站访问统计原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#不蒜子网站访问统计原理&#34;&gt;#&lt;/a&gt; 不蒜子网站访问统计原理&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly94dWpzMDgxMy5naXRodWIuaW8vZ2l0cGFnZS8yMDIwLzA5LzI1L2ludHJvZHVjdGlvbi1vZi1idS1zdWFuLXppLw==&#34;&gt;https://xujs0813.github.io/gitpage/2020/09/25/introduction-of-bu-suan-zi/&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9pYnJ1Y2UuaW5mby8yMDE1LzA0LzA0L2J1c3VhbnppLyNtb3Jl&#34;&gt;https://ibruce.info/2015/04/04/busuanzi/#more&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;还是依靠请求和数据记录来实现的，不过实现的相当优雅，感谢作者的贡献&lt;/p&gt;
&lt;h1 id=&#34;css原子化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#css原子化&#34;&gt;#&lt;/a&gt; CSS 原子化&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC83MTYxMjExOTQxNjUyNzkxMzA0&#34;&gt;https://juejin.cn/post/7161211941652791304&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其实就是针对一种多处使用的样式类的封装。&lt;br&gt;
tailwindcss 就是一种典型的 css 原子化的产物。&lt;br&gt;
但是 tailwindcss 会让代码变得很难看，而且会给后面的维护修改带来麻烦，所以可以使用它的 apply 语法，例如，这样可以美化代码，并且好维护&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;.menu &amp;#123; @apply p-2 text-gray-900 font-semibold; &amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;游戏本土化测试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#游戏本土化测试&#34;&gt;#&lt;/a&gt; 游戏本土化测试&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93ZWliby5jb20vdHRhcnRpY2xlL3Avc2hvdz9pZD0yMzA5NDA0OTI4OTg1NTgxODc5NDQ4&#34;&gt;https://weibo.com/ttarticle/p/show?id=2309404928985581879448&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;现在大部分的游戏都会在多个国家和区域发行，每个地方的语言不一样，因此需要对各个地区进行本土化的翻译，带有文字的图片也要处理多份。&lt;br&gt;
对不同语言版本的游戏，当然要注重文本的翻译质量，并且翻译的要本土化，比如赛博朋克 2077 的中文就是翻译的比较接地气的一类，还有今年的原子之心，本土化做的也相当不错，文本的翻译质量也直接影响到配音质量。&lt;br&gt;
文本除了翻译意思之外，还要处理一些俚语、还要避免与本地文化冲突。&lt;br&gt;
这篇文章就介绍了本地化测试 LQA 的工作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;语言翻译测试
&lt;ul&gt;
&lt;li&gt;未翻译的内容&lt;/li&gt;
&lt;li&gt;界面显示&lt;/li&gt;
&lt;li&gt;语言是否通顺合理&lt;/li&gt;
&lt;li&gt;适配性和配音一致性&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;母语测试
&lt;ul&gt;
&lt;li&gt;文化差异相关&lt;/li&gt;
&lt;li&gt;图案相关&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;python调试分析工具&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#python调试分析工具&#34;&gt;#&lt;/a&gt; python 调试分析工具&lt;/h1&gt;
&lt;p&gt;python 在运行种有事会出现内存占用增加、cpu 使用爆炸等问题，有一些工具可以帮助我们定位到是哪些代码造成了这个问题&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;linux 自带的 pstack gdb&lt;/li&gt;
&lt;li&gt;pystack-debugger  定位到代码行&lt;/li&gt;
&lt;li&gt;hypno&lt;/li&gt;
&lt;li&gt;py-spy&lt;/li&gt;
&lt;li&gt;austin&lt;/li&gt;
&lt;li&gt;pyinstrument&lt;/li&gt;
&lt;li&gt;pystuck&lt;/li&gt;
&lt;li&gt;pyfalme&lt;/li&gt;
&lt;li&gt;pyrasite&lt;/li&gt;
&lt;li&gt;pydbattach&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;深入浅出nodejs&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#深入浅出nodejs&#34;&gt;#&lt;/a&gt; 深入浅出 Nodejs&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;作者：朴灵&lt;br&gt;
 ISBN: 9787115335500&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;全面介绍了 nodejs 的原理、使用、框架等等。质量很高，很实用。&lt;br&gt;
其实代码初学者可以选择 js 而非 python 来作为首选语言，毕竟 js 学会，前后端就都会了。&lt;/p&gt;
&lt;h1 id=&#34;诡秘之主&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#诡秘之主&#34;&gt;#&lt;/a&gt; 诡秘之主&lt;/h1&gt;
&lt;p&gt;终于看完了，感觉自己是个大冤种。后期基本快速读完了，结尾很烂。&lt;br&gt;
作者显然很想给作品增加文学性，尽可能写的很厚重，但是作品题材又支撑不起来这样的想法，所以就显得很无聊，爽文又不够爽，文学也不够，就有点别扭。以后网文还是看点轻松的。&lt;/p&gt;
</content>
        <category term="阅读" />
        <updated>2023-08-06T06:29:15.000Z</updated>
    </entry>
</feed>
