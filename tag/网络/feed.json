{
    "version": "https://jsonfeed.org/version/1",
    "title": "何妨吟啸且徐行 • All posts by \"网络\" tag",
    "description": "",
    "home_page_url": "https://fanlu.top",
    "items": [
        {
            "id": "https://fanlu.top/2023/10/18/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/ghz-grpc%E5%8E%8B%E6%B5%8B%E5%B7%A5%E5%85%B7/",
            "url": "https://fanlu.top/2023/10/18/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/ghz-grpc%E5%8E%8B%E6%B5%8B%E5%B7%A5%E5%85%B7/",
            "title": "ghz-grpc压测工具",
            "date_published": "2023-10-18T13:59:42.000Z",
            "content_html": "<h1 id=\"介绍\"><a class=\"markdownIt-Anchor\" href=\"#介绍\">#</a> 介绍</h1>\n<h2 id=\"配置\"><a class=\"markdownIt-Anchor\" href=\"#配置\">#</a> 配置</h2>\n<ul>\n<li>支持配置文件、命令行配置</li>\n<li>可以指定 proto 源文件或者使用 protoc 生成的 protoset 描述文件</li>\n<li>支持指定协议名</li>\n<li>支持导入原始路径列表</li>\n<li>可以指定秘钥信息</li>\n<li>可以指定 tls 服务器名称</li>\n<li>可以跳过 tls</li>\n<li>是否异步请求，不等待上一个请求完成</li>\n<li>支持设置 rps</li>\n<li>支持指定加载进度\n<ul>\n<li>即可以逐步提高 rps 到预设值</li>\n</ul>\n</li>\n<li>可以指定并发工作器数量</li>\n<li>可以指定并发工作器添加策略\n<ul>\n<li>即逐步增加工作线程</li>\n</ul>\n</li>\n<li>指定请求总数</li>\n<li>指定超时时间，默认 20，不限制则设为 0</li>\n<li>指定持续时间</li>\n<li>指定停止策略：关闭、等待请求返回、忽略则忽略正在运行的请求</li>\n<li>指定请求体，以 json 格式</li>\n<li>指定请求体，以文件形式</li>\n<li>制定请求体，以二进制形式或者二进制文件</li>\n<li>指定元数据 ，json 字符串或者文件</li>\n<li>流式接口的传输测试</li>\n<li>…</li>\n<li>指定连接数，默认一个连接</li>\n<li>指定初始连接超时时间</li>\n<li>可以使用的 cpu 内核数</li>\n<li>指定客户端负载策略</li>\n</ul>\n<h2 id=\"输出\"><a class=\"markdownIt-Anchor\" href=\"#输出\">#</a> 输出</h2>\n<ul>\n<li>summary</li>\n<li>csv 格式</li>\n<li>html 格式</li>\n<li>json 格式</li>\n<li>prometheus 格式</li>\n<li>influxDB 格式</li>\n</ul>\n<h2 id=\"实践\"><a class=\"markdownIt-Anchor\" href=\"#实践\">#</a> 实践</h2>\n<h3 id=\"一个grpc服务demo\"><a class=\"markdownIt-Anchor\" href=\"#一个grpc服务demo\">#</a> 一个 grpc 服务 demo</h3>\n<h4 id=\"pb编写\"><a class=\"markdownIt-Anchor\" href=\"#pb编写\">#</a> pb 编写</h4>\n<pre><code class=\"language-proto\">syntax = &quot;proto3&quot;;  \npackage pb;  \n  \noption go_package=&quot;./;pb&quot;;  \n  \nmessage HelloRequest&#123;  \n  string name = 1;  \n  int32 id = 2;  \n&#125;  \n  \nmessage HelloReply&#123;  \n  string name = 1;  \n  string message = 2;  \n&#125;  \n  \n  \nservice HelloService&#123;  \n  rpc Hello(HelloRequest) returns (HelloReply);  \n&#125;\n</code></pre>\n<h4 id=\"生成go文件和服务端代码\"><a class=\"markdownIt-Anchor\" href=\"#生成go文件和服务端代码\">#</a> 生成 go 文件和服务端代码</h4>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>protoc <span class=\"token parameter variable\">--go_out</span><span class=\"token operator\">=</span>. <span class=\"token parameter variable\">--go_opt</span><span class=\"token operator\">=</span>paths<span class=\"token operator\">=</span>source_relative --go-grpc_out<span class=\"token operator\">=</span>. --go-grpc_opt<span class=\"token operator\">=</span>paths<span class=\"token operator\">=</span>source_relative *.proto</pre></td></tr></table></figure><h4 id=\"写一个服务\"><a class=\"markdownIt-Anchor\" href=\"#写一个服务\">#</a> 写一个服务</h4>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> main  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token string\">\"context\"</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token string\">\"fmt\"</span>    <span class=\"token string\">\"google.golang.org/grpc\"</span>    <span class=\"token string\">\"grpc_demo/pb\"</span>    <span class=\"token string\">\"log\"</span>    <span class=\"token string\">\"net\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">(</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    port <span class=\"token operator\">=</span> <span class=\"token string\">\":50051\"</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">type</span> myServer <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    pb<span class=\"token punctuation\">.</span>UnimplementedHelloServiceServer  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">*</span>myServer<span class=\"token punctuation\">)</span> <span class=\"token function\">Hello</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> req <span class=\"token operator\">*</span>pb<span class=\"token punctuation\">.</span>HelloRequest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pb<span class=\"token punctuation\">.</span>HelloReply<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello receice message:\"</span><span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    rep <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>pb<span class=\"token punctuation\">.</span>HelloReply<span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>       Name<span class=\"token punctuation\">:</span>    req<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>       Message<span class=\"token punctuation\">:</span> <span class=\"token string\">\"你好呀\"</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">return</span> rep<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>  </pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    lis<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> net<span class=\"token punctuation\">.</span><span class=\"token function\">Listen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tcp\"</span><span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>       log<span class=\"token punctuation\">.</span><span class=\"token function\">Fatalf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed to listen: %v\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token comment\">// 创建一个 gRPC 服务端实例  </span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    s <span class=\"token operator\">:=</span> grpc<span class=\"token punctuation\">.</span><span class=\"token function\">NewServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\">// 注册  </span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    pb<span class=\"token punctuation\">.</span><span class=\"token function\">RegisterHelloServiceServer</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>myServer<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">Serve</span><span class=\"token punctuation\">(</span>lis<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"38\"></td><td><pre>       log<span class=\"token punctuation\">.</span><span class=\"token function\">Fatalf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed to serve: %v\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"压测实践\"><a class=\"markdownIt-Anchor\" href=\"#压测实践\">#</a> 压测实践</h3>\n<p>其中参数解释</p>\n<ul>\n<li>proto 指定原型</li>\n<li>rps 指定目标 rps 值</li>\n<li>total 指定目标请求数</li>\n<li>call 指定要压的方法名</li>\n<li>data 指定请求体数据 json 格式，也可以是数组，那么会轮流请求给定的请求体</li>\n<li>skipTLS insecure 说明使用明文压测</li>\n<li>最后是服务地址</li>\n</ul>\n<p>结果可以看到</p>\n<ul>\n<li>总结：总请求数、总消耗时间、最慢请求、最快请求、平均时间、QPS</li>\n<li>响应时间直方图</li>\n<li>百分比延迟分布</li>\n<li>响应码分布</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ghz <span class=\"token parameter variable\">--proto</span><span class=\"token operator\">=</span>hello.proto <span class=\"token parameter variable\">--rps</span><span class=\"token operator\">=</span><span class=\"token number\">100</span> <span class=\"token parameter variable\">--total</span><span class=\"token operator\">=</span><span class=\"token number\">100</span> <span class=\"token parameter variable\">--call</span> pb.HelloService.Hello <span class=\"token parameter variable\">--data</span><span class=\"token operator\">=</span><span class=\"token string\">'&#123;\"name\": \"xiamu\",       \"id\": 1&#125;'</span> <span class=\"token parameter variable\">--skipTLS</span> <span class=\"token parameter variable\">--insecure</span>  <span class=\"token number\">192.168</span>.31.129:50051</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Summary:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  Count:\t<span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  Total:\t<span class=\"token number\">1.06</span> s</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  Slowest:\t<span class=\"token number\">497.68</span> ms</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  Fastest:\t<span class=\"token number\">4.33</span> ms</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  Average:\t<span class=\"token number\">189.71</span> ms</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  Requests/sec:\t<span class=\"token number\">94.43</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Response <span class=\"token function\">time</span> histogram:</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token number\">4.334</span>   <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>  <span class=\"token operator\">|</span>∎∎</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token number\">53.669</span>  <span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token number\">103.004</span> <span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token number\">152.339</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token number\">201.674</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token number\">251.008</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token number\">300.343</span> <span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token number\">349.678</span> <span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span>  <span class=\"token operator\">|</span>∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token number\">399.013</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>  <span class=\"token operator\">|</span>∎∎∎∎∎∎∎∎∎∎∎</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token number\">448.348</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>  <span class=\"token operator\">|</span>∎∎∎∎∎∎∎∎∎∎∎</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token number\">497.683</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>  <span class=\"token operator\">|</span>∎∎∎∎∎∎∎∎∎∎∎</pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>Latency distribution:</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token number\">10</span> % <span class=\"token keyword\">in</span> <span class=\"token number\">36.96</span> ms</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token number\">25</span> % <span class=\"token keyword\">in</span> <span class=\"token number\">67.50</span> ms</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token number\">50</span> % <span class=\"token keyword\">in</span> <span class=\"token number\">166.24</span> ms</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token number\">75</span> % <span class=\"token keyword\">in</span> <span class=\"token number\">286.13</span> ms</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token number\">90</span> % <span class=\"token keyword\">in</span> <span class=\"token number\">397.86</span> ms</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token number\">95</span> % <span class=\"token keyword\">in</span> <span class=\"token number\">448.03</span> ms</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token number\">99</span> % <span class=\"token keyword\">in</span> <span class=\"token number\">487.83</span> ms</pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>Status code distribution:</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token punctuation\">[</span>OK<span class=\"token punctuation\">]</span>   <span class=\"token number\">100</span> responses</pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>~/code/ghz_test ❯</pre></td></tr></table></figure><h2 id=\"原理\"><a class=\"markdownIt-Anchor\" href=\"#原理\">#</a> 原理</h2>\n<p>本质上还是 go 协程来实现的。<br>\n各个模块区分的很清晰：</p>\n<ul>\n<li>请求模块</li>\n<li>数据处理模块</li>\n<li>日志模块</li>\n<li>统计模块</li>\n<li>输出模块</li>\n<li>连接管理模块</li>\n</ul>\n<p>如果用来做自己的压测工具，并且接入 prometheus 监控应该不需要花太大功夫。<br>\n此外如果将其改造为 http 的压测，应该也非难事。</p>\n<h2 id=\"未来\"><a class=\"markdownIt-Anchor\" href=\"#未来\">#</a> 未来</h2>\n<p>代码里面还包含一个 ghz 命令，不过还在开发中，可以期待一下。</p>\n",
            "tags": [
                "工具",
                "网络"
            ]
        },
        {
            "id": "https://fanlu.top/2023/08/27/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/grpcurl/",
            "url": "https://fanlu.top/2023/08/27/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/grpcurl/",
            "title": "grpcurl",
            "date_published": "2023-08-27T05:41:39.000Z",
            "content_html": "<h2 id=\"curl\"><a class=\"markdownIt-Anchor\" href=\"#curl\">#</a> cURL</h2>\n<p>curl 是一个常见的命令行工具，用来请求 web 服务器接口，c 就是 client 的意思。<br>\ncurl 支持的协议很多</p>\n<ul>\n<li>http</li>\n<li>https</li>\n<li>FTP</li>\n<li>SCP</li>\n<li>SMTP</li>\n<li>Websockect</li>\n</ul>\n<p>其使用方法可以参考这里： <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVhbnlpZmVuZy5jb20vYmxvZy8yMDE5LzA5L2N1cmwtcmVmZXJlbmNlLmh0bWw=\">https://www.ruanyifeng.com/blog/2019/09/curl-reference.html</span></p>\n<p>但是 grpc 是不支持的.</p>\n<h2 id=\"grpcurl\"><a class=\"markdownIt-Anchor\" href=\"#grpcurl\">#</a> grpcurl</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2Z1bGxzdG9yeWRldi9ncnBjdXJs\">grpcurl</span> 就是用来支持 grpc 的一个工具。<br>\n支持功能包括：</p>\n<ul>\n<li>调用 RPC 接口，支持携带参数</li>\n<li>可以根据 proto 列出来所有的服务</li>\n<li>可以通过反射生成服务的描述</li>\n</ul>\n<h2 id=\"试用\"><a class=\"markdownIt-Anchor\" href=\"#试用\">#</a> 试用</h2>\n<h3 id=\"环境搭建\"><a class=\"markdownIt-Anchor\" href=\"#环境搭建\">#</a> 环境搭建</h3>\n<ul>\n<li>安装 go</li>\n<li>安装 grpcurl</li>\n<li>proto 生成相关（非必须）<br>\n这里就不赘述了。</li>\n</ul>\n<h3 id=\"启动grpc服务\"><a class=\"markdownIt-Anchor\" href=\"#启动grpc服务\">#</a> 启动 grpc 服务</h3>\n<p>首先本地起一个 grpc 服务，这里可以简单使用官方提供的模板。</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> clone <span class=\"token parameter variable\">-b</span> v1.57.0 <span class=\"token parameter variable\">--depth</span> <span class=\"token number\">1</span> https://github.com/grpc/grpc-go</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> grpc-go/examples/helloworld</pre></td></tr></table></figure><p>修改服务，因为 grpcurl 需要服务器支持反射</p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 修改 grpc-go/examples/helloworld/greeter_server/main.go</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>s <span class=\"token operator\">:=</span> grpc<span class=\"token punctuation\">.</span><span class=\"token function\">NewServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>reflection<span class=\"token punctuation\">.</span><span class=\"token function\">Register</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 添加这一行</span></pre></td></tr></table></figure><p>然后启动服务</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>go run main.go</pre></td></tr></table></figure><h3 id=\"使用grpcurl\"><a class=\"markdownIt-Anchor\" href=\"#使用grpcurl\">#</a> 使用 grpcurl</h3>\n<h4 id=\"列举服务\"><a class=\"markdownIt-Anchor\" href=\"#列举服务\">#</a> 列举服务</h4>\n<p>因为本地不是 tls 服务，需要加 - plaintext</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">(</span>base<span class=\"token punctuation\">)</span> PS C:<span class=\"token punctuation\">\\</span>Users<span class=\"token punctuation\">\\</span>fanlu<span class=\"token operator\">></span> grpcurl <span class=\"token parameter variable\">-plaintext</span> localhost:50051 list</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>grpc.reflection.v1.ServerReflection</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>grpc.reflection.v1alpha.ServerReflection</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>helloworld.Greeter</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>// 指定service</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">(</span>base<span class=\"token punctuation\">)</span> PS C:<span class=\"token punctuation\">\\</span>Users<span class=\"token punctuation\">\\</span>fanlu<span class=\"token operator\">></span> grpcurl <span class=\"token parameter variable\">-plaintext</span> localhost:50051 list helloworld.Greeter</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>helloworld.Greeter.SayHello</pre></td></tr></table></figure><h4 id=\"描述协议\"><a class=\"markdownIt-Anchor\" href=\"#描述协议\">#</a> 描述协议</h4>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">(</span>base<span class=\"token punctuation\">)</span> PS C:<span class=\"token punctuation\">\\</span>Users<span class=\"token punctuation\">\\</span>fanlu<span class=\"token operator\">></span> grpcurl <span class=\"token parameter variable\">-plaintext</span> localhost:50051 describe helloworld.Greeter.SayHello</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>helloworld.Greeter.SayHello is a method:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>rpc SayHello <span class=\"token punctuation\">(</span> .helloworld.HelloRequest <span class=\"token punctuation\">)</span> returns <span class=\"token punctuation\">(</span> .helloworld.HelloReply <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"调用协议\"><a class=\"markdownIt-Anchor\" href=\"#调用协议\">#</a> 调用协议</h4>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">(</span>base<span class=\"token punctuation\">)</span> PS C:<span class=\"token punctuation\">\\</span>Users<span class=\"token punctuation\">\\</span>fanlu<span class=\"token operator\">></span> grpcurl <span class=\"token parameter variable\">-plaintext</span> localhost:50051 helloworld.Greeter.SayHello</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token string\">\"message\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"Hello \"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"注意要区分大小写\"><a class=\"markdownIt-Anchor\" href=\"#注意要区分大小写\">#</a> 注意：要区分大小写！</h2>\n<p>更复杂的用法还没用过。</p>\n",
            "tags": [
                "工具",
                "网络"
            ]
        }
    ]
}